import Gaffer
import GafferDispatch
import GafferImage
import GafferOSL
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 8, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Constant"] = GafferImage.Constant( "Constant" )
parent.addChild( __children["Constant"] )
__children["Constant"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLImage"] = GafferOSL.OSLImage( "OSLImage" )
parent.addChild( __children["OSLImage"] )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel2", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel3", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "intPointRGB", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "intPointA", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "intPointZ", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "intPointZBack", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "intVolumeRGB", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "intVolumeA", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "intVolumeZ", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "intVolumeZBack", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "floatPointRGB", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "floatPointA", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "floatPointZ", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "floatPointZBack", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "floatVolumeRGB", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "floatVolumeA", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "floatVolumeZ", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "floatVolumeZBack", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLImage1"] = GafferOSL.OSLImage( "OSLImage1" )
parent.addChild( __children["OSLImage1"] )
__children["OSLImage1"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage1"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage1"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel2", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage1"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel3", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLImage2"] = GafferOSL.OSLImage( "OSLImage2" )
parent.addChild( __children["OSLImage2"] )
__children["OSLImage2"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage2"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage2"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel2", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage2"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel3", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLImage3"] = GafferOSL.OSLImage( "OSLImage3" )
parent.addChild( __children["OSLImage3"] )
__children["OSLImage3"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage3"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage3"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel2", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage3"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel3", Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Premultiply"] = GafferImage.Premultiply( "Premultiply" )
parent.addChild( __children["Premultiply"] )
__children["Premultiply"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Premultiply1"] = GafferImage.Premultiply( "Premultiply1" )
parent.addChild( __children["Premultiply1"] )
__children["Premultiply1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Premultiply2"] = GafferImage.Premultiply( "Premultiply2" )
parent.addChild( __children["Premultiply2"] )
__children["Premultiply2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Premultiply3"] = GafferImage.Premultiply( "Premultiply3" )
parent.addChild( __children["Premultiply3"] )
__children["Premultiply3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestMerge"] = GafferImage.DeepMerge( "TestMerge" )
parent.addChild( __children["TestMerge"] )
__children["TestMerge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestMerge"]["in"].addChild( GafferImage.ImagePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestMerge"]["in"].addChild( GafferImage.ImagePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestMerge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DeepTidy"] = GafferImage.DeepTidy( "DeepTidy" )
parent.addChild( __children["DeepTidy"] )
__children["DeepTidy"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter"] = GafferImage.ImageWriter( "ImageWriter" )
parent.addChild( __children["ImageWriter"] )
__children["ImageWriter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter1"] = GafferImage.ImageWriter( "ImageWriter1" )
parent.addChild( __children["ImageWriter1"] )
__children["ImageWriter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter2"] = GafferImage.ImageWriter( "ImageWriter2" )
parent.addChild( __children["ImageWriter2"] )
__children["ImageWriter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter3"] = GafferImage.ImageWriter( "ImageWriter3" )
parent.addChild( __children["ImageWriter3"] )
__children["ImageWriter3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"] = GafferDispatch.TaskList( "TaskList" )
parent.addChild( __children["TaskList"] )
__children["TaskList"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 33707 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Constant"]["format"].setValue( GafferImage.Format( 64, 64, 1.000 ) )
Gaffer.Metadata.registerValue( __children["Constant"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["Constant"]["__uiPosition"].setValue( imath.V2f( 39.093441, 14.6540718 ) )
__children["OSLImage"]["in"].setInput( __children["Constant"]["out"] )
__children["OSLImage"]["channels"]["channel"]["value"].setInput( __children["OSLCode"]["out"]["intPointRGB"] )
__children["OSLImage"]["channels"]["channel1"]["name"].setValue( 'A' )
__children["OSLImage"]["channels"]["channel1"]["value"].setInput( __children["OSLCode"]["out"]["intPointA"] )
__children["OSLImage"]["channels"]["channel2"]["name"].setValue( 'Z' )
__children["OSLImage"]["channels"]["channel2"]["value"].setInput( __children["OSLCode"]["out"]["intPointZ"] )
__children["OSLImage"]["channels"]["channel3"]["name"].setValue( 'ZBack' )
__children["OSLImage"]["channels"]["channel3"]["value"].setInput( __children["OSLCode"]["out"]["intPointZBack"] )
__children["OSLImage"]["__uiPosition"].setValue( imath.V2f( -10.9950485, 4.97204065 ) )
__children["OSLCode"]["code"].setValue( 'float alpha, a, b;\n\nintPointRGB = cellnoise( P );\nalpha = cellnoise( P + 100 ) * 2.05;\nintPointA = alpha <= 1 ? max( 0, alpha - 0.05 ) : min( 1, log( alpha - 1 ) / 100 + 1 );\nintPointZ = int( cellnoise( P + 200 ) * 5 );\nintPointZBack = intPointZ;\n\nintVolumeRGB = cellnoise( P + 300 );\nalpha = cellnoise( P + 400 ) * 2.05;\nintVolumeA = alpha <= 1 ? max( 0, alpha - 0.05 ) : min( 1, log( alpha - 1 ) / 100 + 1 );\na = int( cellnoise( P + 500 ) * 5 );\nb = int( cellnoise( P + 600 ) * 5 );\nintVolumeZ = min( a, b );\nintVolumeZBack = max( a, b );\n\nfloatPointRGB = cellnoise( P + 700 );\nalpha = cellnoise( P + 800 ) * 2.05;\nfloatPointA = alpha <= 1 ? max( 0, alpha - 0.05 ) : min( 1, log( alpha - 1 ) / 100 + 1 );\nfloatPointZ = cellnoise( P + 900 ) * 4;\nfloatPointZBack = floatPointZ;\n\nfloatVolumeRGB = cellnoise( P + 1000 );\nalpha = cellnoise( P + 1100 ) * 2.05;\nfloatVolumeA = alpha <= 1 ? max( 0, alpha - 0.05 ) : min( 1, log( alpha - 1 ) / 100 + 1 );\na = cellnoise( P + 1200 ) * 4;\nb = cellnoise( P + 1300 ) * 4;\nfloatVolumeZ = min( a, b );\nfloatVolumeZBack = max( a, b );' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -27.6088562, -1.62795949 ) )
__children["OSLImage1"]["in"].setInput( __children["Constant"]["out"] )
__children["OSLImage1"]["channels"]["channel"]["value"].setInput( __children["OSLCode"]["out"]["intVolumeRGB"] )
__children["OSLImage1"]["channels"]["channel1"]["name"].setValue( 'A' )
__children["OSLImage1"]["channels"]["channel1"]["value"].setInput( __children["OSLCode"]["out"]["intVolumeA"] )
__children["OSLImage1"]["channels"]["channel2"]["name"].setValue( 'Z' )
__children["OSLImage1"]["channels"]["channel2"]["value"].setInput( __children["OSLCode"]["out"]["intVolumeZ"] )
__children["OSLImage1"]["channels"]["channel3"]["name"].setValue( 'ZBack' )
__children["OSLImage1"]["channels"]["channel3"]["value"].setInput( __children["OSLCode"]["out"]["intVolumeZBack"] )
__children["OSLImage1"]["__uiPosition"].setValue( imath.V2f( 5.79343319, 0.172040835 ) )
__children["OSLImage2"]["in"].setInput( __children["Constant"]["out"] )
__children["OSLImage2"]["channels"]["channel"]["value"].setInput( __children["OSLCode"]["out"]["floatPointRGB"] )
__children["OSLImage2"]["channels"]["channel1"]["name"].setValue( 'A' )
__children["OSLImage2"]["channels"]["channel1"]["value"].setInput( __children["OSLCode"]["out"]["floatPointA"] )
__children["OSLImage2"]["channels"]["channel2"]["name"].setValue( 'Z' )
__children["OSLImage2"]["channels"]["channel2"]["value"].setInput( __children["OSLCode"]["out"]["floatPointZ"] )
__children["OSLImage2"]["channels"]["channel3"]["name"].setValue( 'ZBack' )
__children["OSLImage2"]["channels"]["channel3"]["value"].setInput( __children["OSLCode"]["out"]["floatPointZBack"] )
__children["OSLImage2"]["__uiPosition"].setValue( imath.V2f( 22.4955826, -4.62795925 ) )
__children["OSLImage3"]["in"].setInput( __children["Constant"]["out"] )
__children["OSLImage3"]["channels"]["channel"]["value"].setInput( __children["OSLCode"]["out"]["floatVolumeRGB"] )
__children["OSLImage3"]["channels"]["channel1"]["name"].setValue( 'A' )
__children["OSLImage3"]["channels"]["channel1"]["value"].setInput( __children["OSLCode"]["out"]["floatVolumeA"] )
__children["OSLImage3"]["channels"]["channel2"]["name"].setValue( 'Z' )
__children["OSLImage3"]["channels"]["channel2"]["value"].setInput( __children["OSLCode"]["out"]["floatVolumeZ"] )
__children["OSLImage3"]["channels"]["channel3"]["name"].setValue( 'ZBack' )
__children["OSLImage3"]["channels"]["channel3"]["value"].setInput( __children["OSLCode"]["out"]["floatVolumeZBack"] )
__children["OSLImage3"]["__uiPosition"].setValue( imath.V2f( 39.0934372, -9.42795849 ) )
__children["Premultiply"]["in"].setInput( __children["OSLImage"]["out"] )
__children["Premultiply"]["__uiPosition"].setValue( imath.V2f( -10.9950485, -16.7229233 ) )
__children["Premultiply1"]["in"].setInput( __children["OSLImage1"]["out"] )
__children["Premultiply1"]["__uiPosition"].setValue( imath.V2f( 5.79343319, -16.6530533 ) )
__children["Premultiply2"]["in"].setInput( __children["OSLImage2"]["out"] )
__children["Premultiply2"]["__uiPosition"].setValue( imath.V2f( 22.4955826, -16.5028019 ) )
__children["Premultiply3"]["in"].setInput( __children["OSLImage3"]["out"] )
__children["Premultiply3"]["__uiPosition"].setValue( imath.V2f( 39.0934372, -16.6099892 ) )
__children["TestMerge"]["in"][0].setInput( __children["Premultiply"]["out"] )
__children["TestMerge"]["in"][1].setInput( __children["Premultiply1"]["out"] )
__children["TestMerge"]["in"][2].setInput( __children["Premultiply2"]["out"] )
__children["TestMerge"]["in"][3].setInput( __children["Premultiply3"]["out"] )
__children["TestMerge"]["__uiPosition"].setValue( imath.V2f( 70.9007492, -33.0305099 ) )
__children["DeepTidy"]["in"].setInput( __children["TestMerge"]["out"] )
__children["DeepTidy"]["__uiPosition"].setValue( imath.V2f( 70.9016724, -41.1945724 ) )
__children["ImageWriter"]["in"].setInput( __children["Premultiply"]["out"] )
__children["ImageWriter"]["fileName"].setValue( '${GAFFER_ROOT}/python/GafferImageTest/images/deepIntPoints.exr' )
__children["ImageWriter"]["openexr"]["depthDataType"].setValue( '' )
__children["ImageWriter"]["__uiPosition"].setValue( imath.V2f( -12.4950485, -32.0990753 ) )
__children["ImageWriter1"]["in"].setInput( __children["Premultiply1"]["out"] )
__children["ImageWriter1"]["fileName"].setValue( '${GAFFER_ROOT}/python/GafferImageTest/images/deepIntVolumes.exr' )
__children["ImageWriter1"]["openexr"]["depthDataType"].setValue( '' )
__children["ImageWriter1"]["__uiPosition"].setValue( imath.V2f( 4.29343319, -32.0292053 ) )
__children["ImageWriter2"]["in"].setInput( __children["Premultiply2"]["out"] )
__children["ImageWriter2"]["fileName"].setValue( '${GAFFER_ROOT}/python/GafferImageTest/images/deepFloatPoints.exr' )
__children["ImageWriter2"]["openexr"]["depthDataType"].setValue( '' )
__children["ImageWriter2"]["__uiPosition"].setValue( imath.V2f( 20.9955826, -31.8789558 ) )
__children["ImageWriter3"]["in"].setInput( __children["Premultiply3"]["out"] )
__children["ImageWriter3"]["fileName"].setValue( '${GAFFER_ROOT}/python/GafferImageTest/images/deepFloatVolumes.exr' )
__children["ImageWriter3"]["openexr"]["depthDataType"].setValue( '' )
__children["ImageWriter3"]["__uiPosition"].setValue( imath.V2f( 37.5934372, -31.9861412 ) )
__children["TaskList"]["preTasks"][0].setInput( __children["ImageWriter"]["task"] )
__children["TaskList"]["preTasks"][1].setInput( __children["ImageWriter1"]["task"] )
__children["TaskList"]["preTasks"][2].setInput( __children["ImageWriter2"]["task"] )
__children["TaskList"]["preTasks"][3].setInput( __children["ImageWriter3"]["task"] )
__children["TaskList"]["__uiPosition"].setValue( imath.V2f( 12.9709988, -42.2739563 ) )


del __children

