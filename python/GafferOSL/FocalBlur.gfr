import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 6, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "renderPass", Gaffer.StringPlug( "value", defaultValue = '', ), "renderPass", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"] = Gaffer.Box( "FocalBlur" )
parent.addChild( __children["FocalBlur"] )
__children["FocalBlur"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["FocalBlur"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["FocalBlur"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["FocalBlur"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.DiskBlur( "InfillSourceDiskBlur" ) )
__children["FocalBlur"]["InfillSourceDiskBlur"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Grade( "InvertAlpha" ) )
__children["FocalBlur"]["InvertAlpha"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.CopyChannels( "CopyInfillChannels" ) )
__children["FocalBlur"]["CopyInfillChannels"]["in"].resize( 3 )
__children["FocalBlur"]["CopyInfillChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Premultiply( "MultiplyInfill" ) )
__children["FocalBlur"]["MultiplyInfill"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Merge( "MergeUnInfillSources" ) )
__children["FocalBlur"]["MergeUnInfillSources"]["in"].resize( 4 )
__children["FocalBlur"]["MergeUnInfillSources"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLImage( "UnsqrtSignedRadiusImage" ) )
__children["FocalBlur"]["UnsqrtSignedRadiusImage"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"]["UnsqrtSignedRadiusImage"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), True, "channel1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"]["UnsqrtSignedRadiusImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLCode( "UnsqrtSignedRadius" ) )
__children["FocalBlur"]["UnsqrtSignedRadius"]["out"].addChild( Gaffer.FloatPlug( "averageRadius", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["UnsqrtSignedRadius"]["out"].addChild( Gaffer.FloatPlug( "averageSignedRadius", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["UnsqrtSignedRadius"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Merge( "MergeInfillSources" ) )
__children["FocalBlur"]["MergeInfillSources"]["in"].resize( 3 )
__children["FocalBlur"]["MergeInfillSources"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Unpremultiply( "UnpremultiplyInfill" ) )
__children["FocalBlur"]["UnpremultiplyInfill"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop3" ) )
__children["FocalBlur"]["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.CopyChannels( "MergeWithMainChannels" ) )
__children["FocalBlur"]["MergeWithMainChannels"]["in"].resize( 3 )
__children["FocalBlur"]["MergeWithMainChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Grade( "Grade21" ) )
__children["FocalBlur"]["Grade21"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLImage( "SqrtRadiusImage" ) )
__children["FocalBlur"]["SqrtRadiusImage"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), True, "channel1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"]["SqrtRadiusImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLCode( "SqrtRadius" ) )
__children["FocalBlur"]["SqrtRadius"]["out"].addChild( Gaffer.FloatPlug( "sqrtRadius", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SqrtRadius"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.DiskBlur( "AverageRadiusDiskBlur" ) )
__children["FocalBlur"]["AverageRadiusDiskBlur"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLImage( "BoundaryAlphaImage" ) )
__children["FocalBlur"]["BoundaryAlphaImage"]["channels"].addChild( Gaffer.NameValuePlug( "A", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), True, "channel1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"]["BoundaryAlphaImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Unpremultiply( "UnpremultiplySqrtRadius" ) )
__children["FocalBlur"]["UnpremultiplySqrtRadius"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Premultiply( "PremultiplySqrtRadius" ) )
__children["FocalBlur"]["PremultiplySqrtRadius"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLCode( "ComputeBoundaryAlpha" ) )
__children["FocalBlur"]["ComputeBoundaryAlpha"]["out"].addChild( Gaffer.FloatPlug( "output1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["ComputeBoundaryAlpha"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Shuffle( "ShuffleOrigAlpha" ) )
__children["FocalBlur"]["ShuffleOrigAlpha"]["shuffles"].addChild( Gaffer.ShufflePlug( "shuffle0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["ShuffleOrigAlpha"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.CopyChannels( "CopyOrigAlpha" ) )
__children["FocalBlur"]["CopyOrigAlpha"]["in"].resize( 3 )
__children["FocalBlur"]["CopyOrigAlpha"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.DiskBlur( "DiskBlurBoundary" ) )
__children["FocalBlur"]["DiskBlurBoundary"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Grade( "TinyAlphaIncrement" ) )
__children["FocalBlur"]["TinyAlphaIncrement"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Expression( "Expression2" ) )
__children["FocalBlur"]["Expression2"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Shuffle( "ShuffleBoundaryAlpha" ) )
__children["FocalBlur"]["ShuffleBoundaryAlpha"]["shuffles"].addChild( Gaffer.ShufflePlug( "shuffle0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["ShuffleBoundaryAlpha"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLImage( "ClipImage" ) )
__children["FocalBlur"]["ClipImage"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"]["ClipImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLCode( "ComputeClip" ) )
__children["FocalBlur"]["ComputeClip"]["out"].addChild( Gaffer.FloatPlug( "clip", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["ComputeClip"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Premultiply( "PremultiplyByClip" ) )
__children["FocalBlur"]["PremultiplyByClip"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.DiskBlur( "MainDiskBlur" ) )
__children["FocalBlur"]["MainDiskBlur"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Expression( "Expression3" ) )
__children["FocalBlur"]["Expression3"]["__in"].addChild( Gaffer.FloatPlug( "p0", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression3"]["__in"].addChild( Gaffer.IntPlug( "p1", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression3"]["__out"].addChild( Gaffer.FloatVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.FloatVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.DiskBlur( "AverageSignedRadiusDiskBlur" ) )
__children["FocalBlur"]["AverageSignedRadiusDiskBlur"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Grade( "GradeBoundaryAlpha" ) )
__children["FocalBlur"]["GradeBoundaryAlpha"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Grade( "GradePriorBlur" ) )
__children["FocalBlur"]["GradePriorBlur"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLImage( "SetBlurRadius" ) )
__children["FocalBlur"]["SetBlurRadius"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"]["SetBlurRadius"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLCode( "CameraParmCode" ) )
__children["FocalBlur"]["CameraParmCode"]["parameters"].addChild( Gaffer.FloatPlug( "blurMultiplier", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["CameraParmCode"]["parameters"].addChild( Gaffer.IntPlug( "resolutionX", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["CameraParmCode"]["parameters"].addChild( Gaffer.V3fPlug( "cameraParameters", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["FocalBlur"]["CameraParmCode"]["parameters"].addChild( Gaffer.StringPlug( "depthChannel", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["CameraParmCode"]["out"].addChild( Gaffer.FloatPlug( "radius", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["CameraParmCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Shuffle( "ShuffleAlphaToDepth" ) )
__children["FocalBlur"]["ShuffleAlphaToDepth"]["shuffles"].addChild( Gaffer.ShufflePlug( "shuffle0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["ShuffleAlphaToDepth"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Grade( "GradeDepthOffset" ) )
__children["FocalBlur"]["GradeDepthOffset"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot12" ) )
__children["FocalBlur"]["Dot12"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot12"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Merge( "SubtractDepth" ) )
__children["FocalBlur"]["SubtractDepth"]["in"].resize( 3 )
__children["FocalBlur"]["SubtractDepth"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.DeleteChannels( "KeepDepthOnly" ) )
__children["FocalBlur"]["KeepDepthOnly"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop" ) )
__children["FocalBlur"]["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot14" ) )
__children["FocalBlur"]["Dot14"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot14"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "focusDistance", defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.BoxIn( "BoxIn2" ) )
__children["FocalBlur"]["BoxIn2"].setup( GafferScene.ScenePlug( "out", ) )
__children["FocalBlur"]["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferScene.ScenePlug( "cameraScene", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "computedFocusDistance", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "focalLength", defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "fStop", defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Unpremultiply( "UnpremultiplyDepth" ) )
__children["FocalBlur"]["UnpremultiplyDepth"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "focalLengthWorldScale", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.FormatQuery( "FormatQuery" ) )
__children["FocalBlur"]["FormatQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.BoxIn( "BoxIn7" ) )
__children["FocalBlur"]["BoxIn7"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["FocalBlur"]["BoxIn7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "blurMultiplier", defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "computedFocalLength", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "horizontalAperture", defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "computedHorizontalAperture", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "computedFStop", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.IntPlug( "maxBlurRadius", defaultValue = 256, minValue = 2, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "computedFocalLengthWorldScale", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "depthPlaneScalingFactor", defaultValue = 0.5, minValue = 0.10000000149011612, maxValue = 0.8999999761581421, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Merge( "AddInfill" ) )
__children["FocalBlur"]["AddInfill"]["in"].resize( 3 )
__children["FocalBlur"]["AddInfill"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "approximationThreshold", defaultValue = 0.0010000000474974513, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot15" ) )
__children["FocalBlur"]["Dot15"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot15"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot16" ) )
__children["FocalBlur"]["Dot16"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot16"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.FloatPlug( "backgroundDepthValue", defaultValue = 100000.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Switch( "SwitchDepthOffset" ) )
__children["FocalBlur"]["SwitchDepthOffset"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["SwitchDepthOffset"]["in"].resize( 3 )
__children["FocalBlur"]["SwitchDepthOffset"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot17" ) )
__children["FocalBlur"]["Dot17"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot17"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop4" ) )
__children["FocalBlur"]["Backdrop4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop5" ) )
__children["FocalBlur"]["Backdrop5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop6" ) )
__children["FocalBlur"]["Backdrop6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.DeleteChannels( "DeleteTemporaryChannels" ) )
__children["FocalBlur"]["DeleteTemporaryChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.DeleteChannels( "JustAlphaAndRadius2" ) )
__children["FocalBlur"]["JustAlphaAndRadius2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLImage( "SqrtSignedRadiusImage" ) )
__children["FocalBlur"]["SqrtSignedRadiusImage"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), True, "channel1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"]["SqrtSignedRadiusImage"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), True, "channel2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"]["SqrtSignedRadiusImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLCode( "SqrtSignedRadius" ) )
__children["FocalBlur"]["SqrtSignedRadius"]["out"].addChild( Gaffer.FloatPlug( "sqrtRadius", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SqrtSignedRadius"]["out"].addChild( Gaffer.FloatPlug( "signedSqrtRadius", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SqrtSignedRadius"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop7" ) )
__children["FocalBlur"]["Backdrop7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot19" ) )
__children["FocalBlur"]["Dot19"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot19"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop9" ) )
__children["FocalBlur"]["Backdrop9"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop9"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop10" ) )
__children["FocalBlur"]["Backdrop10"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop11" ) )
__children["FocalBlur"]["Backdrop11"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop11"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.DeleteChannels( "JustAlphaAndRadius" ) )
__children["FocalBlur"]["JustAlphaAndRadius"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot" ) )
__children["FocalBlur"]["Dot"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot21" ) )
__children["FocalBlur"]["Dot21"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot21"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot22" ) )
__children["FocalBlur"]["Dot22"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot22"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot23" ) )
__children["FocalBlur"]["Dot23"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot23"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot24" ) )
__children["FocalBlur"]["Dot24"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot24"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop12" ) )
__children["FocalBlur"]["Backdrop12"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop14" ) )
__children["FocalBlur"]["Backdrop14"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop14"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.BoolPlug( "infilling", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop15" ) )
__children["FocalBlur"]["Backdrop15"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop15"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.StringPlug( "cameraMode", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.NameSwitch( "CameraModeSwitch" ) )
__children["FocalBlur"]["CameraModeSwitch"].setup( Gaffer.V2fPlug( "value", defaultValue = imath.V2f( 1, 1 ), minValue = imath.V2f( 0, 0 ), ) )
__children["FocalBlur"]["CameraModeSwitch"]["in"].resize( 3 )
__children["FocalBlur"]["CameraModeSwitch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Expression( "SceneCameraExpression" ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"].addChild( Gaffer.IntPlug( "p0", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p1", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"].addChild( Gaffer.IntPlug( "p2", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p3", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"].addChild( Gaffer.IntPlug( "p4", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p5", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"].addChild( Gaffer.IntPlug( "p6", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p7", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"].addChild( Gaffer.IntPlug( "p8", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p9", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__out"].addChild( Gaffer.V2fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2f( 1, 1 ), minValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__out"].addChild( Gaffer.FloatPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__out"].addChild( Gaffer.FloatPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__out"].addChild( Gaffer.FloatPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__out"].addChild( Gaffer.FloatPlug( "p4", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"]["__out"].addChild( Gaffer.FloatPlug( "p5", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["SceneCameraExpression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferScene.CameraQuery( "CameraQuery" ) )
__children["FocalBlur"]["CameraQuery"].addQuery( Gaffer.FloatPlug( "value", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, ) )
__children["FocalBlur"]["CameraQuery"].addQuery( Gaffer.V2fPlug( "value", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2f( 0, 0 ), ) )
__children["FocalBlur"]["CameraQuery"].addQuery( Gaffer.FloatPlug( "value", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, ) )
__children["FocalBlur"]["CameraQuery"].addQuery( Gaffer.FloatPlug( "value", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, ) )
__children["FocalBlur"]["CameraQuery"].addQuery( Gaffer.FloatPlug( "value", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, ) )
__children["FocalBlur"]["CameraQuery"]["queries"].resize( 5 )
__children["FocalBlur"]["CameraQuery"]["out"].resize( 5 )
__children["FocalBlur"]["CameraQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Expression( "CustomCameraExpression" ) )
__children["FocalBlur"]["CustomCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p0", defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["CustomCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p1", defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["CustomCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p2", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["CustomCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p3", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["CustomCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p4", defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["CustomCameraExpression"]["__out"].addChild( Gaffer.V2fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2f( 1, 1 ), minValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["CustomCameraExpression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Expression( "NoCameraExpression" ) )
__children["FocalBlur"]["NoCameraExpression"]["__in"].addChild( Gaffer.FloatPlug( "p0", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["NoCameraExpression"]["__out"].addChild( Gaffer.V2fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2f( 1, 1 ), minValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["NoCameraExpression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot25" ) )
__children["FocalBlur"]["Dot25"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot25"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot26" ) )
__children["FocalBlur"]["Dot26"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot26"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.StringPlug( "cameraPath", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Expression( "Expression" ) )
__children["FocalBlur"]["Expression"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, minValue = 0, maxValue = 1, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.StringPlug( "depthChannel", defaultValue = 'Z', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.StringPlug( "depthInterpretation", defaultValue = 'premultiplied', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Expression( "Expression4" ) )
__children["FocalBlur"]["Expression4"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = 'premultiplied', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression4"]["__out"].addChild( Gaffer.BoolPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Expression( "Expression5" ) )
__children["FocalBlur"]["Expression5"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = 'premultiplied', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression5"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLImage( "DataWindowBoundaryNormalization" ) )
__children["FocalBlur"]["DataWindowBoundaryNormalization"]["channels"].addChild( Gaffer.NameValuePlug( "A", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"]["DataWindowBoundaryNormalization"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLCode( "DataWindowBoundaryNorm" ) )
__children["FocalBlur"]["DataWindowBoundaryNorm"]["parameters"].addChild( Gaffer.V3fPlug( "dataWindowMin", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["FocalBlur"]["DataWindowBoundaryNorm"]["parameters"].addChild( Gaffer.V3fPlug( "dataWindowMax", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["FocalBlur"]["DataWindowBoundaryNorm"]["parameters"].addChild( Gaffer.FloatPlug( "maxRadius", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["DataWindowBoundaryNorm"]["out"].addChild( Gaffer.FloatPlug( "output1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["DataWindowBoundaryNorm"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Expression( "Expression6" ) )
__children["FocalBlur"]["Expression6"]["__in"].addChild( Gaffer.AtomicBox2iPlug( "p0", defaultValue = imath.Box2i(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression6"]["__out"].addChild( Gaffer.V3fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["FocalBlur"]["Expression6"]["__out"].addChild( Gaffer.V3fPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["FocalBlur"]["Expression6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferImage.Grade( "TinyAlphaIncrementToAvoidUnpremultiplyPrecisionProblems" ) )
__children["FocalBlur"]["TinyAlphaIncrementToAvoidUnpremultiplyPrecisionProblems"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Expression( "Expression7" ) )
__children["FocalBlur"]["Expression7"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Expression7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop16" ) )
__children["FocalBlur"]["Backdrop16"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop16"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop17" ) )
__children["FocalBlur"]["Backdrop17"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop17"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLImage( "UnsqrtRadiusImage" ) )
__children["FocalBlur"]["UnsqrtRadiusImage"]["channels"].addChild( Gaffer.NameValuePlug( "customChannel", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["FocalBlur"]["UnsqrtRadiusImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( GafferOSL.OSLCode( "UnsqrtRadius" ) )
__children["FocalBlur"]["UnsqrtRadius"]["out"].addChild( Gaffer.FloatPlug( "output1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["UnsqrtRadius"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot27" ) )
__children["FocalBlur"]["Dot27"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot27"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop18" ) )
__children["FocalBlur"]["Backdrop18"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop18"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop19" ) )
__children["FocalBlur"]["Backdrop19"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop19"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop20" ) )
__children["FocalBlur"]["Backdrop20"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop20"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Dot( "Dot28" ) )
__children["FocalBlur"]["Dot28"].setup( GafferImage.ImagePlug( "in", ) )
__children["FocalBlur"]["Dot28"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop21" ) )
__children["FocalBlur"]["Backdrop21"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop21"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"].addChild( Gaffer.Backdrop( "Backdrop22" ) )
__children["FocalBlur"]["Backdrop22"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FocalBlur"]["Backdrop22"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
parent["frame"].setValue( 100.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 38801 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["renderPass"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["renderPass"]["value"], 'plugValueWidget:type', 'GafferSceneUI.RenderPassEditor._RenderPassPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["FocalBlur"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"], 'layout:section:Settings.Quality:collapsed', False )
Gaffer.Metadata.registerValue( __children["FocalBlur"], 'layout:activator:cameraNotScene', 'parent["cameraMode"].getValue() != "scene"' )
Gaffer.Metadata.registerValue( __children["FocalBlur"], 'layout:activator:cameraScene', 'parent["cameraMode"].getValue() == "scene"' )
Gaffer.Metadata.registerValue( __children["FocalBlur"], 'layout:activator:cameraCustom', 'parent["cameraMode"].getValue() == "custom"' )
Gaffer.Metadata.registerValue( __children["FocalBlur"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"], 'layout:activator:depthInterpretationFilteredWithBackground', 'parent["depthInterpretation"].getValue() == "filteredWithBackground"' )
Gaffer.Metadata.registerValue( __children["FocalBlur"], 'description', 'Renders depth of field effects based on a 2D image with a depth channel ( by default, "Z" ).\n\nThe depth of field parameters can be driven by a camera from a 3D scene, or entered manually.\n\nApplying this node to an image rendered with DOF disabled should result in a similar amount of blur to an actual 3D render done with DOF enabled ( though the edge quality will not be quite as good, since there is information lost due to occlusion in the 2D image ).' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["user"], 'layout:section', 'User' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["in"], 'layout:index', 0 )
__children["FocalBlur"]["out"].setInput( __children["FocalBlur"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["out"], 'layout:index', 1 )
__children["FocalBlur"]["BoxIn"]["__in"].setInput( __children["FocalBlur"]["in"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxIn"]["__in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["FocalBlur"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 839.474304, 108.500412 ) )
__children["FocalBlur"]["BoxOut"]["in"].setInput( __children["FocalBlur"]["DeleteTemporaryChannels"]["out"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxOut"]["__out"], 'description', 'The final result of the loop.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxOut"]["__out"], 'noduleLayout:section', 'bottom' )
__children["FocalBlur"]["BoxOut"]["passThrough"].setInput( __children["FocalBlur"]["Dot16"]["out"] )
__children["FocalBlur"]["BoxOut"]["enabled"].setInput( __children["FocalBlur"]["enabled"] )
__children["FocalBlur"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 826.623169, -357.836182 ) )
__children["FocalBlur"]["__uiPosition"].setValue( imath.V2f( 378.682861, 172.617249 ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["__uiPosition"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["enabled"], 'layout:index', 23 )
__children["FocalBlur"]["InfillSourceDiskBlur"]["in"].setInput( __children["FocalBlur"]["PremultiplyByClip"]["out"] )
__children["FocalBlur"]["InfillSourceDiskBlur"]["radius"].setValue( 2.0 )
__children["FocalBlur"]["InfillSourceDiskBlur"]["radiusChannel"].setValue( '__averageRadius' )
__children["FocalBlur"]["InfillSourceDiskBlur"]["approximationThreshold"].setValue( 1.0 )
__children["FocalBlur"]["InfillSourceDiskBlur"]["maxRadius"].setInput( __children["FocalBlur"]["maxBlurRadius"] )
__children["FocalBlur"]["InfillSourceDiskBlur"]["__uiPosition"].setValue( imath.V2f( 1126.62817, -185.170593 ) )
__children["FocalBlur"]["InvertAlpha"]["in"].setInput( __children["FocalBlur"]["MergeUnInfillSources"]["out"] )
__children["FocalBlur"]["InvertAlpha"]["channels"].setValue( '[A]' )
__children["FocalBlur"]["InvertAlpha"]["blackPoint"].setValue( imath.Color4f( 0, 0, 0, 1 ) )
__children["FocalBlur"]["InvertAlpha"]["whitePoint"].setValue( imath.Color4f( 1, 1, 1, 0 ) )
__children["FocalBlur"]["InvertAlpha"]["__uiPosition"].setValue( imath.V2f( 887.590576, -255.81366 ) )
__children["FocalBlur"]["CopyInfillChannels"]["in"][0].setInput( __children["FocalBlur"]["UnpremultiplyInfill"]["out"] )
__children["FocalBlur"]["CopyInfillChannels"]["in"][1].setInput( __children["FocalBlur"]["InvertAlpha"]["out"] )
__children["FocalBlur"]["CopyInfillChannels"]["channels"].setValue( '[A]' )
__children["FocalBlur"]["CopyInfillChannels"]["__uiPosition"].setValue( imath.V2f( 1037.26587, -285.427094 ) )
__children["FocalBlur"]["MultiplyInfill"]["in"].setInput( __children["FocalBlur"]["CopyInfillChannels"]["out"] )
__children["FocalBlur"]["MultiplyInfill"]["channels"].setValue( '*' )
__children["FocalBlur"]["MultiplyInfill"]["__uiPosition"].setValue( imath.V2f( 1037.26587, -293.591156 ) )
__children["FocalBlur"]["MergeUnInfillSources"]["in"][0].setInput( __children["FocalBlur"]["Dot19"]["out"] )
__children["FocalBlur"]["MergeUnInfillSources"]["in"][1].setInput( __children["FocalBlur"]["Grade21"]["out"] )
__children["FocalBlur"]["MergeUnInfillSources"]["in"][2].setInput( __children["FocalBlur"]["GradeBoundaryAlpha"]["out"] )
__children["FocalBlur"]["MergeUnInfillSources"]["__uiPosition"].setValue( imath.V2f( 887.590576, -238.736389 ) )
__children["FocalBlur"]["UnsqrtSignedRadiusImage"]["in"].setInput( __children["FocalBlur"]["AverageSignedRadiusDiskBlur"]["out"] )
__children["FocalBlur"]["UnsqrtSignedRadiusImage"]["channels"]["channel"]["name"].setValue( '__averageRadius' )
__children["FocalBlur"]["UnsqrtSignedRadiusImage"]["channels"]["channel"]["value"].setInput( __children["FocalBlur"]["UnsqrtSignedRadius"]["out"]["averageRadius"] )
__children["FocalBlur"]["UnsqrtSignedRadiusImage"]["channels"]["channel1"]["name"].setValue( '__averageSignedRadius' )
__children["FocalBlur"]["UnsqrtSignedRadiusImage"]["channels"]["channel1"]["value"].setInput( __children["FocalBlur"]["UnsqrtSignedRadius"]["out"]["averageSignedRadius"] )
__children["FocalBlur"]["UnsqrtSignedRadiusImage"]["__uiPosition"].setValue( imath.V2f( 1127.15161, -133.454727 ) )
__children["FocalBlur"]["UnsqrtSignedRadius"]["code"].setValue( 'float sqrtRadius = inChannel( "__sqrtRadius", 0 );\naverageRadius = sqrtRadius * sqrtRadius;\n\nfloat signedSqrtRadius = inChannel( "__signedSqrtRadius", 0 );\n\naverageSignedRadius = signedSqrtRadius > 0 ? signedSqrtRadius * signedSqrtRadius : - signedSqrtRadius * signedSqrtRadius;' )
__children["FocalBlur"]["UnsqrtSignedRadius"]["__uiPosition"].setValue( imath.V2f( 1109.54834, -133.454727 ) )
__children["FocalBlur"]["MergeInfillSources"]["in"][0].setInput( __children["FocalBlur"]["GradePriorBlur"]["out"] )
__children["FocalBlur"]["MergeInfillSources"]["in"][1].setInput( __children["FocalBlur"]["InfillSourceDiskBlur"]["out"] )
__children["FocalBlur"]["MergeInfillSources"]["__uiPosition"].setValue( imath.V2f( 1128.96704, -210.931488 ) )
__children["FocalBlur"]["UnpremultiplyInfill"]["in"].setInput( __children["FocalBlur"]["TinyAlphaIncrement"]["out"] )
__children["FocalBlur"]["UnpremultiplyInfill"]["__uiPosition"].setValue( imath.V2f( 1128.96704, -261.202393 ) )
__children["FocalBlur"]["Backdrop3"]["title"].setValue( 'Compute How Much Infill Is Needed' )
__children["FocalBlur"]["Backdrop3"]["__uiPosition"].setValue( imath.V2f( 910.72998, -110.624527 ) )
__children["FocalBlur"]["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -16.5011597, 15.2019196 ), imath.V2f( 94.6651611, 32.0044632 ) ) )
__children["FocalBlur"]["MergeWithMainChannels"]["in"][0].setInput( __children["FocalBlur"]["Dot22"]["out"] )
__children["FocalBlur"]["MergeWithMainChannels"]["in"][1].setInput( __children["FocalBlur"]["UnsqrtSignedRadiusImage"]["out"] )
__children["FocalBlur"]["MergeWithMainChannels"]["channels"].setValue( '__averageRadius __averageSignedRadius' )
__children["FocalBlur"]["MergeWithMainChannels"]["__uiPosition"].setValue( imath.V2f( 1126.62817, -152.318619 ) )
__children["FocalBlur"]["Grade21"]["in"].setInput( __children["FocalBlur"]["Dot27"]["out"] )
__children["FocalBlur"]["Grade21"]["channels"].setValue( '[A]' )
__children["FocalBlur"]["Grade21"]["blackPoint"].setValue( imath.Color4f( 0, 0, 0, 0.25 ) )
__children["FocalBlur"]["Grade21"]["whitePoint"].setValue( imath.Color4f( 1, 1, 1, 0 ) )
__children["FocalBlur"]["Grade21"]["whiteClamp"].setValue( True )
__children["FocalBlur"]["Grade21"]["__uiPosition"].setValue( imath.V2f( 889.553589, -170.643616 ) )
__children["FocalBlur"]["SqrtRadiusImage"]["in"].setInput( __children["FocalBlur"]["JustAlphaAndRadius"]["out"] )
__children["FocalBlur"]["SqrtRadiusImage"]["channels"]["channel1"]["name"].setValue( '__sqrtRadius' )
__children["FocalBlur"]["SqrtRadiusImage"]["channels"]["channel1"]["value"].setInput( __children["FocalBlur"]["SqrtRadius"]["out"]["sqrtRadius"] )
__children["FocalBlur"]["SqrtRadiusImage"]["__uiPosition"].setValue( imath.V2f( 940.699768, -111.311111 ) )
__children["FocalBlur"]["SqrtRadius"]["code"].setValue( 'float radius = inChannel( "__blurRadius", 0 );\n\nif( inChannel( "A", 0 ) == 0 )\n{\n\tradius = 0;\n}\n\nsqrtRadius = sqrt( abs( radius ) );' )
__children["FocalBlur"]["SqrtRadius"]["__uiPosition"].setValue( imath.V2f( 923.687378, -111.311111 ) )
__children["FocalBlur"]["AverageRadiusDiskBlur"]["in"].setInput( __children["FocalBlur"]["PremultiplySqrtRadius"]["out"] )
__children["FocalBlur"]["AverageRadiusDiskBlur"]["radiusChannel"].setValue( '__blurRadius' )
__children["FocalBlur"]["AverageRadiusDiskBlur"]["approximationThreshold"].setValue( 1.0 )
__children["FocalBlur"]["AverageRadiusDiskBlur"]["maxRadius"].setInput( __children["FocalBlur"]["maxBlurRadius"] )
__children["FocalBlur"]["AverageRadiusDiskBlur"]["__uiPosition"].setValue( imath.V2f( 940.699768, -123.349075 ) )
__children["FocalBlur"]["BoundaryAlphaImage"]["in"].setInput( __children["FocalBlur"]["CopyOrigAlpha"]["out"] )
__children["FocalBlur"]["BoundaryAlphaImage"]["channels"]["channel1"]["name"].setValue( 'edgeAlpha' )
__children["FocalBlur"]["BoundaryAlphaImage"]["channels"]["channel1"]["value"].setInput( __children["FocalBlur"]["ComputeBoundaryAlpha"]["out"]["output1"] )
__children["FocalBlur"]["BoundaryAlphaImage"]["__uiPosition"].setValue( imath.V2f( 943.699768, -184.167816 ) )
__children["FocalBlur"]["UnpremultiplySqrtRadius"]["in"].setInput( __children["FocalBlur"]["TinyAlphaIncrementToAvoidUnpremultiplyPrecisionProblems"]["out"] )
__children["FocalBlur"]["UnpremultiplySqrtRadius"]["channels"].setValue( '__sqrtRadius' )
__children["FocalBlur"]["UnpremultiplySqrtRadius"]["__uiPosition"].setValue( imath.V2f( 940.699768, -139.271851 ) )
__children["FocalBlur"]["PremultiplySqrtRadius"]["in"].setInput( __children["FocalBlur"]["SqrtRadiusImage"]["out"] )
__children["FocalBlur"]["PremultiplySqrtRadius"]["channels"].setValue( '__sqrtRadius' )
__children["FocalBlur"]["PremultiplySqrtRadius"]["__uiPosition"].setValue( imath.V2f( 940.699768, -117.685013 ) )
__children["FocalBlur"]["ComputeBoundaryAlpha"]["code"].setValue( '\noutput1 = clamp( ( inChannel( "A", 0 ) - 0.05 ) / 0.05, 0, 1 ) * ( 1 - inChannel( "origA", 0 ) );' )
__children["FocalBlur"]["ComputeBoundaryAlpha"]["__uiPosition"].setValue( imath.V2f( 925.926575, -184.167816 ) )
__children["FocalBlur"]["ShuffleOrigAlpha"]["in"].setInput( __children["FocalBlur"]["Dot28"]["out"] )
__children["FocalBlur"]["ShuffleOrigAlpha"]["shuffles"]["shuffle0"]["source"].setValue( 'A' )
__children["FocalBlur"]["ShuffleOrigAlpha"]["shuffles"]["shuffle0"]["destination"].setValue( 'origA' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["ShuffleOrigAlpha"]["shuffles"]["shuffle0"]["destination"], 'channelPlugValueWidget:isCustom', True )
__children["FocalBlur"]["ShuffleOrigAlpha"]["__uiPosition"].setValue( imath.V2f( 962.817261, -170.339691 ) )
__children["FocalBlur"]["CopyOrigAlpha"]["in"][0].setInput( __children["FocalBlur"]["UnsqrtRadiusImage"]["out"] )
__children["FocalBlur"]["CopyOrigAlpha"]["in"][1].setInput( __children["FocalBlur"]["ShuffleOrigAlpha"]["out"] )
__children["FocalBlur"]["CopyOrigAlpha"]["channels"].setValue( 'origA' )
__children["FocalBlur"]["CopyOrigAlpha"]["__uiPosition"].setValue( imath.V2f( 943.699768, -178.503754 ) )
__children["FocalBlur"]["DiskBlurBoundary"]["in"].setInput( __children["FocalBlur"]["DataWindowBoundaryNormalization"]["out"] )
__children["FocalBlur"]["DiskBlurBoundary"]["radiusChannel"].setValue( '__averagedRadius' )
__children["FocalBlur"]["DiskBlurBoundary"]["approximationThreshold"].setValue( 1.0 )
__children["FocalBlur"]["DiskBlurBoundary"]["maxRadius"].setInput( __children["FocalBlur"]["maxBlurRadius"] )
__children["FocalBlur"]["DiskBlurBoundary"]["__uiPosition"].setValue( imath.V2f( 943.699768, -211.82933 ) )
__children["FocalBlur"]["TinyAlphaIncrement"]["in"].setInput( __children["FocalBlur"]["MergeInfillSources"]["out"] )
__children["FocalBlur"]["TinyAlphaIncrement"]["channels"].setValue( '[A]' )
__children["FocalBlur"]["TinyAlphaIncrement"]["offset"]["a"].setInput( __children["FocalBlur"]["Expression2"]["__out"]["p0"] )
__children["FocalBlur"]["TinyAlphaIncrement"]["__uiPosition"].setValue( imath.V2f( 1128.96704, -233.744293 ) )
__children["FocalBlur"]["Expression2"]["__uiPosition"].setValue( imath.V2f( 1118.46631, -233.744659 ) )
__children["FocalBlur"]["ShuffleBoundaryAlpha"]["in"].setInput( __children["FocalBlur"]["DiskBlurBoundary"]["out"] )
__children["FocalBlur"]["ShuffleBoundaryAlpha"]["shuffles"]["shuffle0"]["source"].setValue( 'edgeAlpha' )
__children["FocalBlur"]["ShuffleBoundaryAlpha"]["shuffles"]["shuffle0"]["destination"].setValue( 'A' )
__children["FocalBlur"]["ShuffleBoundaryAlpha"]["__uiPosition"].setValue( imath.V2f( 943.699768, -217.493393 ) )
__children["FocalBlur"]["ClipImage"]["in"].setInput( __children["FocalBlur"]["MergeWithMainChannels"]["out"] )
__children["FocalBlur"]["ClipImage"]["channels"]["channel"]["name"].setValue( '__clip' )
__children["FocalBlur"]["ClipImage"]["channels"]["channel"]["value"].setInput( __children["FocalBlur"]["ComputeClip"]["out"]["clip"] )
__children["FocalBlur"]["ClipImage"]["__uiPosition"].setValue( imath.V2f( 1126.62817, -165.752991 ) )
__children["FocalBlur"]["ComputeClip"]["code"].setValue( 'float radius = inChannel( "__blurRadius", 0.0 );\nfloat averageSignedRadius = inChannel( "__averageSignedRadius", 0.0 );\n\n// When we\'re in front of the focal plane, foreground pixels are not good candidates for\n// infilling ( we want to estimate what is behind the blurry foreground ). So mask out\n// pixels that are in front of the local average.\nclip = max( 0, min( 1, 0.5 + 0.06 * (-averageSignedRadius - (-radius ) ) ) );\n\n\nif( radius > 0 )\n{\n\t// When we\'re behind the focal plane, infilling with all contributions works fine -\n\t// blend the clip value to a constant 1 ).\n\tclip = mix( clip, 1, min( 1, 2 * radius ) );\n}\n' )
__children["FocalBlur"]["ComputeClip"]["__uiPosition"].setValue( imath.V2f( 1113.16479, -165.752838 ) )
__children["FocalBlur"]["PremultiplyByClip"]["in"].setInput( __children["FocalBlur"]["ClipImage"]["out"] )
__children["FocalBlur"]["PremultiplyByClip"]["channels"].setValue( '*' )
__children["FocalBlur"]["PremultiplyByClip"]["alphaChannel"].setValue( '__clip' )
__children["FocalBlur"]["PremultiplyByClip"]["__uiPosition"].setValue( imath.V2f( 1126.62817, -177.006531 ) )
__children["FocalBlur"]["MainDiskBlur"]["in"].setInput( __children["FocalBlur"]["SetBlurRadius"]["out"] )
__children["FocalBlur"]["MainDiskBlur"]["radiusChannel"].setValue( '__blurRadius' )
__children["FocalBlur"]["MainDiskBlur"]["approximationThreshold"].setInput( __children["FocalBlur"]["approximationThreshold"] )
__children["FocalBlur"]["MainDiskBlur"]["maxRadius"].setInput( __children["FocalBlur"]["maxBlurRadius"] )
__children["FocalBlur"]["MainDiskBlur"]["layerBoundaries"].setInput( __children["FocalBlur"]["Expression3"]["__out"]["p0"] )
__children["FocalBlur"]["MainDiskBlur"]["__uiPosition"].setValue( imath.V2f( 822.123169, -63.6700592 ) )
__children["FocalBlur"]["Expression3"]["__in"]["p0"].setInput( __children["FocalBlur"]["depthPlaneScalingFactor"] )
__children["FocalBlur"]["Expression3"]["__in"]["p1"].setInput( __children["FocalBlur"]["maxBlurRadius"] )
__children["FocalBlur"]["Expression3"]["__uiPosition"].setValue( imath.V2f( 815.064087, -60.02108 ) )
__children["FocalBlur"]["AverageSignedRadiusDiskBlur"]["in"].setInput( __children["FocalBlur"]["SqrtSignedRadiusImage"]["out"] )
__children["FocalBlur"]["AverageSignedRadiusDiskBlur"]["radius"].setValue( 0.5 )
__children["FocalBlur"]["AverageSignedRadiusDiskBlur"]["radiusChannel"].setValue( '__blurRadius' )
__children["FocalBlur"]["AverageSignedRadiusDiskBlur"]["approximationThreshold"].setValue( 1.0 )
__children["FocalBlur"]["AverageSignedRadiusDiskBlur"]["__uiPosition"].setValue( imath.V2f( 1127.15161, -125.290672 ) )
__children["FocalBlur"]["GradeBoundaryAlpha"]["in"].setInput( __children["FocalBlur"]["ShuffleBoundaryAlpha"]["out"] )
__children["FocalBlur"]["GradeBoundaryAlpha"]["channels"].setValue( '[A]' )
__children["FocalBlur"]["GradeBoundaryAlpha"]["multiply"].setValue( imath.Color4f( 1, 1, 1, 4 ) )
__children["FocalBlur"]["GradeBoundaryAlpha"]["__uiPosition"].setValue( imath.V2f( 943.699768, -223.157455 ) )
__children["FocalBlur"]["GradePriorBlur"]["in"].setInput( __children["FocalBlur"]["Dot24"]["out"] )
__children["FocalBlur"]["GradePriorBlur"]["channels"].setValue( '*' )
__children["FocalBlur"]["GradePriorBlur"]["multiply"]["r"].setValue( 0.0010000000474974513 )
__children["FocalBlur"]["GradePriorBlur"]["multiply"]["a"].setValue( 0.0010000000474974513 )
__children["FocalBlur"]["GradePriorBlur"]["multiply"]["g"].setInput( __children["FocalBlur"]["GradePriorBlur"]["multiply"]["r"] )
__children["FocalBlur"]["GradePriorBlur"]["multiply"]["b"].setInput( __children["FocalBlur"]["GradePriorBlur"]["multiply"]["r"] )
__children["FocalBlur"]["GradePriorBlur"]["__uiPosition"].setValue( imath.V2f( 1120.47729, -202.767426 ) )
__children["FocalBlur"]["SetBlurRadius"]["in"].setInput( __children["FocalBlur"]["UnpremultiplyDepth"]["out"] )
__children["FocalBlur"]["SetBlurRadius"]["channels"]["channel"]["name"].setValue( '__blurRadius' )
__children["FocalBlur"]["SetBlurRadius"]["channels"]["channel"]["value"].setInput( __children["FocalBlur"]["CameraParmCode"]["out"]["radius"] )
__children["FocalBlur"]["SetBlurRadius"]["__uiPosition"].setValue( imath.V2f( 822.123169, 12.3714523 ) )
__children["FocalBlur"]["CameraParmCode"]["parameters"]["blurMultiplier"].setInput( __children["FocalBlur"]["BoxIn7"]["out"] )
__children["FocalBlur"]["CameraParmCode"]["parameters"]["resolutionX"].setInput( __children["FocalBlur"]["FormatQuery"]["size"]["x"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["CameraParmCode"]["parameters"]["cameraParameters"], 'compoundNumericNodule:childrenVisible', True )
__children["FocalBlur"]["CameraParmCode"]["parameters"]["cameraParameters"]["x"].setInput( __children["FocalBlur"]["CameraModeSwitch"]["out"]["value"]["x"] )
__children["FocalBlur"]["CameraParmCode"]["parameters"]["cameraParameters"]["y"].setInput( __children["FocalBlur"]["CameraModeSwitch"]["out"]["value"]["y"] )
__children["FocalBlur"]["CameraParmCode"]["parameters"]["depthChannel"].setInput( __children["FocalBlur"]["depthChannel"] )
__children["FocalBlur"]["CameraParmCode"]["code"].setValue( 'float z = inChannel( depthChannel, 0 );\nfloat focusDistance = cameraParameters[0];\nfloat cameraBlurFactor = cameraParameters[1];\nradius = 0.5 * blurMultiplier * float( resolutionX ) * cameraBlurFactor * ( z - focusDistance ) / z / focusDistance;' )
__children["FocalBlur"]["CameraParmCode"]["__uiPosition"].setValue( imath.V2f( 803.988281, 12.3714523 ) )
__children["FocalBlur"]["ShuffleAlphaToDepth"]["in"].setInput( __children["FocalBlur"]["Dot17"]["out"] )
__children["FocalBlur"]["ShuffleAlphaToDepth"]["shuffles"]["shuffle0"]["source"].setValue( 'A' )
__children["FocalBlur"]["ShuffleAlphaToDepth"]["shuffles"]["shuffle0"]["destination"].setInput( __children["FocalBlur"]["depthChannel"] )
__children["FocalBlur"]["ShuffleAlphaToDepth"]["__uiPosition"].setValue( imath.V2f( 849.973633, 66.9294434 ) )
__children["FocalBlur"]["GradeDepthOffset"]["in"].setInput( __children["FocalBlur"]["ShuffleAlphaToDepth"]["out"] )
__children["FocalBlur"]["GradeDepthOffset"]["channels"].setInput( __children["FocalBlur"]["depthChannel"] )
__children["FocalBlur"]["GradeDepthOffset"]["blackPoint"].setValue( imath.Color4f( 1, 0, 0, 0 ) )
__children["FocalBlur"]["GradeDepthOffset"]["whitePoint"].setValue( imath.Color4f( 0, 1, 1, 1 ) )
__children["FocalBlur"]["GradeDepthOffset"]["multiply"]["r"].setInput( __children["FocalBlur"]["backgroundDepthValue"] )
__children["FocalBlur"]["GradeDepthOffset"]["blackClamp"].setValue( False )
__children["FocalBlur"]["GradeDepthOffset"]["__uiPosition"].setValue( imath.V2f( 849.973633, 61.2653847 ) )
__children["FocalBlur"]["Dot12"]["in"].setInput( __children["FocalBlur"]["BoxIn"]["out"] )
__children["FocalBlur"]["Dot12"]["__uiPosition"].setValue( imath.V2f( 839.474304, 92.0897293 ) )
__children["FocalBlur"]["SubtractDepth"]["in"][0].setInput( __children["FocalBlur"]["KeepDepthOnly"]["out"] )
__children["FocalBlur"]["SubtractDepth"]["in"][1].setInput( __children["FocalBlur"]["Dot17"]["out"] )
__children["FocalBlur"]["SubtractDepth"]["operation"].setValue( 9 )
__children["FocalBlur"]["SubtractDepth"]["__uiPosition"].setValue( imath.V2f( 860.447693, 47.4372597 ) )
__children["FocalBlur"]["KeepDepthOnly"]["in"].setInput( __children["FocalBlur"]["GradeDepthOffset"]["out"] )
__children["FocalBlur"]["KeepDepthOnly"]["mode"].setValue( 1 )
__children["FocalBlur"]["KeepDepthOnly"]["channels"].setInput( __children["FocalBlur"]["depthChannel"] )
__children["FocalBlur"]["KeepDepthOnly"]["__uiPosition"].setValue( imath.V2f( 849.973633, 55.6013222 ) )
__children["FocalBlur"]["Backdrop"]["title"].setValue( 'Fix Background Depth Value ( Arnold )' )
__children["FocalBlur"]["Backdrop"]["__uiPosition"].setValue( imath.V2f( 850.59137, 55.5018997 ) )
__children["FocalBlur"]["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -21.1665649, -20.1147346 ), imath.V2f( 38.0354614, 29.9420242 ) ) )
__children["FocalBlur"]["Dot14"]["in"].setInput( __children["FocalBlur"]["SetBlurRadius"]["out"] )
__children["FocalBlur"]["Dot14"]["__uiPosition"].setValue( imath.V2f( 940.699768, 5.03942108 ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focusDistance"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focusDistance"], 'description', 'The depth value that is perfectly in focus.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focusDistance"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focusDistance"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focusDistance"], 'layout:index', 8 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focusDistance"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focusDistance"], 'layout:visibilityActivator', 'cameraNotScene' )
__children["FocalBlur"]["BoxIn2"]["name"].setValue( 'cameraScene' )
__children["FocalBlur"]["BoxIn2"]["__in"].setInput( __children["FocalBlur"]["cameraScene"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxIn2"]["__in"], 'description', 'The scene to query the camera from.' )
__children["FocalBlur"]["BoxIn2"]["__uiPosition"].setValue( imath.V2f( 739.7995, 38.1912117 ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraScene"], 'description', 'Connect a scene here to drive the DOF and Camera parameters from the render camera of the scene.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraScene"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraScene"], 'layout:index', 5 )
__children["FocalBlur"]["computedFocusDistance"].setInput( __children["FocalBlur"]["SceneCameraExpression"]["__out"]["p4"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocusDistance"], 'noduleLayout:label', 'focusDistance.value' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocusDistance"], 'description', 'The depth value that is perfectly in focus ( driven by cameraScene ).' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocusDistance"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocusDistance"], 'layout:index', 9 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocusDistance"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocusDistance"], 'layout:visibilityActivator', 'cameraScene' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocusDistance"], 'label', 'Focus Distance' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLength"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLength"], 'layout:index', 14 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLength"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLength"], 'layout:visibilityActivator', 'cameraCustom' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLength"], 'description', "The focal length is one of the primary attributes of a real lens.\n\nIn conjunction with the aperture, this defines the camera's field of view." )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["fStop"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["fStop"], 'layout:index', 10 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["fStop"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["fStop"], 'layout:visibilityActivator', 'cameraCustom' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["fStop"], 'description', 'The setting equivalent to the f-number on a camera, which ultimately determines the strength of the depth of field blur. A lower value produces more blur. As in a real camera, `fStop` is defined as `focalLength / lens aperture`.' )
__children["FocalBlur"]["UnpremultiplyDepth"]["enabled"].setInput( __children["FocalBlur"]["Expression4"]["__out"]["p0"] )
__children["FocalBlur"]["UnpremultiplyDepth"]["in"].setInput( __children["FocalBlur"]["SwitchDepthOffset"]["out"] )
__children["FocalBlur"]["UnpremultiplyDepth"]["channels"].setInput( __children["FocalBlur"]["depthChannel"] )
__children["FocalBlur"]["UnpremultiplyDepth"]["__uiPosition"].setValue( imath.V2f( 842.474304, 22.5262527 ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLengthWorldScale"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLengthWorldScale"], 'layout:index', 12 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLengthWorldScale"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLengthWorldScale"], 'layout:visibilityActivator', 'cameraCustom' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLengthWorldScale"], 'description', 'The scale to convert from focal length units to world space units.\n\nCombined with f-stop to calculate the lens aperture. Set this to scale the lens units into scene units, to ensure the depth of field blur correctly scales to the scene. Once this plug is set, the `fStop` plug can be adjusted to match a real-world lens setting.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLengthWorldScale"], 'preset:No Conversion\t   ( 1.0 )', 1.0 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLengthWorldScale"], 'preset:Millimeters to Centimeters\t   ( 0.1 )', 0.10000000149011612 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLengthWorldScale"], 'preset:Millimeters to Decimeters\t   ( 0.01 )', 0.009999999776482582 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLengthWorldScale"], 'preset:Millimeters to Meters\t   ( 0.001 )', 0.0010000000474974513 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["focalLengthWorldScale"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
__children["FocalBlur"]["FormatQuery"]["image"].setInput( __children["FocalBlur"]["Dot26"]["out"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["FormatQuery"]["size"], 'compoundNumericNodule:childrenVisible', True )
__children["FocalBlur"]["FormatQuery"]["__uiPosition"].setValue( imath.V2f( 791.788635, 27.9471207 ) )
__children["FocalBlur"]["BoxIn7"]["name"].setValue( 'blurMultiplier' )
__children["FocalBlur"]["BoxIn7"]["__in"].setInput( __children["FocalBlur"]["blurMultiplier"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxIn7"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxIn7"]["__in"], 'label', 'blurMultiplier' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxIn7"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxIn7"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["BoxIn7"]["out"], 'noduleLayout:section', 'right' )
__children["FocalBlur"]["BoxIn7"]["__uiPosition"].setValue( imath.V2f( 787.27417, 14.8964529 ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["blurMultiplier"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["blurMultiplier"], 'description', 'A global multiplier on the amount of blur, multiplied onto whatever blur results from the DOF and Camera parameters.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["blurMultiplier"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["blurMultiplier"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["blurMultiplier"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["blurMultiplier"], 'nodule:type', '' )
__children["FocalBlur"]["computedFocalLength"].setInput( __children["FocalBlur"]["SceneCameraExpression"]["__out"]["p2"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLength"], 'noduleLayout:label', 'focalLength.value' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLength"], 'description', "The focal length is one of the primary attributes of a real lens ( driven by cameraScene ).\n\nIn conjunction with the aperture, this defines the camera's field of view." )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLength"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLength"], 'layout:index', 15 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLength"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLength"], 'layout:visibilityActivator', 'cameraScene' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLength"], 'label', 'Focal Length' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["horizontalAperture"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["horizontalAperture"], 'layout:index', 16 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["horizontalAperture"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["horizontalAperture"], 'layout:visibilityActivator', 'cameraCustom' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["horizontalAperture"], 'description', "The horizontal size of the film back for modelling a camera lens.\n\nIn conjunction with the focal length, this defines the camera's field of view. For the purpose of computing focal blur, we just take the horizontal aperture, which we expect to correspond to the horizontal resolution of the input image." )
__children["FocalBlur"]["computedHorizontalAperture"].setInput( __children["FocalBlur"]["SceneCameraExpression"]["__out"]["p5"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedHorizontalAperture"], 'noduleLayout:label', 'aperture.value.x' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedHorizontalAperture"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedHorizontalAperture"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedHorizontalAperture"], 'layout:index', 17 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedHorizontalAperture"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedHorizontalAperture"], 'layout:visibilityActivator', 'cameraScene' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedHorizontalAperture"], 'label', 'Horizontal Aperture' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedHorizontalAperture"], 'description', "The horizontal size of the film back for modelling a camera lens ( driven by cameraScene ).\n\nIn conjunction with the focal length, this defines the camera's field of view. For the purpose of computing focal blur, we just take the horizontal aperture, which we expect to correspond to the horizontal resolution of the input image." )
__children["FocalBlur"]["computedFStop"].setInput( __children["FocalBlur"]["SceneCameraExpression"]["__out"]["p1"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFStop"], 'noduleLayout:label', 'fStop.value' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFStop"], 'description', 'The setting equivalent to the f-number on a camera, which ultimately determines the strength of the depth of field blur  ( driven by cameraScene ).\n\nA lower value produces more blur. As in a real camera, `fStop` is defined as `focalLength / lens aperture`.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFStop"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFStop"], 'layout:index', 11 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFStop"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFStop"], 'layout:visibilityActivator', 'cameraScene' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFStop"], 'label', 'F Stop' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["maxBlurRadius"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["maxBlurRadius"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["maxBlurRadius"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["maxBlurRadius"], 'description', 'A clamp on the maximum amount of blur. Very large blurs can be expensive, and there is some overhead in preparing data structures to allow for large blurs, so setting this as low as possible is good for performance in several ways.' )
__children["FocalBlur"]["computedFocalLengthWorldScale"].setInput( __children["FocalBlur"]["SceneCameraExpression"]["__out"]["p3"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLengthWorldScale"], 'noduleLayout:label', 'focalLengthWorldScale.value' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLengthWorldScale"], 'description', 'The scale to convert from focal length units to world space units ( driven by cameraScene ).\n\nCombined with f-stop to calculate the lens aperture. Set this to scale the lens units into scene units, to ensure the depth of field blur correctly scales to the scene. Once this plug is set, the `fStop` plug can be adjusted to match a real-world lens setting.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLengthWorldScale"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLengthWorldScale"], 'layout:index', 13 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLengthWorldScale"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLengthWorldScale"], 'layout:visibilityActivator', 'cameraScene' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["computedFocalLengthWorldScale"], 'label', 'Focal Length World Scale' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthPlaneScalingFactor"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthPlaneScalingFactor"], 'description', 'The ratio between pixel radius for each depth plane. This controls how many depth planes are needed, and how quickly occlusion is applied as depth increases. Lower values are more efficient, and capture less occulsion, higher values result in more occlusion. The default value of 0.5 is good for both performance and aesthetics ( setting it too high can result in too much occlusion between features that are actually close together ).' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthPlaneScalingFactor"], 'layout:section', 'Advanced' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthPlaneScalingFactor"], 'layout:index', 21 )
__children["FocalBlur"]["AddInfill"]["enabled"].setInput( __children["FocalBlur"]["infilling"] )
__children["FocalBlur"]["AddInfill"]["in"][0].setInput( __children["FocalBlur"]["Dot19"]["out"] )
__children["FocalBlur"]["AddInfill"]["in"][1].setInput( __children["FocalBlur"]["MultiplyInfill"]["out"] )
__children["FocalBlur"]["AddInfill"]["__uiPosition"].setValue( imath.V2f( 825.123169, -318.060547 ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["approximationThreshold"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["approximationThreshold"], 'description', 'The maximum acceptable error caused by omitting anti-aliasing for a particular disk in the internal disk blur. Since very large disks often contribute very little to each individual output pixel, omitting anti-aliasing for them can provide a substantial speed improvement.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["approximationThreshold"], 'layout:section', 'Advanced' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["approximationThreshold"], 'layout:index', 22 )
__children["FocalBlur"]["Dot15"]["in"].setInput( __children["FocalBlur"]["BoxIn"]["out"] )
__children["FocalBlur"]["Dot15"]["__uiPosition"].setValue( imath.V2f( 677.8974, 101.000412 ) )
__children["FocalBlur"]["Dot16"]["in"].setInput( __children["FocalBlur"]["Dot15"]["out"] )
__children["FocalBlur"]["Dot16"]["__uiPosition"].setValue( imath.V2f( 677.8974, -350.336182 ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["backgroundDepthValue"], 'layout:section', 'Depth' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["backgroundDepthValue"], 'layout:index', 20 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["backgroundDepthValue"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["backgroundDepthValue"], 'layout:visibilityActivator', 'depthInterpretationFilteredWithBackground' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["backgroundDepthValue"], 'description', 'The value to be subtracted before the depth channel is unpremultiplied. When rendering filtered depth from Arnold, this value is the far clip plane of the render camera.' )
__children["FocalBlur"]["SwitchDepthOffset"]["index"].setInput( __children["FocalBlur"]["Expression5"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["SwitchDepthOffset"]["in"], 'noduleLayout:section', 'top' )
__children["FocalBlur"]["SwitchDepthOffset"]["in"][0].setInput( __children["FocalBlur"]["Dot12"]["out"] )
__children["FocalBlur"]["SwitchDepthOffset"]["in"][1].setInput( __children["FocalBlur"]["SubtractDepth"]["out"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["SwitchDepthOffset"]["out"], 'noduleLayout:section', 'bottom' )
__children["FocalBlur"]["SwitchDepthOffset"]["__uiPosition"].setValue( imath.V2f( 842.474304, 39.2731972 ) )
__children["FocalBlur"]["Dot17"]["in"].setInput( __children["FocalBlur"]["Dot12"]["out"] )
__children["FocalBlur"]["Dot17"]["__uiPosition"].setValue( imath.V2f( 860.447693, 77.5156631 ) )
__children["FocalBlur"]["Backdrop4"]["title"].setValue( 'Unpremultiply Depth' )
__children["FocalBlur"]["Backdrop4"]["__uiPosition"].setValue( imath.V2f( 844.858887, 22.0906334 ) )
__children["FocalBlur"]["Backdrop4"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -15.6664429, -9.52845383 ), imath.V2f( 28.003418, 10 ) ) )
__children["FocalBlur"]["Backdrop5"]["title"].setValue( 'Camera Parameters' )
__children["FocalBlur"]["Backdrop5"]["description"].setValue( "We can boil down how the camera parameters affect the blur into 2 parameters: the focus distance, and a multplier on the amount of blur.\n\nWe store these 2 together in a V2f to make it easy to switch which source we're using for them." )
__children["FocalBlur"]["Backdrop5"]["__uiPosition"].setValue( imath.V2f( 802.829285, -17.2641258 ) )
__children["FocalBlur"]["Backdrop5"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -53.1891479, 21.5987644 ), imath.V2f( 10, 66.4095306 ) ) )
__children["FocalBlur"]["Backdrop6"]["title"].setValue( 'Multi Layer Disk Blur' )
__children["FocalBlur"]["Backdrop6"]["__uiPosition"].setValue( imath.V2f( 822.909424, -50.5358467 ) )
__children["FocalBlur"]["Backdrop6"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -32.2222595 ), imath.V2f( 42.696167, 10 ) ) )
__children["FocalBlur"]["DeleteTemporaryChannels"]["in"].setInput( __children["FocalBlur"]["AddInfill"]["out"] )
__children["FocalBlur"]["DeleteTemporaryChannels"]["channels"].setValue( '__averageRadius __averageSignedRadius __blurRadius __clip' )
__children["FocalBlur"]["DeleteTemporaryChannels"]["__uiPosition"].setValue( imath.V2f( 825.123169, -345.381042 ) )
__children["FocalBlur"]["JustAlphaAndRadius2"]["in"].setInput( __children["FocalBlur"]["Dot"]["out"] )
__children["FocalBlur"]["JustAlphaAndRadius2"]["mode"].setValue( 1 )
__children["FocalBlur"]["JustAlphaAndRadius2"]["channels"].setValue( '[A] __blurRadius' )
__children["FocalBlur"]["JustAlphaAndRadius2"]["__uiPosition"].setValue( imath.V2f( 1127.15161, -108.96254 ) )
__children["FocalBlur"]["SqrtSignedRadiusImage"]["in"].setInput( __children["FocalBlur"]["JustAlphaAndRadius2"]["out"] )
__children["FocalBlur"]["SqrtSignedRadiusImage"]["channels"]["channel1"]["name"].setValue( '__sqrtRadius' )
__children["FocalBlur"]["SqrtSignedRadiusImage"]["channels"]["channel1"]["value"].setInput( __children["FocalBlur"]["SqrtSignedRadius"]["out"]["sqrtRadius"] )
__children["FocalBlur"]["SqrtSignedRadiusImage"]["channels"]["channel2"]["name"].setValue( '__signedSqrtRadius' )
__children["FocalBlur"]["SqrtSignedRadiusImage"]["channels"]["channel2"]["value"].setInput( __children["FocalBlur"]["SqrtSignedRadius"]["out"]["signedSqrtRadius"] )
__children["FocalBlur"]["SqrtSignedRadiusImage"]["__uiPosition"].setValue( imath.V2f( 1127.15161, -117.12661 ) )
__children["FocalBlur"]["SqrtSignedRadius"]["code"].setValue( 'float radius = inChannel( "__blurRadius", 0 );\n\nif( inChannel( "A", 0 ) == 0 )\n{\n\tradius = 0;\n}\n\nsqrtRadius = sqrt( abs( radius ) );\n\nif( radius > 0 )\n{\n\tsignedSqrtRadius = sqrt( radius );\n}\nelse\n{\n\tsignedSqrtRadius = -sqrt( -radius );\n}' )
__children["FocalBlur"]["SqrtSignedRadius"]["__uiPosition"].setValue( imath.V2f( 1108.42725, -117.12661 ) )
__children["FocalBlur"]["Backdrop7"]["title"].setValue( 'Add A Tiny Bit Of Extra Alpha' )
__children["FocalBlur"]["Backdrop7"]["description"].setValue( 'So the unpremult biases tiny values towards black instead of NaN\n' )
__children["FocalBlur"]["Backdrop7"]["__uiPosition"].setValue( imath.V2f( 1132.19092, -232.143829 ) )
__children["FocalBlur"]["Backdrop7"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -21.4210205, -5.08203125 ), imath.V2f( 88.614624, 11.0820312 ) ) )
__children["FocalBlur"]["Dot19"]["in"].setInput( __children["FocalBlur"]["MainDiskBlur"]["out"] )
__children["FocalBlur"]["Dot19"]["__uiPosition"].setValue( imath.V2f( 822.123169, -173.596222 ) )
__children["FocalBlur"]["Backdrop9"]["title"].setValue( 'Unpremultiply Everything' )
__children["FocalBlur"]["Backdrop9"]["description"].setValue( 'Ready to be multiplied by the amount of infill we need.' )
__children["FocalBlur"]["Backdrop9"]["__uiPosition"].setValue( imath.V2f( 1145.47644, -256.273926 ) )
__children["FocalBlur"]["Backdrop9"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -34.706543, -10 ), imath.V2f( 74.9790039, 10 ) ) )
__children["FocalBlur"]["Backdrop10"]["title"].setValue( 'Add In The Prior Blurred Result At A Very Low Weight' )
__children["FocalBlur"]["Backdrop10"]["description"].setValue( 'This helps fill in any part ofs of the image we happen not to fill.' )
__children["FocalBlur"]["Backdrop10"]["__uiPosition"].setValue( imath.V2f( 1162.49536, -200.550323 ) )
__children["FocalBlur"]["Backdrop10"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -51.4239502, -16.7391663 ), imath.V2f( 58.4898682, 10 ) ) )
__children["FocalBlur"]["Backdrop11"]["title"].setValue( 'Compute An Infill Value' )
__children["FocalBlur"]["Backdrop11"]["__uiPosition"].setValue( imath.V2f( 1151.20496, -81.1162491 ) )
__children["FocalBlur"]["Backdrop11"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -44.1853027, -2 ), imath.V2f( 72.5820312, 10 ) ) )
__children["FocalBlur"]["JustAlphaAndRadius"]["in"].setInput( __children["FocalBlur"]["Dot14"]["out"] )
__children["FocalBlur"]["JustAlphaAndRadius"]["mode"].setValue( 1 )
__children["FocalBlur"]["JustAlphaAndRadius"]["channels"].setValue( '[A] __blurRadius' )
__children["FocalBlur"]["JustAlphaAndRadius"]["__uiPosition"].setValue( imath.V2f( 940.699768, -89.9195251 ) )
__children["FocalBlur"]["Dot"]["in"].setInput( __children["FocalBlur"]["SetBlurRadius"]["out"] )
__children["FocalBlur"]["Dot"]["__uiPosition"].setValue( imath.V2f( 1127.15161, 5.03942108 ) )
__children["FocalBlur"]["Dot21"]["in"].setInput( __children["FocalBlur"]["SetBlurRadius"]["out"] )
__children["FocalBlur"]["Dot21"]["__uiPosition"].setValue( imath.V2f( 1101.26758, 5.03942108 ) )
__children["FocalBlur"]["Dot22"]["in"].setInput( __children["FocalBlur"]["Dot21"]["out"] )
__children["FocalBlur"]["Dot22"]["__uiPosition"].setValue( imath.V2f( 1101.26758, -144.986588 ) )
__children["FocalBlur"]["Dot23"]["in"].setInput( __children["FocalBlur"]["MainDiskBlur"]["out"] )
__children["FocalBlur"]["Dot23"]["__uiPosition"].setValue( imath.V2f( 1088.80994, -71.0020905 ) )
__children["FocalBlur"]["Dot24"]["in"].setInput( __children["FocalBlur"]["Dot23"]["out"] )
__children["FocalBlur"]["Dot24"]["__uiPosition"].setValue( imath.V2f( 1088.80994, -195.435394 ) )
__children["FocalBlur"]["Backdrop12"]["title"].setValue( 'Multiply Infill Source By The Amount of Infill' )
__children["FocalBlur"]["Backdrop12"]["__uiPosition"].setValue( imath.V2f( 988.131104, -293.591156 ) )
__children["FocalBlur"]["Backdrop12"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -34.9577637, -5.41217041 ), imath.V2f( 63.892334, 22.7639465 ) ) )
__children["FocalBlur"]["Backdrop14"]["title"].setValue( 'Delete Temporary Channels' )
__children["FocalBlur"]["Backdrop14"]["__uiPosition"].setValue( imath.V2f( 825.123169, -345.381042 ) )
__children["FocalBlur"]["Backdrop14"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -14.7583008, -5.08203125 ), imath.V2f( 30.4585571, 11.0820312 ) ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["infilling"], 'description', "Enable additional blur to infill gaps.\n\nWhen there is a sharp variation in the amount of blur between different pixels, gaps are created because the algorithm doesn't know what was behind something that has been blurred out. For example, consider a small object that is completely out of focus in front of an in-focus background. The small object will be completely blurred out, leaving a hole in the in-focus background.\n\nThe infilling algorithm fills in these holes, using a series of blurs that try to estimate what colors would be behind the missing contributions.\n\nThe current infilling approach is quite slow, so you may want to deactivate it if dialing in the blur interactively." )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["infilling"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["infilling"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["infilling"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["infilling"], 'divider', True )
__children["FocalBlur"]["Backdrop15"]["title"].setValue( 'Apply Infill If Enabled' )
__children["FocalBlur"]["Backdrop15"]["__uiPosition"].setValue( imath.V2f( 825.123169, -318.060547 ) )
__children["FocalBlur"]["Backdrop15"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.5, -5.08203125 ), imath.V2f( 45.1524048, 11.0820312 ) ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraMode"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraMode"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraMode"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraMode"], 'preset:None', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraMode"], 'preset:Custom Camera', 'custom' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraMode"], 'preset:Scene Camera', 'scene' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraMode"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraMode"], 'divider', False )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraMode"], 'description', 'Determines the source for camera paramaters that affect the blur:\n\n- None : There is no modelling of a physical camera. Just set the focusDistance to the depth value that should be in focus, and use the blur multiplier to set the amount of blur.\n- Scene Camera : Use camera parameters found on a camera connected to the `cameraScene` plug.\n- Custom Camera : Use camera parameters, entered manually.\n' )
__children["FocalBlur"]["CameraModeSwitch"]["__index"].setInput( __children["FocalBlur"]["CameraModeSwitch"]["__outIndex"] )
__children["FocalBlur"]["CameraModeSwitch"]["selector"].setInput( __children["FocalBlur"]["cameraMode"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["CameraModeSwitch"]["in"], 'noduleLayout:section', 'top' )
__children["FocalBlur"]["CameraModeSwitch"]["in"][0]["name"].setValue( '*' )
__children["FocalBlur"]["CameraModeSwitch"]["in"][0]["value"].setInput( __children["FocalBlur"]["NoCameraExpression"]["__out"]["p0"] )
__children["FocalBlur"]["CameraModeSwitch"]["in"][1]["name"].setValue( 'custom' )
__children["FocalBlur"]["CameraModeSwitch"]["in"][1]["value"].setInput( __children["FocalBlur"]["CustomCameraExpression"]["__out"]["p0"] )
__children["FocalBlur"]["CameraModeSwitch"]["in"][2]["name"].setValue( 'scene' )
__children["FocalBlur"]["CameraModeSwitch"]["in"][2]["value"].setInput( __children["FocalBlur"]["SceneCameraExpression"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["CameraModeSwitch"]["out"], 'noduleLayout:section', 'bottom' )
__children["FocalBlur"]["CameraModeSwitch"]["__uiPosition"].setValue( imath.V2f( 766.802551, 15.4405613 ) )
__children["FocalBlur"]["SceneCameraExpression"]["__in"]["p0"].setInput( __children["FocalBlur"]["CameraQuery"]["out"][0]["source"] )
__children["FocalBlur"]["SceneCameraExpression"]["__in"]["p1"].setInput( __children["FocalBlur"]["CameraQuery"]["out"][0]["value"] )
__children["FocalBlur"]["SceneCameraExpression"]["__in"]["p2"].setInput( __children["FocalBlur"]["CameraQuery"]["out"][1]["source"] )
__children["FocalBlur"]["SceneCameraExpression"]["__in"]["p3"].setInput( __children["FocalBlur"]["CameraQuery"]["out"][1]["value"]["x"] )
__children["FocalBlur"]["SceneCameraExpression"]["__in"]["p4"].setInput( __children["FocalBlur"]["CameraQuery"]["out"][2]["source"] )
__children["FocalBlur"]["SceneCameraExpression"]["__in"]["p5"].setInput( __children["FocalBlur"]["CameraQuery"]["out"][2]["value"] )
__children["FocalBlur"]["SceneCameraExpression"]["__in"]["p6"].setInput( __children["FocalBlur"]["CameraQuery"]["out"][3]["source"] )
__children["FocalBlur"]["SceneCameraExpression"]["__in"]["p7"].setInput( __children["FocalBlur"]["CameraQuery"]["out"][3]["value"] )
__children["FocalBlur"]["SceneCameraExpression"]["__in"]["p8"].setInput( __children["FocalBlur"]["CameraQuery"]["out"][4]["source"] )
__children["FocalBlur"]["SceneCameraExpression"]["__in"]["p9"].setInput( __children["FocalBlur"]["CameraQuery"]["out"][4]["value"] )
__children["FocalBlur"]["SceneCameraExpression"]["__uiPosition"].setValue( imath.V2f( 768.393555, 21.7875843 ) )
__children["FocalBlur"]["CameraQuery"]["scene"].setInput( __children["FocalBlur"]["BoxIn2"]["out"] )
__children["FocalBlur"]["CameraQuery"]["cameraMode"].setInput( __children["FocalBlur"]["Expression"]["__out"]["p0"] )
__children["FocalBlur"]["CameraQuery"]["location"].setInput( __children["FocalBlur"]["cameraPath"] )
__children["FocalBlur"]["CameraQuery"]["queries"][0].setValue( 'focalLength' )
__children["FocalBlur"]["CameraQuery"]["queries"][1].setValue( 'aperture' )
__children["FocalBlur"]["CameraQuery"]["queries"][2].setValue( 'focusDistance' )
__children["FocalBlur"]["CameraQuery"]["queries"][3].setValue( 'fStop' )
__children["FocalBlur"]["CameraQuery"]["queries"][4].setValue( 'focalLengthWorldScale' )
__children["FocalBlur"]["CameraQuery"]["__uiPosition"].setValue( imath.V2f( 767.942566, 29.8591805 ) )
__children["FocalBlur"]["CustomCameraExpression"]["__in"]["p0"].setInput( __children["FocalBlur"]["fStop"] )
__children["FocalBlur"]["CustomCameraExpression"]["__in"]["p1"].setInput( __children["FocalBlur"]["focalLength"] )
__children["FocalBlur"]["CustomCameraExpression"]["__in"]["p2"].setInput( __children["FocalBlur"]["focalLengthWorldScale"] )
__children["FocalBlur"]["CustomCameraExpression"]["__in"]["p3"].setInput( __children["FocalBlur"]["focusDistance"] )
__children["FocalBlur"]["CustomCameraExpression"]["__in"]["p4"].setInput( __children["FocalBlur"]["horizontalAperture"] )
__children["FocalBlur"]["CustomCameraExpression"]["__uiPosition"].setValue( imath.V2f( 765.393494, 21.787466 ) )
__children["FocalBlur"]["NoCameraExpression"]["__in"]["p0"].setInput( __children["FocalBlur"]["focusDistance"] )
__children["FocalBlur"]["NoCameraExpression"]["__uiPosition"].setValue( imath.V2f( 762.390442, 21.7854328 ) )
__children["FocalBlur"]["Dot25"]["in"].setInput( __children["FocalBlur"]["Dot12"]["out"] )
__children["FocalBlur"]["Dot25"]["__uiPosition"].setValue( imath.V2f( 822.9505, 85.5897293 ) )
__children["FocalBlur"]["Dot26"]["in"].setInput( __children["FocalBlur"]["Dot25"]["out"] )
__children["FocalBlur"]["Dot26"]["__uiPosition"].setValue( imath.V2f( 822.9505, 35.2791519 ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraPath"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraPath"], 'pathPlugValueWidget:placeholderText', 'Render Camera' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraPath"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraPath"], 'layout:index', 7 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraPath"], 'layout:visibilityActivator', 'cameraScene' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraPath"], 'description', 'The scene path to the camera in `cameraScene` that you want to take settings from. If unset, defaults to the render camera set in the scene globals.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraPath"], 'plugValueWidget:type', 'GafferSceneUI.ScenePathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraPath"], 'scenePathPlugValueWidget:scene', 'cameraScene' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraPath"], 'scenePathPlugValueWidget:setNames', IECore.StringVectorData( [ '__cameras' ] ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["cameraPath"], 'scenePathPlugValueWidget:setsLabel', 'Show only cameras' )
__children["FocalBlur"]["Expression"]["__in"]["p0"].setInput( __children["FocalBlur"]["cameraPath"] )
__children["FocalBlur"]["Expression"]["__uiPosition"].setValue( imath.V2f( 775.942566, 29.858284 ) )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthChannel"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthChannel"], 'layout:section', 'Depth' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthChannel"], 'layout:index', 18 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthChannel"], 'description', 'Which image channel to use as the depth when computing the amount of blur.' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthChannel"], 'plugValueWidget:type', 'GafferImageUI.ChannelPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthInterpretation"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthInterpretation"], 'layout:section', 'Depth' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthInterpretation"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthInterpretation"], 'preset:Unpremultiplied', 'unpremultiplied' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthInterpretation"], 'preset:Premultiplied', 'premultiplied' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthInterpretation"], 'preset:Filtered With Background Value ( Arnold )', 'filteredWithBackground' )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthInterpretation"], 'layout:index', 19 )
Gaffer.Metadata.registerValue( __children["FocalBlur"]["depthInterpretation"], 'description', 'How the depth channel should be interpreted :\n\n- Premultiplied : Depth has been premultiplied by the alpha (typical when writing depth with a regular pixel filter).\n- Unpremultiplied : Depth has not been premultiplied by the alpha (typical when writing depth with a pixel filter such as "closest").\n- Filtered with background value (Arnold) : Depth includes a constant value for empty pixels, which needs to be subtracted before unpremultiplying. (typical with Arnold filtered depth which includes the camera far clip plane).' )
__children["FocalBlur"]["Expression4"]["__in"]["p0"].setInput( __children["FocalBlur"]["depthInterpretation"] )
__children["FocalBlur"]["Expression4"]["__uiPosition"].setValue( imath.V2f( 831.974609, 22.5270939 ) )
__children["FocalBlur"]["Expression5"]["__in"]["p0"].setInput( __children["FocalBlur"]["depthInterpretation"] )
__children["FocalBlur"]["Expression5"]["__uiPosition"].setValue( imath.V2f( 831.974731, 39.2740707 ) )
__children["FocalBlur"]["DataWindowBoundaryNormalization"]["in"].setInput( __children["FocalBlur"]["BoundaryAlphaImage"]["out"] )
__children["FocalBlur"]["DataWindowBoundaryNormalization"]["channels"]["channel"]["name"].setValue( 'edgeAlpha' )
__children["FocalBlur"]["DataWindowBoundaryNormalization"]["channels"]["channel"]["value"].setInput( __children["FocalBlur"]["DataWindowBoundaryNorm"]["out"]["output1"] )
__children["FocalBlur"]["DataWindowBoundaryNormalization"]["__uiPosition"].setValue( imath.V2f( 943.699768, -192.331863 ) )
__children["FocalBlur"]["DataWindowBoundaryNorm"]["parameters"]["dataWindowMin"].setInput( __children["FocalBlur"]["Expression6"]["__out"]["p1"] )
__children["FocalBlur"]["DataWindowBoundaryNorm"]["parameters"]["dataWindowMax"].setInput( __children["FocalBlur"]["Expression6"]["__out"]["p0"] )
__children["FocalBlur"]["DataWindowBoundaryNorm"]["parameters"]["maxRadius"].setInput( __children["FocalBlur"]["maxBlurRadius"] )
__children["FocalBlur"]["DataWindowBoundaryNorm"]["code"].setValue( 'float edgeFade( float p, float r, float boundMin, float boundMax )\n{\n\tfloat b = min( 1, min( p - boundMin, boundMax - p ) / r );\n\t\n\treturn max( 0, min( 1, 0.5 + 0.5 * b ) );\n}\n\n\nfloat rad = 1 * min( abs( inChannel( "__averagedRadius", 0.0 ) ), maxRadius );\nfloat coverage = (\n\tedgeFade( P[0], rad, dataWindowMin[0], dataWindowMax[0] ) *\n\tedgeFade( P[1], rad, dataWindowMin[1], dataWindowMax[1] )\n);\n\noutput1 = inChannel( "edgeAlpha", 0.0 ) / ( coverage * coverage );' )
__children["FocalBlur"]["DataWindowBoundaryNorm"]["__uiPosition"].setValue( imath.V2f( 921.627258, -192.331863 ) )
__children["FocalBlur"]["Expression6"]["__in"]["p0"].setInput( __children["FocalBlur"]["JustAlphaAndRadius"]["out"]["dataWindow"] )
__children["FocalBlur"]["Expression6"]["__uiPosition"].setValue( imath.V2f( 909.143494, -191.279495 ) )
__children["FocalBlur"]["TinyAlphaIncrementToAvoidUnpremultiplyPrecisionProblems"]["in"].setInput( __children["FocalBlur"]["AverageRadiusDiskBlur"]["out"] )
__children["FocalBlur"]["TinyAlphaIncrementToAvoidUnpremultiplyPrecisionProblems"]["channels"].setValue( '[A]' )
__children["FocalBlur"]["TinyAlphaIncrementToAvoidUnpremultiplyPrecisionProblems"]["lift"]["a"].setInput( __children["FocalBlur"]["Expression7"]["__out"]["p0"] )
__children["FocalBlur"]["TinyAlphaIncrementToAvoidUnpremultiplyPrecisionProblems"]["__uiPosition"].setValue( imath.V2f( 940.699768, -133.607788 ) )
__children["FocalBlur"]["Expression7"]["__uiPosition"].setValue( imath.V2f( 917.721069, -133.254898 ) )
__children["FocalBlur"]["Backdrop16"]["title"].setValue( 'Compute Local Average Radius' )
__children["FocalBlur"]["Backdrop16"]["description"].setValue( 'To avoid weighting high radiuses too highly, we average square roots.\n\nWe compute one average of signed radius ( used for detecting image regions that are behind the local average ), and one average of unsigned radius ( used for the actual blur amounts ).' )
__children["FocalBlur"]["Backdrop16"]["__uiPosition"].setValue( imath.V2f( 1120.83691, -121.208633 ) )
__children["FocalBlur"]["Backdrop16"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -26.2583008, -17.328125 ), imath.V2f( 102.950073, 33.8008118 ) ) )
__children["FocalBlur"]["Backdrop17"]["title"].setValue( 'Mask The Pixels That Are More Likely To Be Good For Infilling' )
__children["FocalBlur"]["Backdrop17"]["__uiPosition"].setValue( imath.V2f( 1120.66541, -165.752914 ) )
__children["FocalBlur"]["Backdrop17"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -14.4627686, -15.8062592 ), imath.V2f( 100.550781, 8.90696716 ) ) )
__children["FocalBlur"]["UnsqrtRadiusImage"]["in"].setInput( __children["FocalBlur"]["UnpremultiplySqrtRadius"]["out"] )
__children["FocalBlur"]["UnsqrtRadiusImage"]["channels"]["channel"]["name"].setValue( '__averagedRadius' )
__children["FocalBlur"]["UnsqrtRadiusImage"]["channels"]["channel"]["value"].setInput( __children["FocalBlur"]["UnsqrtRadius"]["out"]["output1"] )
__children["FocalBlur"]["UnsqrtRadiusImage"]["__uiPosition"].setValue( imath.V2f( 940.699768, -144.935913 ) )
__children["FocalBlur"]["UnsqrtRadius"]["code"].setValue( 'output1 = inChannel( "__sqrtRadius", 0 );\noutput1 = output1 * output1;' )
__children["FocalBlur"]["UnsqrtRadius"]["__uiPosition"].setValue( imath.V2f( 925.856995, -144.935913 ) )
__children["FocalBlur"]["Dot27"]["in"].setInput( __children["FocalBlur"]["AverageRadiusDiskBlur"]["out"] )
__children["FocalBlur"]["Dot27"]["__uiPosition"].setValue( imath.V2f( 900.154419, -130.681107 ) )
__children["FocalBlur"]["Backdrop18"]["title"].setValue( 'Compute Local Average Radius' )
__children["FocalBlur"]["Backdrop18"]["__uiPosition"].setValue( imath.V2f( 938.007629, -128.12352 ) )
__children["FocalBlur"]["Backdrop18"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -21.7402344, -21.8944321 ), imath.V2f( 29.9108276, 24.9395065 ) ) )
__children["FocalBlur"]["Backdrop19"]["title"].setValue( 'Identify "Boundary" Pixels' )
__children["FocalBlur"]["Backdrop19"]["description"].setValue( 'Boundary pixels are pixels which are outside the alpha coverage, but are close enough to the pixels that have information that we can compute an average radius for them. If a pixel is nearby to "boundary" pixels, that suggests it is on the edge of the shape, and should not be infilled.' )
__children["FocalBlur"]["Backdrop19"]["__uiPosition"].setValue( imath.V2f( 941.797302, -175.747269 ) )
__children["FocalBlur"]["Backdrop19"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -35.0477295, -21.0116272 ), imath.V2f( 35.519989, 22.2370987 ) ) )
__children["FocalBlur"]["Backdrop20"]["title"].setValue( 'Identify Regions Completely Outside The Image' )
__children["FocalBlur"]["Backdrop20"]["description"].setValue( 'These regions have very low coverage even after blurring. They are so far away from the pixels that contain things that they may not even be covered by the "boundary" pixels, but they definitely shouldn\'t be infilled.' )
__children["FocalBlur"]["Backdrop20"]["__uiPosition"].setValue( imath.V2f( 889.568604, -168.236588 ) )
__children["FocalBlur"]["Backdrop20"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -50.1342773, -10 ), imath.V2f( 10, 13.7716522 ) ) )
__children["FocalBlur"]["Dot28"]["in"].setInput( __children["FocalBlur"]["JustAlphaAndRadius"]["out"] )
__children["FocalBlur"]["Dot28"]["__uiPosition"].setValue( imath.V2f( 962.817261, -97.2515564 ) )
__children["FocalBlur"]["Backdrop21"]["title"].setValue( 'Blur The "Boundary" Pixels Back Towards The Image Contents' )
__children["FocalBlur"]["Backdrop21"]["__uiPosition"].setValue( imath.V2f( 943.699768, -217.493393 ) )
__children["FocalBlur"]["Backdrop21"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -29.7229614, -10.7460938 ), imath.V2f( 33.6830444, 16.7460938 ) ) )
__children["FocalBlur"]["Backdrop22"]["title"].setValue( '3 Reasons Not To Need Infilling' )
__children["FocalBlur"]["Backdrop22"]["description"].setValue( "The 3 reasons a pixel doesn't need to be infilled:\n* it is already covered by the initial blur\n* it is nowhere near any pixels with coverage\n* it is nearby to a lot of the boundary pixels ( this means it is likely an actual edge, not a gap that should be infilled )" )
__children["FocalBlur"]["Backdrop22"]["__uiPosition"].setValue( imath.V2f( 907.181152, -245.857986 ) )
__children["FocalBlur"]["Backdrop22"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -30.352356, -5.94447327 ), imath.V2f( 52.4720459, 11.4257507 ) ) )
__children["FocalBlur"]["Expression2"]["__engine"].setValue( 'python' )
__children["FocalBlur"]["Expression2"]["__expression"].setValue( 'parent["__out"]["p0"] = 0.00001' )
__children["FocalBlur"]["Expression3"]["__engine"].setValue( 'python' )
__children["FocalBlur"]["Expression3"]["__expression"].setValue( '\nimport math\n\ndepthPlaneScalingFactor = parent["__in"]["p0"]\n\ninvScale = 1 / depthPlaneScalingFactor\nmaxBlurRadius = parent["__in"]["p1"]\n\ndepthPlanes = math.ceil( math.log( maxBlurRadius ) / math.log( invScale ) )\n\nupperBoundaries = [ math.pow( invScale, i ) for i in range( 0, depthPlanes ) ]\n\nparent["__out"]["p0"] = IECore.FloatVectorData( [ -i for i in reversed( upperBoundaries ) ] + upperBoundaries )' )
__children["FocalBlur"]["SceneCameraExpression"]["__engine"].setValue( 'python' )
__children["FocalBlur"]["SceneCameraExpression"]["__expression"].setValue( 'import imath\n\nif ( \n\tparent["__in"]["p0"] == 0 or\n\tparent["__in"]["p2"] == 0 or \n\tparent["__in"]["p4"] == 0 or \n\tparent["__in"]["p6"] == 0 or \n\tparent["__in"]["p8"] == 0\n):\n\traise IECore.Exception( "Camera Not Found" )\n\n\n\nfocalLength = parent["__in"]["p1"]\nhorizontalAperture = parent["__in"]["p3"]\nfocusDistance = parent["__in"]["p5"]\nfStop = parent["__in"]["p7"]\nfocalLengthWorldScale = parent["__in"]["p9"]\n\nparent["__out"]["p0"] = imath.V2f( focusDistance, focalLength / horizontalAperture * focalLength * focalLengthWorldScale / fStop )\n\nparent["__out"]["p2"] = focalLength\nparent["__out"]["p5"] = horizontalAperture\nparent["__out"]["p4"] = focusDistance\nparent["__out"]["p1"] = fStop\nparent["__out"]["p3"] = focalLengthWorldScale\n' )
__children["FocalBlur"]["CustomCameraExpression"]["__engine"].setValue( 'python' )
__children["FocalBlur"]["CustomCameraExpression"]["__expression"].setValue( 'import imath\n\n\nfocalLength = parent["__in"]["p1"]\nhorizontalAperture = parent["__in"]["p4"]\nfocusDistance = parent["__in"]["p3"]\nfStop = parent["__in"]["p0"]\nfocalLengthWorldScale = parent["__in"]["p2"]\n\nparent["__out"]["p0"] = imath.V2f( focusDistance, focalLength / horizontalAperture * focalLength * focalLengthWorldScale / fStop )' )
__children["FocalBlur"]["NoCameraExpression"]["__engine"].setValue( 'python' )
__children["FocalBlur"]["NoCameraExpression"]["__expression"].setValue( 'import imath\n\nparent["__out"]["p0"] = imath.V2f( parent["__in"]["p0"], 1 )' )
__children["FocalBlur"]["Expression"]["__engine"].setValue( 'python' )
__children["FocalBlur"]["Expression"]["__expression"].setValue( '\n\nparent["__out"]["p0"] = parent["__in"]["p0"] != ""' )
__children["FocalBlur"]["Expression4"]["__engine"].setValue( 'python' )
__children["FocalBlur"]["Expression4"]["__expression"].setValue( 'parent["__out"]["p0"] = parent["__in"]["p0"] != "unpremultiplied"' )
__children["FocalBlur"]["Expression5"]["__engine"].setValue( 'python' )
__children["FocalBlur"]["Expression5"]["__expression"].setValue( 'parent["__out"]["p0"] = parent["__in"]["p0"] == "filteredWithBackground"' )
__children["FocalBlur"]["Expression6"]["__engine"].setValue( 'python' )
__children["FocalBlur"]["Expression6"]["__expression"].setValue( 'import imath\n\ndataWindow = parent["__in"]["p0"]\n\nparent["__out"]["p1"] = imath.V3f( dataWindow.min().x, dataWindow.min().y, 0 )\nparent["__out"]["p0"] = imath.V3f( dataWindow.max().x, dataWindow.max().y, 0 )' )
__children["FocalBlur"]["Expression7"]["__engine"].setValue( 'python' )
__children["FocalBlur"]["Expression7"]["__expression"].setValue( 'parent["__out"]["p0"] = 0.000001' )


del __children
