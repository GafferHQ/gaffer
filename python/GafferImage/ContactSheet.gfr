import Gaffer
import GafferImage
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["ContactSheet"] = Gaffer.Box( "ContactSheet" )
parent.addChild( __children["ContactSheet"] )
__children["ContactSheet"].addChild( GafferImage.ContactSheetCore( "ContactSheetCore" ) )
__children["ContactSheet"]["ContactSheetCore"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Switch( "Switch" ) )
__children["ContactSheet"]["Switch"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["Switch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["ContactSheet"]["BoxIn"].setup( Gaffer.ArrayPlug( "out", ) )
__children["ContactSheet"]["BoxIn"]["__in"].addChild( GafferImage.ImagePlug( "in0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.ArrayPlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["in"].addChild( GafferImage.ImagePlug( "in0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["ContactSheet"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.FormatPlug( "format", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.IntPlug( "mode", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.ContextQuery( "SwitchIndex" ) )
__children["ContactSheet"]["SwitchIndex"].addQuery( Gaffer.IntPlug( "value", defaultValue = 0, minValue = 0, ) )
__children["ContactSheet"]["SwitchIndex"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Switch( "ModeSwitch" ) )
__children["ContactSheet"]["ModeSwitch"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["ModeSwitch"]["in"].addChild( GafferImage.ImagePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ModeSwitch"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ModeSwitch"]["in"].addChild( GafferImage.ImagePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ModeSwitch"]["in"].addChild( GafferImage.ImagePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ModeSwitch"]["in"].addChild( GafferImage.ImagePlug( "in5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ModeSwitch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.StringPlug( "frames", defaultValue = '1-10', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Box( "LayersMode" ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.Collect( "Collect" ) )
__children["ContactSheet"]["LayersMode"]["Collect"].addInput( Gaffer.StringVectorDataPlug( "allLayers", defaultValue = IECore.StringVectorData( [  ] ), ) )
__children["ContactSheet"]["LayersMode"]["Collect"]["user"].addChild( Gaffer.IntVectorDataPlug( "switchIndexes", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Collect"]["user"].addChild( Gaffer.StringVectorDataPlug( "layerNames", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Collect"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.Box( "LayerQuery" ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"].addChild( Gaffer.Expression( "Expression" ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["Expression"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p0", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["Expression"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"].addChild( Gaffer.StringVectorDataPlug( "allLayers", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.Expression( "Expression" ) )
__children["ContactSheet"]["LayersMode"]["Expression"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.IntVectorDataPlug( "__in_p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.Expression( "Expression6" ) )
__children["ContactSheet"]["LayersMode"]["Expression6"]["__in"].addChild( Gaffer.ObjectVectorPlug( "p0", defaultValue = IECore.ObjectVector(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression6"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p1", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression6"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression6"]["__out"].addChild( Gaffer.IntVectorDataPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression6"]["__out"].addChild( Gaffer.IntPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.ContextVariables( "SwitchIndexContextVariableForCollect" ) )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForCollect"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForCollect"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "switchIndex", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForCollect"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.Expression( "Expression7" ) )
__children["ContactSheet"]["LayersMode"]["Expression7"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.ContextVariables( "SwitchIndexContextVariableForTile" ) )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForTile"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForTile"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "switchIndex", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForTile"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.Expression( "Expression8" ) )
__children["ContactSheet"]["LayersMode"]["Expression8"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression8"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.Expression( "Expression4" ) )
__children["ContactSheet"]["LayersMode"]["Expression4"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p0", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression4"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression4"]["__out"].addChild( Gaffer.IntPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, minValue = 0, maxValue = 1, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Expression4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( GafferImage.Shuffle( "Shuffle" ) )
__children["ContactSheet"]["LayersMode"]["Shuffle"]["shuffles"].addChild( Gaffer.ShufflePlug( "shuffle0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Shuffle"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.Expression( "Expression12" ) )
__children["ContactSheet"]["LayersMode"]["Expression12"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.NoSubstitutions ) )
__children["ContactSheet"]["LayersMode"]["Expression12"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( GafferImage.DeleteChannels( "DeleteChannels" ) )
__children["ContactSheet"]["LayersMode"]["DeleteChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["ContactSheet"]["LayersMode"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["ContactSheet"]["LayersMode"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["ContactSheet"]["LayersMode"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["LayersMode"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.IntVectorDataPlug( "connectedInputs", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.IntPlug( "numTiles", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.StringPlug( "label", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( Gaffer.Expression( "Label" ) )
__children["ContactSheet"]["LayersMode"]["Label"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p0", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Label"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p1", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Label"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Label"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"]["Label"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LayersMode"].addChild( GafferImage.ImageMetadata( "ImageMetadata" ) )
__children["ContactSheet"]["LayersMode"]["ImageMetadata"]["metadata"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "label", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["LayersMode"]["ImageMetadata"]["metadata"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "input", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["LayersMode"]["ImageMetadata"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Box( "SequenceMode" ) )
__children["ContactSheet"]["SequenceMode"].addChild( Gaffer.TimeWarp( "TimeWarp" ) )
__children["ContactSheet"]["SequenceMode"]["TimeWarp"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["SequenceMode"]["TimeWarp"]["user"].addChild( Gaffer.IntVectorDataPlug( "frameList", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"]["TimeWarp"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( Gaffer.ContextVariables( "SwitchIndexContextVariable" ) )
__children["ContactSheet"]["SequenceMode"]["SwitchIndexContextVariable"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["SequenceMode"]["SwitchIndexContextVariable"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "switchIndex", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["SequenceMode"]["SwitchIndexContextVariable"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( Gaffer.Expression( "InputContext" ) )
__children["ContactSheet"]["SequenceMode"]["InputContext"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"]["InputContext"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p1", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"]["InputContext"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"]["InputContext"]["__out"].addChild( Gaffer.IntPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"]["InputContext"]["__out"].addChild( Gaffer.FloatPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"]["InputContext"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["ContactSheet"]["SequenceMode"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["SequenceMode"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["ContactSheet"]["SequenceMode"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["ContactSheet"]["SequenceMode"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( Gaffer.StringPlug( "frames", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( Gaffer.Expression( "FrameListParser" ) )
__children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__out"].addChild( Gaffer.IntVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__out"].addChild( Gaffer.IntPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"]["FrameListParser"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( Gaffer.IntVectorDataPlug( "connectedInputs", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( Gaffer.IntPlug( "numTiles", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["SequenceMode"].addChild( GafferImage.ImageMetadata( "ImageMetadata" ) )
__children["ContactSheet"]["SequenceMode"]["ImageMetadata"]["metadata"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["SequenceMode"]["ImageMetadata"]["metadata"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "input", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["SequenceMode"]["ImageMetadata"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Box( "StandardMode" ) )
__children["ContactSheet"]["StandardMode"].addChild( Gaffer.ContextVariables( "SwitchIndexContextVariable" ) )
__children["ContactSheet"]["StandardMode"]["SwitchIndexContextVariable"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["StandardMode"]["SwitchIndexContextVariable"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "switchIndex", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["StandardMode"]["SwitchIndexContextVariable"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( Gaffer.Expression( "SwitchIndex" ) )
__children["ContactSheet"]["StandardMode"]["SwitchIndex"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"]["SwitchIndex"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"]["SwitchIndex"]["__out"].addChild( Gaffer.IntPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"]["SwitchIndex"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( Gaffer.IntVectorDataPlug( "__in_p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["ContactSheet"]["StandardMode"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["ContactSheet"]["StandardMode"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["ContactSheet"]["StandardMode"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["StandardMode"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( Gaffer.IntVectorDataPlug( "connectedInputs", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( Gaffer.IntPlug( "numTiles", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( Gaffer.Expression( "NumTiles" ) )
__children["ContactSheet"]["StandardMode"]["NumTiles"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"]["NumTiles"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"]["NumTiles"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["StandardMode"].addChild( GafferImage.ImageMetadata( "ImageMetadata" ) )
__children["ContactSheet"]["StandardMode"]["ImageMetadata"]["metadata"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "label", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["StandardMode"]["ImageMetadata"]["metadata"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "input", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["StandardMode"]["ImageMetadata"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Switch( "NumTiles" ) )
__children["ContactSheet"]["NumTiles"].setup( Gaffer.IntPlug( "in", defaultValue = 0, ) )
__children["ContactSheet"]["NumTiles"]["user"].addChild( Gaffer.V2iPlug( "divisions", defaultValue = imath.V2i( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["NumTiles"]["in"].addChild( Gaffer.IntPlug( "in1", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["NumTiles"]["in"].addChild( Gaffer.IntPlug( "in2", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["NumTiles"]["in"].addChild( Gaffer.IntPlug( "in3", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["NumTiles"]["in"].addChild( Gaffer.IntPlug( "in4", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["NumTiles"]["in"].addChild( Gaffer.IntPlug( "in5", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["NumTiles"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Box( "ViewsMode" ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.Collect( "Collect" ) )
__children["ContactSheet"]["ViewsMode"]["Collect"].addInput( Gaffer.StringVectorDataPlug( "viewNames", defaultValue = IECore.StringVectorData( [  ] ), ) )
__children["ContactSheet"]["ViewsMode"]["Collect"]["user"].addChild( Gaffer.IntVectorDataPlug( "switchIndexes", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Collect"]["user"].addChild( Gaffer.StringVectorDataPlug( "viewNames", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Collect"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.Expression( "Expression" ) )
__children["ContactSheet"]["ViewsMode"]["Expression"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.IntVectorDataPlug( "__in_p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.Expression( "Expression6" ) )
__children["ContactSheet"]["ViewsMode"]["Expression6"]["__in"].addChild( Gaffer.ObjectVectorPlug( "p0", defaultValue = IECore.ObjectVector(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression6"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p1", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression6"]["__out"].addChild( Gaffer.IntVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression6"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression6"]["__out"].addChild( Gaffer.IntPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.ContextVariables( "SwitchIndexContextVariableForCollect" ) )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForCollect"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForCollect"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "switchIndex", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForCollect"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.Expression( "Expression7" ) )
__children["ContactSheet"]["ViewsMode"]["Expression7"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.ContextVariables( "SwitchIndexContextVariableForTile" ) )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForTile"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForTile"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "switchIndex", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForTile"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.Expression( "Expression8" ) )
__children["ContactSheet"]["ViewsMode"]["Expression8"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression8"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.Expression( "Expression4" ) )
__children["ContactSheet"]["ViewsMode"]["Expression4"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p0", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression4"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 'left', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["ContactSheet"]["ViewsMode"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["ContactSheet"]["ViewsMode"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["ContactSheet"]["ViewsMode"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["ViewsMode"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.IntVectorDataPlug( "connectedInputs", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.IntPlug( "numTiles", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.Expression( "Expression13" ) )
__children["ContactSheet"]["ViewsMode"]["Expression13"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p0", defaultValue = IECore.StringVectorData( [ 'default' ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression13"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Expression13"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( GafferImage.SelectView( "SelectView" ) )
__children["ContactSheet"]["ViewsMode"]["SelectView"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.StringPlug( "label", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( Gaffer.Expression( "Label" ) )
__children["ContactSheet"]["ViewsMode"]["Label"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Label"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p1", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Label"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Label"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"]["Label"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ViewsMode"].addChild( GafferImage.ImageMetadata( "ImageMetadata" ) )
__children["ContactSheet"]["ViewsMode"]["ImageMetadata"]["metadata"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "label", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["ViewsMode"]["ImageMetadata"]["metadata"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "input", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["ViewsMode"]["ImageMetadata"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.IntPlug( "divisionsMode", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Expression( "Tiles" ) )
__children["ContactSheet"]["Tiles"]["__in"].addChild( Gaffer.V2iPlug( "p0", defaultValue = imath.V2i( 2147483647, 2147483647 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Tiles"]["__in"].addChild( GafferImage.FormatPlug( "p1", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Tiles"]["__in"].addChild( Gaffer.Box2fPlug( "p2", defaultValue = imath.Box2f(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Tiles"]["__in"].addChild( Gaffer.V2fPlug( "p3", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Tiles"]["__in"].addChild( Gaffer.IntPlug( "p4", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Tiles"]["__in"].addChild( Gaffer.IntPlug( "p5", defaultValue = 2, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Tiles"]["__in"].addChild( Gaffer.IntPlug( "p6", defaultValue = 2, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Tiles"]["__out"].addChild( Gaffer.Box2fVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.Box2fVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Tiles"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Box( "CollectMode" ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.IntVectorDataPlug( "__in_p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.ContextVariables( "ContextVariables" ) )
__children["ContactSheet"]["CollectMode"]["ContextVariables"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "switchIndex", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "tileName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "tileIndex", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["CollectMode"]["ContextVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.Expression( "ContextVariablesExpression" ) )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p1", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__out"].addChild( Gaffer.IntPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__out"].addChild( Gaffer.StringPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["ContactSheet"]["CollectMode"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["ContactSheet"]["CollectMode"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["ContactSheet"]["CollectMode"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["CollectMode"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.IntVectorDataPlug( "connectedInputs", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.IntPlug( "numTiles", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.StringPlug( "tileNameVariable", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.StringVectorDataPlug( "tileNames", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.StringPlug( "tileIndexVariable", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.Expression( "NumTilesExpression" ) )
__children["ContactSheet"]["CollectMode"]["NumTilesExpression"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["NumTilesExpression"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p1", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["NumTilesExpression"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["NumTilesExpression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( Gaffer.Expression( "Label" ) )
__children["ContactSheet"]["CollectMode"]["Label"]["__in"].addChild( Gaffer.IntVectorDataPlug( "p0", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["Label"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p1", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["Label"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["Label"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"]["Label"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["CollectMode"].addChild( GafferImage.ImageMetadata( "ImageMetadata" ) )
__children["ContactSheet"]["CollectMode"]["ImageMetadata"]["metadata"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "label", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["CollectMode"]["ImageMetadata"]["metadata"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "input", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["CollectMode"]["ImageMetadata"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.StringVectorDataPlug( "tileNames", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.StringPlug( "tileNameVariable", defaultValue = 'contactSheet:tile', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.StringPlug( "tileIndexVariable", defaultValue = 'contactSheet:tileIndex', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.V2iPlug( "divisions", defaultValue = imath.V2i( 3, 3 ), minValue = imath.V2i( 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.FormatQuery( "FirstTileFormatQuery" ) )
__children["ContactSheet"]["FirstTileFormatQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.ContextVariables( "FirstTile" ) )
__children["ContactSheet"]["FirstTile"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["FirstTile"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContactSheet"]["FirstTile"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.IntPlug( "verticalAlignment", defaultValue = 2, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Switch( "Divisions" ) )
__children["ContactSheet"]["Divisions"].setup( Gaffer.V2iPlug( "in", defaultValue = imath.V2i( 2147483647, 2147483647 ), ) )
__children["ContactSheet"]["Divisions"]["in"].addChild( Gaffer.V2iPlug( "in1", defaultValue = imath.V2i( 2147483647, 2147483647 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Divisions"]["in"].addChild( Gaffer.V2iPlug( "in2", defaultValue = imath.V2i( 2147483647, 2147483647 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Divisions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Expression( "AutomaticDivisions" ) )
__children["ContactSheet"]["AutomaticDivisions"]["__in"].addChild( GafferImage.FormatPlug( "p0", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["AutomaticDivisions"]["__in"].addChild( Gaffer.Box2fPlug( "p1", defaultValue = imath.Box2f(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["AutomaticDivisions"]["__in"].addChild( Gaffer.V2fPlug( "p2", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["AutomaticDivisions"]["__in"].addChild( Gaffer.IntPlug( "p3", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["AutomaticDivisions"]["__in"].addChild( GafferImage.FormatPlug( "p4", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["AutomaticDivisions"]["__out"].addChild( Gaffer.V2iPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2i( 2147483647, 2147483647 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["AutomaticDivisions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.ContactSheetCore( "LabelContactSheet" ) )
__children["ContactSheet"]["LabelContactSheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.Text( "LabelText" ) )
__children["ContactSheet"]["LabelText"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.Merge( "LabelMerge" ) )
__children["ContactSheet"]["LabelMerge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["LabelMerge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Expression( "Expression" ) )
__children["ContactSheet"]["Expression"]["__in"].addChild( Gaffer.AtomicCompoundDataPlug( "p0", defaultValue = IECore.CompoundData(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 'Hello World', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.V2iPlug( "outDivisions", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2i( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.V2fPlug( "spacing", defaultValue = imath.V2f( 0, 0 ), minValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Node( "Layout" ) )
__children["ContactSheet"]["Layout"]["user"].addChild( Gaffer.Box2fPlug( "contentArea", defaultValue = imath.Box2f(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Layout"]["user"].addChild( Gaffer.V2fPlug( "spacing", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Layout"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Expression( "ContentAreaExpression" ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"].addChild( Gaffer.FloatPlug( "p0", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"].addChild( Gaffer.BoolPlug( "p1", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"].addChild( GafferImage.FormatPlug( "p2", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"].addChild( Gaffer.IntPlug( "p3", defaultValue = 0, minValue = 0, maxValue = 4, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"].addChild( Gaffer.BoolPlug( "p4", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"].addChild( Gaffer.FloatPlug( "p5", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"].addChild( Gaffer.FloatPlug( "p6", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"].addChild( Gaffer.FloatPlug( "p7", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"].addChild( Gaffer.FloatPlug( "p8", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"].addChild( Gaffer.V2fPlug( "p9", defaultValue = imath.V2f( 0, 0 ), minValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__out"].addChild( Gaffer.Box2fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Box2f(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"]["__out"].addChild( Gaffer.V2fPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ContentAreaExpression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Backdrop( "Modes" ) )
__children["ContactSheet"]["Modes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Modes"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Backdrop( "Backdrop1" ) )
__children["ContactSheet"]["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.IntPlug( "horizontalAlignment", defaultValue = 2, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.BoolPlug( "labelsEnabled", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Color4fPlug( "labelColor", defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.BoolPlug( "labelShadow", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Color4fPlug( "labelShadowColor", defaultValue = imath.Color4f( 0, 0, 0, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.V2fPlug( "labelShadowOffset", defaultValue = imath.V2f( 1, -1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.FloatPlug( "labelShadowBlur", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.FloatPlug( "marginTop", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.FloatPlug( "marginBottom", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.FloatPlug( "marginLeft", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.FloatPlug( "marginRight", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.IntPlug( "labelHorizontalAlignment", defaultValue = 0, minValue = 0, maxValue = 2, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.IntPlug( "labelVerticalAlignment", defaultValue = 0, minValue = 0, maxValue = 4, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.FloatPlug( "labelScale", defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Expression( "Expression1" ) )
__children["ContactSheet"]["Expression1"]["__in"].addChild( Gaffer.Box2fVectorDataPlug( "p0", defaultValue = IECore.Box2fVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__in"].addChild( Gaffer.FloatPlug( "p1", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__in"].addChild( Gaffer.BoolPlug( "p2", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__in"].addChild( Gaffer.FloatPlug( "p3", defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__in"].addChild( Gaffer.FloatPlug( "p4", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__in"].addChild( Gaffer.V2fPlug( "p5", defaultValue = imath.V2f( 1, -1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__in"].addChild( Gaffer.IntPlug( "p6", defaultValue = 0, minValue = 0, maxValue = 4, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__in"].addChild( Gaffer.FloatPlug( "p7", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__out"].addChild( Gaffer.Box2fVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.Box2fVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__out"].addChild( GafferImage.FormatPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__out"].addChild( Gaffer.Box2iPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Box2i(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__out"].addChild( Gaffer.FloatPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__out"].addChild( Gaffer.V2fPlug( "p4", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2f( 5, -5 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__out"].addChild( Gaffer.IntPlug( "p5", direction = Gaffer.Plug.Direction.Out, defaultValue = 50, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"]["__out"].addChild( Gaffer.IntPlug( "p6", direction = Gaffer.Plug.Direction.Out, defaultValue = 1, minValue = 0, maxValue = 2, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.Constant( "LabelFormat" ) )
__children["ContactSheet"]["LabelFormat"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Backdrop( "Labels" ) )
__children["ContactSheet"]["Labels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Labels"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Backdrop( "ModesDescription" ) )
__children["ContactSheet"]["ModesDescription"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ModesDescription"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Dot( "Dot" ) )
__children["ContactSheet"]["Dot"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Dot( "Dot1" ) )
__children["ContactSheet"]["Dot1"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.StringPlug( "labelFormat", defaultValue = '{label}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.BoolPlug( "bordersEnabled", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.FloatPlug( "borderWidth", defaultValue = 4.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.Rectangle( "BorderRectangle" ) )
__children["ContactSheet"]["BorderRectangle"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.ContactSheetCore( "BorderContactSheet" ) )
__children["ContactSheet"]["BorderContactSheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Expression( "Expression2" ) )
__children["ContactSheet"]["Expression2"]["__in"].addChild( Gaffer.Box2fVectorDataPlug( "p0", defaultValue = IECore.Box2fVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression2"]["__in"].addChild( Gaffer.FloatPlug( "p1", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression2"]["__out"].addChild( Gaffer.Box2fVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.Box2fVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression2"]["__out"].addChild( GafferImage.FormatPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression2"]["__out"].addChild( Gaffer.Box2fPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 100, 100 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Expression2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.Constant( "BorderFormat" ) )
__children["ContactSheet"]["BorderFormat"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.Merge( "BorderMerge" ) )
__children["ContactSheet"]["BorderMerge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["BorderMerge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Backdrop( "Borders" ) )
__children["ContactSheet"]["Borders"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["Borders"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.IntPlug( "borderColorMode", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Color4fPlug( "borderColor", defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.StringPlug( "borderColorMetadata", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Color4fPlug( "borderErrorColor", defaultValue = imath.Color4f( 0.600000024, 0, 0, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.BoolPlug( "borderCheckNaN", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.BoolPlug( "borderCheckFileValid", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Color4fPlug( "borderMin", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.BoolPlug( "borderCheckMin", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.BoolPlug( "borderCheckMax", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Color4fPlug( "borderMax", defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( GafferImage.ImageStats( "ImageStats" ) )
__children["ContactSheet"]["ImageStats"]["user"].addChild( Gaffer.Color4fPlug( "min", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ImageStats"]["user"].addChild( Gaffer.Color4fPlug( "max", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ImageStats"]["user"].addChild( Gaffer.Color4fPlug( "average", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ImageStats"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Dot( "Dot2" ) )
__children["ContactSheet"]["Dot2"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["Dot2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Switch( "BorderColor" ) )
__children["ContactSheet"]["BorderColor"].setup( Gaffer.Color4fPlug( "in", defaultValue = imath.Color4f( 1, 1, 1, 1 ), ) )
__children["ContactSheet"]["BorderColor"]["in"].addChild( Gaffer.Color4fPlug( "in1", defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["BorderColor"]["in"].addChild( Gaffer.Color4fPlug( "in2", defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["BorderColor"]["in"].addChild( Gaffer.Color4fPlug( "in3", defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["BorderColor"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Dot( "Dot3" ) )
__children["ContactSheet"]["Dot3"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContactSheet"]["Dot3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Expression( "ErrorCheckColor" ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.AtomicCompoundDataPlug( "p0", defaultValue = IECore.CompoundData(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.Color4fPlug( "p1", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.Color4fPlug( "p2", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.Color4fPlug( "p3", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.BoolPlug( "p4", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.BoolPlug( "p5", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.BoolPlug( "p6", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.BoolPlug( "p7", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.Color4fPlug( "p8", defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.Color4fPlug( "p9", defaultValue = imath.Color4f( 0.600000024, 0, 0, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.Color4fPlug( "p10", defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__in"].addChild( Gaffer.Color4fPlug( "p11", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"]["__out"].addChild( Gaffer.Color4fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["ErrorCheckColor"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.Expression( "MetadataColor" ) )
__children["ContactSheet"]["MetadataColor"]["__in"].addChild( Gaffer.AtomicCompoundDataPlug( "p0", defaultValue = IECore.CompoundData(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["MetadataColor"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["MetadataColor"]["__out"].addChild( Gaffer.Color4fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"]["MetadataColor"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet"].addChild( Gaffer.StringPlug( "filter", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestSequence"] = GafferImage.Checkerboard( "TestSequence" )
parent.addChild( __children["TestSequence"] )
__children["TestSequence"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"] = Gaffer.Box( "TestLayers" )
parent.addChild( __children["TestLayers"] )
__children["TestLayers"].addChild( GafferImage.CollectImages( "CollectImages" ) )
__children["TestLayers"]["CollectImages"]["user"].addChild( Gaffer.IntPlug( "numLayers", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"]["CollectImages"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"].addChild( Gaffer.Expression( "Expression" ) )
__children["TestLayers"]["Expression"]["__in"].addChild( Gaffer.IntPlug( "p0", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"]["Expression"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"].addChild( GafferImage.Checkerboard( "Checkerboard3" ) )
__children["TestLayers"]["Checkerboard3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"].addChild( Gaffer.Random( "Random" ) )
__children["TestLayers"]["Random"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["TestLayers"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["TestLayers"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"].addChild( Gaffer.IntPlug( "numLayers", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestLayers"].addChild( GafferImage.FormatPlug( "format", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 64.0, minValue = 1.0, maxValue = 4096.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestCollect"] = GafferImage.Checkerboard( "TestCollect" )
parent.addChild( __children["TestCollect"] )
__children["TestCollect"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Random"] = Gaffer.Random( "Random" )
parent.addChild( __children["Random"] )
__children["Random"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestViews"] = Gaffer.Box( "TestViews" )
parent.addChild( __children["TestViews"] )
__children["TestViews"].addChild( GafferImage.Checkerboard( "Checkerboard1" ) )
__children["TestViews"]["Checkerboard1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestViews"].addChild( GafferImage.Checkerboard( "Checkerboard2" ) )
__children["TestViews"]["Checkerboard2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestViews"].addChild( GafferImage.CreateViews( "CreateViews" ) )
__children["TestViews"]["CreateViews"]["views"].addChild( Gaffer.NameValuePlug( "left", GafferImage.ImagePlug( "value", ), True, "view0", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["TestViews"]["CreateViews"]["views"].addChild( Gaffer.NameValuePlug( "right", GafferImage.ImagePlug( "value", ), True, "view1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["TestViews"]["CreateViews"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestViews"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestViews"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["TestViews"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["TestViews"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Tall"] = GafferImage.Constant( "Tall" )
parent.addChild( __children["Tall"] )
__children["Tall"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NaN"] = Gaffer.Box( "NaN" )
parent.addChild( __children["NaN"] )
__children["NaN"].addChild( GafferImage.Constant( "Constant" ) )
__children["NaN"]["Constant"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NaN"].addChild( GafferImage.Constant( "Constant2" ) )
__children["NaN"]["Constant2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NaN"].addChild( GafferImage.Merge( "Merge" ) )
__children["NaN"]["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NaN"]["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NaN"].addChild( GafferImage.Merge( "Merge1" ) )
__children["NaN"]["Merge1"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NaN"]["Merge1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NaN"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["NaN"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["NaN"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["NaN"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 6.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 46793 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:modeIsSequence', 'parent["mode"].getValue() == 1' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:modeIsCollect', 'parent["mode"].getValue() == 4' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:divisionsModeIsCustom', 'parent["divisionsMode"].getValue() == 1' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:divisionsModeIsAutomatic', 'parent["divisionsMode"].getValue() == 0' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:labelsAreEnabled', 'parent["labelsEnabled"].getValue()' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:labelShadowsAreEnabled', 'parent["labelsEnabled"].getValue() and parent["labelShadow"].getValue()' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:borderUsesColor', 'parent["borderColorMode"].getValue() in ( 0, 1 )' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:bordersAreEnabled', 'parent["bordersEnabled"].getValue()' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:borderColorModeIsMetadata', 'parent["borderColorMode"].getValue() == 2' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:borderColorModeIsErrorCheck', 'parent["borderColorMode"].getValue() == 1' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:borderCheckMinIsEnabled', 'parent["borderCheckMin"].getValue()' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'layout:activator:borderCheckMaxIsEnabled', 'parent["borderCheckMax"].getValue()' )
Gaffer.Metadata.registerValue( __children["ContactSheet"], 'description', 'Assembles multiple input images into a tiled grid, with customisable layout, labels and borders.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["user"], 'layout:section', 'User' )
__children["ContactSheet"]["ContactSheetCore"]["in"].setInput( __children["ContactSheet"]["ModeSwitch"]["out"] )
__children["ContactSheet"]["ContactSheetCore"]["format"].setInput( __children["ContactSheet"]["format"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ContactSheetCore"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["ContactSheet"]["ContactSheetCore"]["tiles"].setInput( __children["ContactSheet"]["Tiles"]["__out"]["p0"] )
__children["ContactSheet"]["ContactSheetCore"]["tileVariable"].setValue( '__contactSheet:tile' )
__children["ContactSheet"]["ContactSheetCore"]["filter"].setInput( __children["ContactSheet"]["filter"] )
__children["ContactSheet"]["ContactSheetCore"]["__resampledIn"].setInput( __children["ContactSheet"]["ContactSheetCore"]["__resample"]["out"] )
__children["ContactSheet"]["ContactSheetCore"]["__uiPosition"].setValue( imath.V2f( 275.804169, -112.797943 ) )
__children["ContactSheet"]["Switch"]["index"].setInput( __children["ContactSheet"]["SwitchIndex"]["out"][0]["value"] )
__children["ContactSheet"]["Switch"]["deleteContextVariables"].setValue( '__contactSheet:switchIndex __contactSheet:tile' )
__children["ContactSheet"]["Switch"]["in"].setInput( __children["ContactSheet"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Switch"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Switch"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Switch"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["Switch"]["__uiPosition"].setValue( imath.V2f( 274.304169, -2.41288471 ) )
__children["ContactSheet"]["__uiPosition"].setValue( imath.V2f( 288.482086, 40.5164795 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["__uiPosition"], 'layout:section', 'Settings' )
__children["ContactSheet"]["BoxIn"]["__in"].setInput( __children["ContactSheet"]["in"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["BoxIn"]["__in"], 'description', 'The array of inputs to choose from. One of these is chosen\nby the index plug to be passed through to the output.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::CompoundNodule' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["BoxIn"]["__in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["BoxIn"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["ContactSheet"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 275.804169, 13.1881714 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["in"], 'description', 'The images to be included in the contact sheet.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["in"], 'nodule:type', 'GafferUI::CompoundNodule' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["in"], 'layout:index', 0 )
__children["ContactSheet"]["BoxOut"]["in"].setInput( __children["ContactSheet"]["BorderMerge"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["ContactSheet"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 283.299011, -225.985657 ) )
__children["ContactSheet"]["out"].setInput( __children["ContactSheet"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["format"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["format"], 'formatPlugValueWidget:mode', 'standard' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["format"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["format"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["format"], 'description', 'The format of the output image.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'preset:Standard', 0 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'preset:Sequence', 1 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'preset:Layers', 2 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'preset:Views', 3 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'preset:Collect', 4 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'divider', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["mode"], 'description', 'Defines how contact sheet tiles are generated from the source images :\n\n- Standard : Each source generates a tile in the contact sheet.\n- Sequence : Each frame in `frames` generates a tile in the contact sheet. Repeated for each source in order.\n- Layers : Each layer generates a tile in the contact sheet. Repeated for each source in order.\n- Views : Each view generates a tile in the contact sheet. Repeated for each source in order.\n- Collect : Each context defined by `tileNames` and `tileNameVariable` generates a tile in the contact sheet. Repeated for each source in order.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SwitchIndex"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["SwitchIndex"]["queries"][0]["name"].setValue( '__contactSheet:switchIndex' )
__children["ContactSheet"]["SwitchIndex"]["__uiPosition"].setValue( imath.V2f( 259.844635, 2.34626555 ) )
__children["ContactSheet"]["ModeSwitch"]["index"].setInput( __children["ContactSheet"]["mode"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ModeSwitch"]["in"], 'noduleLayout:section', 'top' )
__children["ContactSheet"]["ModeSwitch"]["in"][0].setInput( __children["ContactSheet"]["StandardMode"]["out"] )
__children["ContactSheet"]["ModeSwitch"]["in"][1].setInput( __children["ContactSheet"]["SequenceMode"]["out"] )
__children["ContactSheet"]["ModeSwitch"]["in"][2].setInput( __children["ContactSheet"]["LayersMode"]["out"] )
__children["ContactSheet"]["ModeSwitch"]["in"][3].setInput( __children["ContactSheet"]["ViewsMode"]["out"] )
__children["ContactSheet"]["ModeSwitch"]["in"][4].setInput( __children["ContactSheet"]["CollectMode"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ModeSwitch"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["ModeSwitch"]["__uiPosition"].setValue( imath.V2f( 275.804169, -55.9116516 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["frames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["frames"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["frames"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["frames"], 'layout:visibilityActivator', 'modeIsSequence' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["frames"], 'description', 'The frames to use when in `Sequence` mode. Example syntax :\n\n- `1-100x10`\n- `1-10, 15, 20, 21`' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["user"], 'layout:section', 'User' )
__children["ContactSheet"]["LayersMode"]["Collect"]["user"]["switchIndexes"].setInput( __children["ContactSheet"]["LayersMode"]["Expression6"]["__out"]["p1"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["Collect"]["user"]["switchIndexes"], 'nodule:type', '' )
__children["ContactSheet"]["LayersMode"]["Collect"]["user"]["layerNames"].setInput( __children["ContactSheet"]["LayersMode"]["Expression6"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["Collect"]["user"]["layerNames"], 'nodule:type', '' )
__children["ContactSheet"]["LayersMode"]["Collect"]["contextValues"].setInput( __children["ContactSheet"]["LayersMode"]["Expression"]["__out"]["p0"] )
__children["ContactSheet"]["LayersMode"]["Collect"]["in"]["allLayers"].setInput( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["allLayers"] )
__children["ContactSheet"]["LayersMode"]["Collect"]["__uiPosition"].setValue( imath.V2f( 349.091095, -36.4899826 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"], 'noduleLayout:customGadget:addButtonTop:visible', False )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["__uiPosition"].setValue( imath.V2f( 349.991089, -28.1579514 ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["BoxIn"]["__in"].setInput( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["in"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["BoxIn"]["__in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 9.1993227, 8.3320322 ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["in"].setInput( __children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForCollect"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["in"], 'noduleLayout:spacing', 2.0 )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["Expression"]["__in"]["p0"].setInput( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["BoxIn"]["out"]["channelNames"] )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["Expression"]["__uiPosition"].setValue( imath.V2f( 7.9000001, -1.5 ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["allLayers"].setInput( __children["ContactSheet"]["LayersMode"]["LayerQuery"]["Expression"]["__out"]["p0"] )
__children["ContactSheet"]["LayersMode"]["Expression"]["__in"]["p0"].setInput( __children["ContactSheet"]["LayersMode"]["connectedInputs"] )
__children["ContactSheet"]["LayersMode"]["Expression"]["__uiPosition"].setValue( imath.V2f( 338.742767, -36.3624229 ) )
__children["ContactSheet"]["LayersMode"]["__in_p0"].setInput( __children["ContactSheet"]["Switch"]["connectedInputs"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["__in_p0"], 'layout:section', 'Settings' )
__children["ContactSheet"]["LayersMode"]["Expression6"]["__in"]["p0"].setInput( __children["ContactSheet"]["LayersMode"]["Collect"]["out"]["allLayers"] )
__children["ContactSheet"]["LayersMode"]["Expression6"]["__in"]["p1"].setInput( __children["ContactSheet"]["LayersMode"]["connectedInputs"] )
__children["ContactSheet"]["LayersMode"]["Expression6"]["__uiPosition"].setValue( imath.V2f( 363.453522, -36.8137474 ) )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForCollect"]["variables"]["switchIndex"]["name"].setValue( '__contactSheet:switchIndex' )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForCollect"]["variables"]["switchIndex"]["value"].setInput( __children["ContactSheet"]["LayersMode"]["Expression7"]["__out"]["p0"] )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForCollect"]["in"].setInput( __children["ContactSheet"]["LayersMode"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForCollect"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForCollect"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForCollect"]["__uiPosition"].setValue( imath.V2f( 349.991089, -21.1124687 ) )
__children["ContactSheet"]["LayersMode"]["in"].setInput( __children["ContactSheet"]["Switch"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["in"], 'layout:index', 0 )
__children["ContactSheet"]["LayersMode"]["Expression7"]["__uiPosition"].setValue( imath.V2f( 355.397827, -15.4375601 ) )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForTile"]["variables"]["switchIndex"]["name"].setValue( '__contactSheet:switchIndex' )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForTile"]["variables"]["switchIndex"]["value"].setInput( __children["ContactSheet"]["LayersMode"]["Expression8"]["__out"]["p0"] )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForTile"]["in"].setInput( __children["ContactSheet"]["LayersMode"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForTile"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForTile"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForTile"]["__uiPosition"].setValue( imath.V2f( 321.692902, -21.1124687 ) )
__children["ContactSheet"]["LayersMode"]["Expression8"]["__in"]["p0"].setInput( __children["ContactSheet"]["LayersMode"]["Collect"]["user"]["switchIndexes"] )
__children["ContactSheet"]["LayersMode"]["Expression8"]["__uiPosition"].setValue( imath.V2f( 333.772522, -28.1239777 ) )
__children["ContactSheet"]["LayersMode"]["Expression4"]["__in"]["p0"].setInput( __children["ContactSheet"]["LayersMode"]["Collect"]["user"]["layerNames"] )
__children["ContactSheet"]["LayersMode"]["Expression4"]["__uiPosition"].setValue( imath.V2f( 333.779114, -40.9355507 ) )
__children["ContactSheet"]["LayersMode"]["Shuffle"]["in"].setInput( __children["ContactSheet"]["LayersMode"]["DeleteChannels"]["out"] )
__children["ContactSheet"]["LayersMode"]["Shuffle"]["shuffles"]["shuffle0"]["source"].setValue( '*' )
__children["ContactSheet"]["LayersMode"]["Shuffle"]["shuffles"]["shuffle0"]["deleteSource"].setValue( True )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["Shuffle"]["shuffles"]["shuffle0"]["source"], 'channelPlugValueWidget:isCustom', True )
__children["ContactSheet"]["LayersMode"]["Shuffle"]["shuffles"]["shuffle0"]["destination"].setInput( __children["ContactSheet"]["LayersMode"]["Expression12"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["Shuffle"]["shuffles"]["shuffle0"]["destination"], 'channelPlugValueWidget:isCustom', True )
__children["ContactSheet"]["LayersMode"]["Shuffle"]["__uiPosition"].setValue( imath.V2f( 321.692902, -52.4600754 ) )
__children["ContactSheet"]["LayersMode"]["out"].setInput( __children["ContactSheet"]["LayersMode"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["out"], 'layout:index', 1 )
__children["ContactSheet"]["LayersMode"]["Expression12"]["__uiPosition"].setValue( imath.V2f( 312.323639, -52.466877 ) )
__children["ContactSheet"]["LayersMode"]["DeleteChannels"]["in"].setInput( __children["ContactSheet"]["LayersMode"]["SwitchIndexContextVariableForTile"]["out"] )
__children["ContactSheet"]["LayersMode"]["DeleteChannels"]["mode"].setInput( __children["ContactSheet"]["LayersMode"]["Expression4"]["__out"]["p1"] )
__children["ContactSheet"]["LayersMode"]["DeleteChannels"]["channels"].setInput( __children["ContactSheet"]["LayersMode"]["Expression4"]["__out"]["p0"] )
__children["ContactSheet"]["LayersMode"]["DeleteChannels"]["__uiPosition"].setValue( imath.V2f( 321.692902, -44.2960129 ) )
__children["ContactSheet"]["LayersMode"]["BoxIn"]["__in"].setInput( __children["ContactSheet"]["LayersMode"]["in"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["BoxIn"]["__in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["LayersMode"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 335.841919, -12.7804375 ) )
__children["ContactSheet"]["LayersMode"]["BoxOut"]["in"].setInput( __children["ContactSheet"]["LayersMode"]["ImageMetadata"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["ContactSheet"]["LayersMode"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 323.192902, -74.7893906 ) )
__children["ContactSheet"]["LayersMode"]["__uiPosition"].setValue( imath.V2f( 290.582733, -32.5646515 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["__uiPosition"], 'layout:section', 'Settings' )
__children["ContactSheet"]["LayersMode"]["connectedInputs"].setInput( __children["ContactSheet"]["Switch"]["connectedInputs"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["connectedInputs"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["connectedInputs"], 'layout:section', 'Settings.In' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["connectedInputs"], 'layout:index', 2 )
__children["ContactSheet"]["LayersMode"]["numTiles"].setInput( __children["ContactSheet"]["LayersMode"]["Expression6"]["__out"]["p2"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["numTiles"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["numTiles"], 'layout:section', 'Settings.Out' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["numTiles"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["label"], 'layout:section', 'Settings.Out' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["label"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LayersMode"]["Label"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["LayersMode"]["Label"]["__in"]["p0"].setInput( __children["ContactSheet"]["LayersMode"]["Collect"]["user"]["layerNames"] )
__children["ContactSheet"]["LayersMode"]["Label"]["__in"]["p1"].setInput( __children["ContactSheet"]["LayersMode"]["Collect"]["user"]["switchIndexes"] )
__children["ContactSheet"]["LayersMode"]["Label"]["__uiPosition"].setValue( imath.V2f( 348.859161, -51.1991844 ) )
__children["ContactSheet"]["LayersMode"]["ImageMetadata"]["in"].setInput( __children["ContactSheet"]["LayersMode"]["Shuffle"]["out"] )
__children["ContactSheet"]["LayersMode"]["ImageMetadata"]["metadata"]["label"]["name"].setValue( 'label' )
__children["ContactSheet"]["LayersMode"]["ImageMetadata"]["metadata"]["input"]["name"].setValue( 'input' )
__children["ContactSheet"]["LayersMode"]["ImageMetadata"]["metadata"]["label"]["value"].setInput( __children["ContactSheet"]["LayersMode"]["Label"]["__out"]["p1"] )
__children["ContactSheet"]["LayersMode"]["ImageMetadata"]["metadata"]["input"]["value"].setInput( __children["ContactSheet"]["LayersMode"]["Label"]["__out"]["p0"] )
__children["ContactSheet"]["LayersMode"]["ImageMetadata"]["__uiPosition"].setValue( imath.V2f( 321.692902, -63.0362778 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["user"], 'layout:section', 'User' )
__children["ContactSheet"]["SequenceMode"]["TimeWarp"]["user"]["frameList"].setInput( __children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["TimeWarp"]["user"]["frameList"], 'nodule:type', '' )
__children["ContactSheet"]["SequenceMode"]["TimeWarp"]["speed"].setValue( 0.0 )
__children["ContactSheet"]["SequenceMode"]["TimeWarp"]["offset"].setInput( __children["ContactSheet"]["SequenceMode"]["InputContext"]["__out"]["p2"] )
__children["ContactSheet"]["SequenceMode"]["TimeWarp"]["in"].setInput( __children["ContactSheet"]["SequenceMode"]["ImageMetadata"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["TimeWarp"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["TimeWarp"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["SequenceMode"]["TimeWarp"]["__uiPosition"].setValue( imath.V2f( 274.304169, -37.1973724 ) )
__children["ContactSheet"]["SequenceMode"]["out"].setInput( __children["ContactSheet"]["SequenceMode"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["out"], 'layout:index', 0 )
__children["ContactSheet"]["SequenceMode"]["SwitchIndexContextVariable"]["variables"]["switchIndex"]["name"].setValue( '__contactSheet:switchIndex' )
__children["ContactSheet"]["SequenceMode"]["SwitchIndexContextVariable"]["variables"]["switchIndex"]["value"].setInput( __children["ContactSheet"]["SequenceMode"]["InputContext"]["__out"]["p1"] )
__children["ContactSheet"]["SequenceMode"]["SwitchIndexContextVariable"]["in"].setInput( __children["ContactSheet"]["SequenceMode"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["SwitchIndexContextVariable"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["SwitchIndexContextVariable"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["SequenceMode"]["SwitchIndexContextVariable"]["__uiPosition"].setValue( imath.V2f( 274.304169, -17.6222553 ) )
__children["ContactSheet"]["SequenceMode"]["in"].setInput( __children["ContactSheet"]["Switch"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["in"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["InputContext"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["SequenceMode"]["InputContext"]["__in"]["p0"].setInput( __children["ContactSheet"]["SequenceMode"]["TimeWarp"]["user"]["frameList"] )
__children["ContactSheet"]["SequenceMode"]["InputContext"]["__in"]["p1"].setInput( __children["ContactSheet"]["SequenceMode"]["connectedInputs"] )
__children["ContactSheet"]["SequenceMode"]["InputContext"]["__uiPosition"].setValue( imath.V2f( 293.924591, -33.6013489 ) )
__children["ContactSheet"]["SequenceMode"]["BoxOut"]["in"].setInput( __children["ContactSheet"]["SequenceMode"]["TimeWarp"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["BoxOut"]["__out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["SequenceMode"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 274.304169, -49.1294022 ) )
__children["ContactSheet"]["SequenceMode"]["BoxIn"]["__in"].setInput( __children["ContactSheet"]["SequenceMode"]["in"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["BoxIn"]["__in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["SequenceMode"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 274.304962, -9.29023075 ) )
__children["ContactSheet"]["SequenceMode"]["__uiPosition"].setValue( imath.V2f( 274.304169, -32.5226707 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["__uiPosition"], 'layout:section', 'Settings' )
__children["ContactSheet"]["SequenceMode"]["frames"].setInput( __children["ContactSheet"]["frames"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["frames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["frames"], 'layout:section', 'Settings.In' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["frames"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["FrameListParser"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__in"]["p0"].setInput( __children["ContactSheet"]["SequenceMode"]["connectedInputs"] )
__children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__in"]["p1"].setInput( __children["ContactSheet"]["SequenceMode"]["frames"] )
__children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__uiPosition"].setValue( imath.V2f( 258.037506, -37.0634193 ) )
__children["ContactSheet"]["SequenceMode"]["connectedInputs"].setInput( __children["ContactSheet"]["Switch"]["connectedInputs"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["connectedInputs"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["connectedInputs"], 'layout:section', 'Settings.In' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["connectedInputs"], 'layout:index', 3 )
__children["ContactSheet"]["SequenceMode"]["numTiles"].setInput( __children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__out"]["p1"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["numTiles"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["numTiles"], 'layout:section', 'Settings.Out' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["SequenceMode"]["numTiles"], 'layout:index', 4 )
__children["ContactSheet"]["SequenceMode"]["ImageMetadata"]["in"].setInput( __children["ContactSheet"]["SequenceMode"]["SwitchIndexContextVariable"]["out"] )
__children["ContactSheet"]["SequenceMode"]["ImageMetadata"]["metadata"]["member1"]["name"].setValue( 'label' )
__children["ContactSheet"]["SequenceMode"]["ImageMetadata"]["metadata"]["member1"]["value"].setValue( '#' )
__children["ContactSheet"]["SequenceMode"]["ImageMetadata"]["metadata"]["input"]["name"].setValue( 'input' )
__children["ContactSheet"]["SequenceMode"]["ImageMetadata"]["metadata"]["input"]["value"].setInput( __children["ContactSheet"]["SequenceMode"]["InputContext"]["__out"]["p0"] )
__children["ContactSheet"]["SequenceMode"]["ImageMetadata"]["__uiPosition"].setValue( imath.V2f( 274.304169, -27.4042969 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["user"], 'layout:section', 'User' )
__children["ContactSheet"]["StandardMode"]["SwitchIndexContextVariable"]["variables"]["switchIndex"]["name"].setValue( '__contactSheet:switchIndex' )
__children["ContactSheet"]["StandardMode"]["SwitchIndexContextVariable"]["variables"]["switchIndex"]["value"].setInput( __children["ContactSheet"]["StandardMode"]["SwitchIndex"]["__out"]["p1"] )
__children["ContactSheet"]["StandardMode"]["SwitchIndexContextVariable"]["in"].setInput( __children["ContactSheet"]["StandardMode"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["SwitchIndexContextVariable"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["SwitchIndexContextVariable"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["StandardMode"]["SwitchIndexContextVariable"]["__uiPosition"].setValue( imath.V2f( 236.735199, -32.7179375 ) )
__children["ContactSheet"]["StandardMode"]["in"].setInput( __children["ContactSheet"]["Switch"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["in"], 'layout:index', 0 )
__children["ContactSheet"]["StandardMode"]["out"].setInput( __children["ContactSheet"]["StandardMode"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["SwitchIndex"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["StandardMode"]["SwitchIndex"]["__in"]["p0"].setInput( __children["ContactSheet"]["StandardMode"]["connectedInputs"] )
__children["ContactSheet"]["StandardMode"]["SwitchIndex"]["__uiPosition"].setValue( imath.V2f( 217.167709, -32.6284828 ) )
__children["ContactSheet"]["StandardMode"]["__in_p0"].setInput( __children["ContactSheet"]["Switch"]["connectedInputs"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["__in_p0"], 'layout:section', 'Settings' )
__children["ContactSheet"]["StandardMode"]["BoxIn"]["__in"].setInput( __children["ContactSheet"]["StandardMode"]["in"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["BoxIn"]["__in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["StandardMode"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 236.735992, -24.3859062 ) )
__children["ContactSheet"]["StandardMode"]["BoxOut"]["in"].setInput( __children["ContactSheet"]["StandardMode"]["ImageMetadata"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["BoxOut"]["__out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["StandardMode"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 238.235199, -49.4889526 ) )
__children["ContactSheet"]["StandardMode"]["__uiPosition"].setValue( imath.V2f( 257.959473, -32.6131401 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["__uiPosition"], 'layout:section', 'Settings' )
__children["ContactSheet"]["StandardMode"]["connectedInputs"].setInput( __children["ContactSheet"]["Switch"]["connectedInputs"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["connectedInputs"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["connectedInputs"], 'layout:section', 'Settings.In' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["connectedInputs"], 'layout:index', 2 )
__children["ContactSheet"]["StandardMode"]["numTiles"].setInput( __children["ContactSheet"]["StandardMode"]["NumTiles"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["numTiles"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["numTiles"], 'layout:section', 'Settings.Out' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["numTiles"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["StandardMode"]["NumTiles"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["StandardMode"]["NumTiles"]["__in"]["p0"].setInput( __children["ContactSheet"]["StandardMode"]["connectedInputs"] )
__children["ContactSheet"]["StandardMode"]["NumTiles"]["__uiPosition"].setValue( imath.V2f( 255.047653, -32.7888145 ) )
__children["ContactSheet"]["StandardMode"]["ImageMetadata"]["in"].setInput( __children["ContactSheet"]["StandardMode"]["SwitchIndexContextVariable"]["out"] )
__children["ContactSheet"]["StandardMode"]["ImageMetadata"]["metadata"]["label"]["name"].setValue( 'label' )
__children["ContactSheet"]["StandardMode"]["ImageMetadata"]["metadata"]["label"]["value"].setValue( '${__contactSheet:tile}' )
__children["ContactSheet"]["StandardMode"]["ImageMetadata"]["metadata"]["input"]["name"].setValue( 'input' )
__children["ContactSheet"]["StandardMode"]["ImageMetadata"]["metadata"]["input"]["value"].setInput( __children["ContactSheet"]["StandardMode"]["SwitchIndex"]["__out"]["p0"] )
__children["ContactSheet"]["StandardMode"]["ImageMetadata"]["__uiPosition"].setValue( imath.V2f( 236.735199, -40.882 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["NumTiles"]["user"]["divisions"], 'nodule:type', '' )
__children["ContactSheet"]["NumTiles"]["index"].setInput( __children["ContactSheet"]["mode"] )
__children["ContactSheet"]["NumTiles"]["in"][0].setInput( __children["ContactSheet"]["StandardMode"]["numTiles"] )
__children["ContactSheet"]["NumTiles"]["in"][1].setInput( __children["ContactSheet"]["SequenceMode"]["numTiles"] )
__children["ContactSheet"]["NumTiles"]["in"][2].setInput( __children["ContactSheet"]["LayersMode"]["numTiles"] )
__children["ContactSheet"]["NumTiles"]["in"][3].setInput( __children["ContactSheet"]["ViewsMode"]["numTiles"] )
__children["ContactSheet"]["NumTiles"]["in"][4].setInput( __children["ContactSheet"]["CollectMode"]["numTiles"] )
__children["ContactSheet"]["NumTiles"]["__uiPosition"].setValue( imath.V2f( 245.690201, -55.726963 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["user"], 'layout:section', 'User' )
__children["ContactSheet"]["ViewsMode"]["Collect"]["user"]["switchIndexes"].setInput( __children["ContactSheet"]["ViewsMode"]["Expression6"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["Collect"]["user"]["switchIndexes"], 'nodule:type', '' )
__children["ContactSheet"]["ViewsMode"]["Collect"]["user"]["viewNames"].setInput( __children["ContactSheet"]["ViewsMode"]["Expression6"]["__out"]["p1"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["Collect"]["user"]["viewNames"], 'nodule:type', '' )
__children["ContactSheet"]["ViewsMode"]["Collect"]["contextValues"].setInput( __children["ContactSheet"]["ViewsMode"]["Expression"]["__out"]["p0"] )
__children["ContactSheet"]["ViewsMode"]["Collect"]["in"]["viewNames"].setInput( __children["ContactSheet"]["ViewsMode"]["Expression13"]["__out"]["p0"] )
__children["ContactSheet"]["ViewsMode"]["Collect"]["__uiPosition"].setValue( imath.V2f( 349.091095, -36.4899826 ) )
__children["ContactSheet"]["ViewsMode"]["Expression"]["__in"]["p0"].setInput( __children["ContactSheet"]["ViewsMode"]["connectedInputs"] )
__children["ContactSheet"]["ViewsMode"]["Expression"]["__uiPosition"].setValue( imath.V2f( 338.742767, -36.3624229 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["__in_p0"], 'layout:section', 'Settings' )
__children["ContactSheet"]["ViewsMode"]["Expression6"]["__in"]["p0"].setInput( __children["ContactSheet"]["ViewsMode"]["Collect"]["out"]["viewNames"] )
__children["ContactSheet"]["ViewsMode"]["Expression6"]["__in"]["p1"].setInput( __children["ContactSheet"]["ViewsMode"]["connectedInputs"] )
__children["ContactSheet"]["ViewsMode"]["Expression6"]["__uiPosition"].setValue( imath.V2f( 363.453522, -36.8137474 ) )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForCollect"]["variables"]["switchIndex"]["name"].setValue( '__contactSheet:switchIndex' )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForCollect"]["variables"]["switchIndex"]["value"].setInput( __children["ContactSheet"]["ViewsMode"]["Expression7"]["__out"]["p0"] )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForCollect"]["in"].setInput( __children["ContactSheet"]["ViewsMode"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForCollect"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForCollect"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForCollect"]["__uiPosition"].setValue( imath.V2f( 349.991089, -21.1124687 ) )
__children["ContactSheet"]["ViewsMode"]["in"].setInput( __children["ContactSheet"]["Switch"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["in"], 'layout:index', 0 )
__children["ContactSheet"]["ViewsMode"]["Expression7"]["__uiPosition"].setValue( imath.V2f( 335.231964, -21.1129913 ) )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForTile"]["variables"]["switchIndex"]["name"].setValue( '__contactSheet:switchIndex' )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForTile"]["variables"]["switchIndex"]["value"].setInput( __children["ContactSheet"]["ViewsMode"]["Expression8"]["__out"]["p0"] )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForTile"]["in"].setInput( __children["ContactSheet"]["ViewsMode"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForTile"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForTile"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForTile"]["__uiPosition"].setValue( imath.V2f( 321.692902, -21.1124687 ) )
__children["ContactSheet"]["ViewsMode"]["Expression8"]["__in"]["p0"].setInput( __children["ContactSheet"]["ViewsMode"]["Collect"]["user"]["switchIndexes"] )
__children["ContactSheet"]["ViewsMode"]["Expression8"]["__uiPosition"].setValue( imath.V2f( 333.772522, -28.1239777 ) )
__children["ContactSheet"]["ViewsMode"]["Expression4"]["__in"]["p0"].setInput( __children["ContactSheet"]["ViewsMode"]["Collect"]["user"]["viewNames"] )
__children["ContactSheet"]["ViewsMode"]["Expression4"]["__uiPosition"].setValue( imath.V2f( 333.779114, -40.9355507 ) )
__children["ContactSheet"]["ViewsMode"]["out"].setInput( __children["ContactSheet"]["ViewsMode"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["out"], 'layout:index', 1 )
__children["ContactSheet"]["ViewsMode"]["BoxIn"]["__in"].setInput( __children["ContactSheet"]["ViewsMode"]["in"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["BoxIn"]["__in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["ViewsMode"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 335.841919, -12.7804375 ) )
__children["ContactSheet"]["ViewsMode"]["BoxOut"]["in"].setInput( __children["ContactSheet"]["ViewsMode"]["ImageMetadata"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["ContactSheet"]["ViewsMode"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 323.193695, -60.7921066 ) )
__children["ContactSheet"]["ViewsMode"]["__uiPosition"].setValue( imath.V2f( 305.397003, -32.5377274 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["__uiPosition"], 'layout:section', 'Settings' )
__children["ContactSheet"]["ViewsMode"]["connectedInputs"].setInput( __children["ContactSheet"]["Switch"]["connectedInputs"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["connectedInputs"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["connectedInputs"], 'layout:section', 'Settings.In' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["connectedInputs"], 'layout:index', 2 )
__children["ContactSheet"]["ViewsMode"]["numTiles"].setInput( __children["ContactSheet"]["ViewsMode"]["Expression6"]["__out"]["p2"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["numTiles"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["numTiles"], 'layout:section', 'Settings.Out' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["numTiles"], 'layout:index', 3 )
__children["ContactSheet"]["ViewsMode"]["Expression13"]["__in"]["p0"].setInput( __children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForCollect"]["out"]["viewNames"] )
__children["ContactSheet"]["ViewsMode"]["Expression13"]["__uiPosition"].setValue( imath.V2f( 349.990204, -29.407959 ) )
__children["ContactSheet"]["ViewsMode"]["SelectView"]["in"].setInput( __children["ContactSheet"]["ViewsMode"]["SwitchIndexContextVariableForTile"]["out"] )
__children["ContactSheet"]["ViewsMode"]["SelectView"]["view"].setInput( __children["ContactSheet"]["ViewsMode"]["Expression4"]["__out"]["p0"] )
__children["ContactSheet"]["ViewsMode"]["SelectView"]["__uiPosition"].setValue( imath.V2f( 321.693695, -41.4223633 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ViewsMode"]["Label"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["ViewsMode"]["Label"]["__in"]["p0"].setInput( __children["ContactSheet"]["ViewsMode"]["Collect"]["user"]["switchIndexes"] )
__children["ContactSheet"]["ViewsMode"]["Label"]["__in"]["p1"].setInput( __children["ContactSheet"]["ViewsMode"]["Collect"]["user"]["viewNames"] )
__children["ContactSheet"]["ViewsMode"]["Label"]["__uiPosition"].setValue( imath.V2f( 349.287476, -47.9175072 ) )
__children["ContactSheet"]["ViewsMode"]["ImageMetadata"]["in"].setInput( __children["ContactSheet"]["ViewsMode"]["SelectView"]["out"] )
__children["ContactSheet"]["ViewsMode"]["ImageMetadata"]["metadata"]["label"]["name"].setValue( 'label' )
__children["ContactSheet"]["ViewsMode"]["ImageMetadata"]["metadata"]["input"]["name"].setValue( 'input' )
__children["ContactSheet"]["ViewsMode"]["ImageMetadata"]["metadata"]["label"]["value"].setInput( __children["ContactSheet"]["ViewsMode"]["Label"]["__out"]["p1"] )
__children["ContactSheet"]["ViewsMode"]["ImageMetadata"]["metadata"]["input"]["value"].setInput( __children["ContactSheet"]["ViewsMode"]["Label"]["__out"]["p0"] )
__children["ContactSheet"]["ViewsMode"]["ImageMetadata"]["__uiPosition"].setValue( imath.V2f( 321.693695, -52.4600754 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisionsMode"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisionsMode"], 'layout:section', 'Settings.Layout' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisionsMode"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisionsMode"], 'preset:Automatic', 0 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisionsMode"], 'preset:Custom', 1 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisionsMode"], 'layout:index', 8 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisionsMode"], 'description', 'The method used to define the number of grid tiles in the contact sheet :\n\n- Automatic : Defines a grid with enough tiles to show every source image, while filling as much of the output format as possible. Assumes that all source images have the same aspect ratio as the first one.\n- Custom : Defines a fixed grid via the `divisions` plug. If there are more sources images than tiles, they will be omitted.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Tiles"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["Tiles"]["__in"]["p0"].setInput( __children["ContactSheet"]["Divisions"]["out"] )
__children["ContactSheet"]["Tiles"]["__in"]["p1"].setInput( __children["ContactSheet"]["FirstTileFormatQuery"]["format"] )
__children["ContactSheet"]["Tiles"]["__in"]["p2"].setInput( __children["ContactSheet"]["Layout"]["user"]["contentArea"] )
__children["ContactSheet"]["Tiles"]["__in"]["p3"].setInput( __children["ContactSheet"]["Layout"]["user"]["spacing"] )
__children["ContactSheet"]["Tiles"]["__in"]["p4"].setInput( __children["ContactSheet"]["NumTiles"]["out"] )
__children["ContactSheet"]["Tiles"]["__in"]["p5"].setInput( __children["ContactSheet"]["horizontalAlignment"] )
__children["ContactSheet"]["Tiles"]["__in"]["p6"].setInput( __children["ContactSheet"]["verticalAlignment"] )
__children["ContactSheet"]["Tiles"]["__uiPosition"].setValue( imath.V2f( 242.834869, -112.953148 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["user"], 'layout:section', 'User' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["__in_p0"], 'layout:section', 'Settings' )
__children["ContactSheet"]["CollectMode"]["in"].setInput( __children["ContactSheet"]["Switch"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["in"], 'layout:index', 0 )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["variables"]["switchIndex"]["name"].setValue( '__contactSheet:switchIndex' )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["variables"]["switchIndex"]["value"].setInput( __children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__out"]["p0"] )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["variables"]["tileName"]["name"].setInput( __children["ContactSheet"]["CollectMode"]["tileNameVariable"] )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["variables"]["tileName"]["value"].setInput( __children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__out"]["p2"] )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["variables"]["tileIndex"]["name"].setInput( __children["ContactSheet"]["CollectMode"]["tileIndexVariable"] )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["variables"]["tileIndex"]["value"].setInput( __children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__out"]["p1"] )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["in"].setInput( __children["ContactSheet"]["CollectMode"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["ContextVariables"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["ContextVariables"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["CollectMode"]["ContextVariables"]["__uiPosition"].setValue( imath.V2f( 321.692902, -21.1124687 ) )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__in"]["p0"].setInput( __children["ContactSheet"]["CollectMode"]["connectedInputs"] )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__in"]["p1"].setInput( __children["ContactSheet"]["CollectMode"]["tileNames"] )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__uiPosition"].setValue( imath.V2f( 311.925964, -21.0194054 ) )
__children["ContactSheet"]["CollectMode"]["out"].setInput( __children["ContactSheet"]["CollectMode"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["out"], 'layout:index', 1 )
__children["ContactSheet"]["CollectMode"]["BoxIn"]["__in"].setInput( __children["ContactSheet"]["CollectMode"]["in"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["BoxIn"]["__in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["CollectMode"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 321.692902, -12.7804375 ) )
__children["ContactSheet"]["CollectMode"]["BoxOut"]["in"].setInput( __children["ContactSheet"]["CollectMode"]["ImageMetadata"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["ContactSheet"]["CollectMode"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 323.192902, -37.6085625 ) )
__children["ContactSheet"]["CollectMode"]["__uiPosition"].setValue( imath.V2f( 320.698853, -32.4311371 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["__uiPosition"], 'layout:section', 'Settings' )
__children["ContactSheet"]["CollectMode"]["connectedInputs"].setInput( __children["ContactSheet"]["Switch"]["connectedInputs"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["connectedInputs"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["connectedInputs"], 'layout:section', 'Settings.In' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["connectedInputs"], 'layout:index', 5 )
__children["ContactSheet"]["CollectMode"]["numTiles"].setInput( __children["ContactSheet"]["CollectMode"]["NumTilesExpression"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["numTiles"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["numTiles"], 'layout:section', 'Settings.Out' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["numTiles"], 'layout:index', 6 )
__children["ContactSheet"]["CollectMode"]["tileNameVariable"].setInput( __children["ContactSheet"]["tileNameVariable"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["tileNameVariable"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["tileNameVariable"], 'layout:section', 'Settings.In' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["tileNameVariable"], 'layout:index', 3 )
__children["ContactSheet"]["CollectMode"]["tileNames"].setInput( __children["ContactSheet"]["tileNames"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["tileNames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["tileNames"], 'layout:section', 'Settings.In' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["tileNames"], 'layout:index', 2 )
__children["ContactSheet"]["CollectMode"]["tileIndexVariable"].setInput( __children["ContactSheet"]["tileIndexVariable"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["tileIndexVariable"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["tileIndexVariable"], 'layout:section', 'Settings.In' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["tileIndexVariable"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["NumTilesExpression"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["CollectMode"]["NumTilesExpression"]["__in"]["p0"].setInput( __children["ContactSheet"]["CollectMode"]["connectedInputs"] )
__children["ContactSheet"]["CollectMode"]["NumTilesExpression"]["__in"]["p1"].setInput( __children["ContactSheet"]["CollectMode"]["tileNames"] )
__children["ContactSheet"]["CollectMode"]["NumTilesExpression"]["__uiPosition"].setValue( imath.V2f( 307.060425, -32.3816872 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["CollectMode"]["Label"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["CollectMode"]["Label"]["__in"]["p0"].setInput( __children["ContactSheet"]["CollectMode"]["connectedInputs"] )
__children["ContactSheet"]["CollectMode"]["Label"]["__in"]["p1"].setInput( __children["ContactSheet"]["CollectMode"]["tileNames"] )
__children["ContactSheet"]["CollectMode"]["Label"]["__uiPosition"].setValue( imath.V2f( 338.25061, -28.460022 ) )
__children["ContactSheet"]["CollectMode"]["ImageMetadata"]["in"].setInput( __children["ContactSheet"]["CollectMode"]["ContextVariables"]["out"] )
__children["ContactSheet"]["CollectMode"]["ImageMetadata"]["metadata"]["label"]["name"].setValue( 'label' )
__children["ContactSheet"]["CollectMode"]["ImageMetadata"]["metadata"]["input"]["name"].setValue( 'input' )
__children["ContactSheet"]["CollectMode"]["ImageMetadata"]["metadata"]["label"]["value"].setInput( __children["ContactSheet"]["CollectMode"]["Label"]["__out"]["p1"] )
__children["ContactSheet"]["CollectMode"]["ImageMetadata"]["metadata"]["input"]["value"].setInput( __children["ContactSheet"]["CollectMode"]["Label"]["__out"]["p0"] )
__children["ContactSheet"]["CollectMode"]["ImageMetadata"]["__uiPosition"].setValue( imath.V2f( 321.692902, -29.2765312 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileNames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileNames"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileNames"], 'layout:index', 5 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileNames"], 'layout:visibilityActivator', 'modeIsCollect' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileNames"], 'description', 'The values to use for the `tileNameVariable` when in `Collect` mode. Each value defines a tile in the contact sheet. Use the tile variables in upstream nodes to vary the source images.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileNameVariable"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileNameVariable"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileNameVariable"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileNameVariable"], 'layout:visibilityActivator', 'modeIsCollect' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileNameVariable"], 'description', 'Name of the context variable that takes values from `tileNames` in Collect mode. May be used upstream to vary the source images per tile.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileIndexVariable"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileIndexVariable"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileIndexVariable"], 'layout:index', 7 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileIndexVariable"], 'layout:visibilityActivator', 'modeIsCollect' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileIndexVariable"], 'divider', False )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["tileIndexVariable"], 'description', 'Name of the context variable that contains the index of the contact sheet tile when in Collect mode. May be used upstream to define the vary the content of the source images.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisions"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisions"], 'layout:section', 'Settings.Layout' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisions"], 'layout:index', 9 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisions"], 'layout:visibilityActivator', 'divisionsModeIsCustom' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["divisions"], 'description', 'The number of divisions in the grid when in `Custom` mode.' )
__children["ContactSheet"]["FirstTileFormatQuery"]["image"].setInput( __children["ContactSheet"]["FirstTile"]["out"] )
__children["ContactSheet"]["FirstTileFormatQuery"]["__uiPosition"].setValue( imath.V2f( 260.635193, -87.718811 ) )
__children["ContactSheet"]["FirstTile"]["variables"]["member1"]["name"].setValue( '__contactSheet:tile' )
__children["ContactSheet"]["FirstTile"]["in"].setInput( __children["ContactSheet"]["ModeSwitch"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["FirstTile"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["FirstTile"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["FirstTile"]["__uiPosition"].setValue( imath.V2f( 260.635193, -82.0547485 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["verticalAlignment"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["verticalAlignment"], 'layout:section', 'Settings.Layout' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["verticalAlignment"], 'layout:index', 16 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["verticalAlignment"], 'description', 'Determines how tiles are aligned vertically when they do not consume all the space available in the layout :\n\n- Top : The empty space is placed at the bottom of the layout, so that the tiles are aligned to the top, and `spacing.y` is maintained.\n- Bottom : The empty space is placed at the top of the layout, so that the tiles are aligned to the bottom, and `spacing.y` is maintained.\n- Center : The empty space is distributed evenly between the top and bottom of the layout, so that the tiles are aligned to the center, and `spacing.y` is maintained.\n- Justified : The extra space is distributed evenly into the gaps between  tiles, in addiition to `spacing.y`. This aligns the top tile to the top of the layout and the bottom tile to the bottom of the layout.\n\n> Note : When there is no empty space in the layout, the choice of alignment has no effect.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["verticalAlignment"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["verticalAlignment"], 'preset:Top', 0 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["verticalAlignment"], 'preset:Bottom', 1 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["verticalAlignment"], 'preset:Center', 2 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["verticalAlignment"], 'preset:Justified', 3 )
__children["ContactSheet"]["Divisions"]["index"].setInput( __children["ContactSheet"]["divisionsMode"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Divisions"]["in"], 'noduleLayout:section', 'top' )
__children["ContactSheet"]["Divisions"]["in"][0].setInput( __children["ContactSheet"]["AutomaticDivisions"]["__out"]["p0"] )
__children["ContactSheet"]["Divisions"]["in"][1].setInput( __children["ContactSheet"]["divisions"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Divisions"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["Divisions"]["__uiPosition"].setValue( imath.V2f( 229.966049, -101.729195 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["AutomaticDivisions"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["AutomaticDivisions"]["__in"]["p0"].setInput( __children["ContactSheet"]["FirstTileFormatQuery"]["format"] )
__children["ContactSheet"]["AutomaticDivisions"]["__in"]["p1"].setInput( __children["ContactSheet"]["Layout"]["user"]["contentArea"] )
__children["ContactSheet"]["AutomaticDivisions"]["__in"]["p2"].setInput( __children["ContactSheet"]["Layout"]["user"]["spacing"] )
__children["ContactSheet"]["AutomaticDivisions"]["__in"]["p3"].setInput( __children["ContactSheet"]["NumTiles"]["out"] )
__children["ContactSheet"]["AutomaticDivisions"]["__in"]["p4"].setInput( __children["ContactSheet"]["format"] )
__children["ContactSheet"]["AutomaticDivisions"]["__uiPosition"].setValue( imath.V2f( 227.103455, -92.1814957 ) )
__children["ContactSheet"]["LabelContactSheet"]["in"].setInput( __children["ContactSheet"]["LabelText"]["out"] )
__children["ContactSheet"]["LabelContactSheet"]["format"].setInput( __children["ContactSheet"]["format"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["LabelContactSheet"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["ContactSheet"]["LabelContactSheet"]["tiles"].setInput( __children["ContactSheet"]["Expression1"]["__out"]["p0"] )
__children["ContactSheet"]["LabelContactSheet"]["tileVariable"].setValue( '__contactSheet:tile' )
__children["ContactSheet"]["LabelContactSheet"]["filter"].setValue( 'blackman-harris' )
__children["ContactSheet"]["LabelContactSheet"]["__resampledIn"].setInput( __children["ContactSheet"]["LabelContactSheet"]["__resample"]["out"] )
__children["ContactSheet"]["LabelContactSheet"]["__uiPosition"].setValue( imath.V2f( 278.799011, -169.98024 ) )
__children["ContactSheet"]["LabelText"]["in"].setInput( __children["ContactSheet"]["LabelFormat"]["out"] )
__children["ContactSheet"]["LabelText"]["color"].setInput( __children["ContactSheet"]["labelColor"] )
__children["ContactSheet"]["LabelText"]["shadow"].setInput( __children["ContactSheet"]["labelShadow"] )
__children["ContactSheet"]["LabelText"]["shadowColor"].setInput( __children["ContactSheet"]["labelShadowColor"] )
__children["ContactSheet"]["LabelText"]["shadowOffset"].setInput( __children["ContactSheet"]["Expression1"]["__out"]["p4"] )
__children["ContactSheet"]["LabelText"]["shadowBlur"].setInput( __children["ContactSheet"]["Expression1"]["__out"]["p3"] )
__children["ContactSheet"]["LabelText"]["text"].setInput( __children["ContactSheet"]["Expression"]["__out"]["p0"] )
__children["ContactSheet"]["LabelText"]["size"]["x"].setInput( __children["ContactSheet"]["Expression1"]["__out"]["p5"] )
__children["ContactSheet"]["LabelText"]["size"]["y"].setInput( __children["ContactSheet"]["LabelText"]["size"]["x"] )
__children["ContactSheet"]["LabelText"]["area"].setInput( __children["ContactSheet"]["Expression1"]["__out"]["p2"] )
__children["ContactSheet"]["LabelText"]["horizontalAlignment"].setInput( __children["ContactSheet"]["labelHorizontalAlignment"] )
__children["ContactSheet"]["LabelText"]["verticalAlignment"].setInput( __children["ContactSheet"]["Expression1"]["__out"]["p6"] )
__children["ContactSheet"]["LabelText"]["__uiPosition"].setValue( imath.V2f( 278.799011, -153.948761 ) )
__children["ContactSheet"]["LabelMerge"]["enabled"].setInput( __children["ContactSheet"]["labelsEnabled"] )
__children["ContactSheet"]["LabelMerge"]["in"][0].setInput( __children["ContactSheet"]["Dot1"]["out"] )
__children["ContactSheet"]["LabelMerge"]["in"][1].setInput( __children["ContactSheet"]["LabelContactSheet"]["out"] )
__children["ContactSheet"]["LabelMerge"]["operation"].setValue( 8 )
__children["ContactSheet"]["LabelMerge"]["__uiPosition"].setValue( imath.V2f( 278.799011, -192.326218 ) )
__children["ContactSheet"]["Expression"]["__in"]["p0"].setInput( __children["ContactSheet"]["ModeSwitch"]["out"]["metadata"] )
__children["ContactSheet"]["Expression"]["__in"]["p1"].setInput( __children["ContactSheet"]["labelFormat"] )
__children["ContactSheet"]["Expression"]["__uiPosition"].setValue( imath.V2f( 290.31842, -146.685944 ) )
__children["ContactSheet"]["outDivisions"].setInput( __children["ContactSheet"]["Divisions"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["outDivisions"], 'layout:section', 'Settings.Layout' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["outDivisions"], 'layout:index', 10 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["outDivisions"], 'label', 'Divisions' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["outDivisions"], 'layout:visibilityActivator', 'divisionsModeIsAutomatic' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["outDivisions"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["outDivisions"], 'description', 'The number of divisions calculated by the `Automatic` mode.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["spacing"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["spacing"], 'layout:section', 'Settings.Layout' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["spacing"], 'layout:index', 11 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["spacing"], 'description', 'The size of the gaps between tiles in the grid, measured in pixels.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Layout"]["user"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Layout"]["user"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
__children["ContactSheet"]["Layout"]["user"]["contentArea"].setInput( __children["ContactSheet"]["ContentAreaExpression"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Layout"]["user"]["contentArea"], 'layout:section', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Layout"]["user"]["contentArea"], 'layout:index', 1 )
__children["ContactSheet"]["Layout"]["user"]["spacing"].setInput( __children["ContactSheet"]["ContentAreaExpression"]["__out"]["p1"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Layout"]["user"]["spacing"], 'nodule:type', '' )
__children["ContactSheet"]["Layout"]["__uiPosition"].setValue( imath.V2f( 215.881897, -85.3647385 ) )
__children["ContactSheet"]["ContentAreaExpression"]["__in"]["p0"].setInput( __children["ContactSheet"]["borderWidth"] )
__children["ContactSheet"]["ContentAreaExpression"]["__in"]["p1"].setInput( __children["ContactSheet"]["bordersEnabled"] )
__children["ContactSheet"]["ContentAreaExpression"]["__in"]["p2"].setInput( __children["ContactSheet"]["format"] )
__children["ContactSheet"]["ContentAreaExpression"]["__in"]["p3"].setInput( __children["ContactSheet"]["labelVerticalAlignment"] )
__children["ContactSheet"]["ContentAreaExpression"]["__in"]["p4"].setInput( __children["ContactSheet"]["labelsEnabled"] )
__children["ContactSheet"]["ContentAreaExpression"]["__in"]["p5"].setInput( __children["ContactSheet"]["marginBottom"] )
__children["ContactSheet"]["ContentAreaExpression"]["__in"]["p6"].setInput( __children["ContactSheet"]["marginLeft"] )
__children["ContactSheet"]["ContentAreaExpression"]["__in"]["p7"].setInput( __children["ContactSheet"]["marginRight"] )
__children["ContactSheet"]["ContentAreaExpression"]["__in"]["p8"].setInput( __children["ContactSheet"]["marginTop"] )
__children["ContactSheet"]["ContentAreaExpression"]["__in"]["p9"].setInput( __children["ContactSheet"]["spacing"] )
__children["ContactSheet"]["ContentAreaExpression"]["__uiPosition"].setValue( imath.V2f( 215.88269, -78.2834396 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Modes"], 'nodeGadget:color', imath.Color3f( 0.19780001, 0.224037305, 0.460000008 ) )
__children["ContactSheet"]["Modes"]["title"].setValue( '' )
__children["ContactSheet"]["Modes"]["__uiPosition"].setValue( imath.V2f( 281.476471, -44.08741 ) )
__children["ContactSheet"]["Modes"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -48.2862778, -19.4931717 ), imath.V2f( 54.2862778, 22.9062729 ) ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Backdrop1"], 'nodeGadget:color', imath.Color3f( 0.151435837, 0.280602306, 0.414999992 ) )
__children["ContactSheet"]["Backdrop1"]["title"].setValue( 'Layout' )
__children["ContactSheet"]["Backdrop1"]["__uiPosition"].setValue( imath.V2f( 236.933136, -95.7954025 ) )
__children["ContactSheet"]["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -29.7346954, -24.8550644 ), imath.V2f( 64.0223999, 28.2397728 ) ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["horizontalAlignment"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["horizontalAlignment"], 'layout:section', 'Settings.Layout' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["horizontalAlignment"], 'layout:index', 17 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["horizontalAlignment"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["horizontalAlignment"], 'preset:Left', 0 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["horizontalAlignment"], 'preset:Right', 1 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["horizontalAlignment"], 'preset:Center', 2 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["horizontalAlignment"], 'preset:Justified', 3 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["horizontalAlignment"], 'description', 'Determines how tiles are aligned horizontally when they do not consume all the space available in the layout :\n\n- Left : The empty space is placed at the right of the layout, so that the tiles are aligned to the left, and `spacing.x` is maintained.\n- Right : The empty space is placed at the left of the layout, so that the tiles are aligned to the right, and `spacing.x` is maintained.\n- Center : The empty space is distributed evenly between the left and right of the layout, so that the tiles are aligned to the center, and `spacing.x` is maintained.\n- Justified : The extra space is distributed evenly into the gaps between tiles, in addiition to `spacing.x`. This aligns the left tile to the left of the layout and the right tile to the right of the layout.\n\n> Note : When there is no empty space in the layout, the choice of alignment has no effect.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelsEnabled"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelsEnabled"], 'layout:section', 'Settings.Labels' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelsEnabled"], 'description', 'Enables labels for each tile.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelsEnabled"], 'label', 'Enabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelsEnabled"], 'layout:index', 18 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelColor"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelColor"], 'description', 'The colour of the label text.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelColor"], 'layout:section', 'Settings.Labels' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelColor"], 'layout:index', 23 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelColor"], 'label', 'Color' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelColor"], 'layout:activator', 'labelsAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadow"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadow"], 'description', 'Enables the rendering of a label drop shadow which can be coloured, offset and\nblurred.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadow"], 'layout:section', 'Settings.Labels' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadow"], 'layout:index', 24 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadow"], 'label', 'Shadow' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadow"], 'layout:activator', 'labelsAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowColor"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowColor"], 'description', 'The colour of the label shadow.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowColor"], 'layout:section', 'Settings.Labels' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowColor"], 'layout:index', 25 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowColor"], 'label', 'Shadow Color' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowColor"], 'layout:activator', 'labelShadowsAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowOffset"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowOffset"], 'description', 'The offset of the shadow, measured relative to the label size.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowOffset"], 'layout:section', 'Settings.Labels' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowOffset"], 'layout:index', 26 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowOffset"], 'label', 'Shadow Offset' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowOffset"], 'layout:activator', 'labelShadowsAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowBlur"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowBlur"], 'description', 'A blur applied to the shadow, measured relative to the label size.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowBlur"], 'layout:section', 'Settings.Labels' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowBlur"], 'layout:index', 27 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowBlur"], 'label', 'Shadow Blur' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelShadowBlur"], 'layout:activator', 'labelShadowsAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginTop"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginTop"], 'layout:section', 'Settings.Layout' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginTop"], 'layout:index', 12 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginTop"], 'description', 'The size of the space at the top of the layout, measured in pixels.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginBottom"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginBottom"], 'layout:section', 'Settings.Layout' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginBottom"], 'layout:index', 13 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginBottom"], 'description', 'The size of the space at the bottom of the layout, measured in pixels.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginLeft"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginLeft"], 'layout:section', 'Settings.Layout' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginLeft"], 'layout:index', 14 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginLeft"], 'description', 'The size of the space on the left of the layout, measured in pixels.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginRight"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginRight"], 'layout:section', 'Settings.Layout' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginRight"], 'layout:index', 15 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["marginRight"], 'description', 'The size of the space on the right of the layout, measured in pixels.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelHorizontalAlignment"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelHorizontalAlignment"], 'description', 'Aligns the label horizontally within the tile. ' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelHorizontalAlignment"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelHorizontalAlignment"], 'preset:Left', 0 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelHorizontalAlignment"], 'preset:Right', 1 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelHorizontalAlignment"], 'preset:Center', 2 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelHorizontalAlignment"], 'layout:section', 'Settings.Labels' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelHorizontalAlignment"], 'layout:index', 20 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelHorizontalAlignment"], 'label', 'Horizontal Alignment' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelHorizontalAlignment"], 'layout:activator', 'labelsAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'description', 'Aligns the label vertically within the tile, or places the label outside the tile in modes `Above` and `Below`. When placed outside the tile, `spacing.y` must provide enough space for the label.\n' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'layout:section', 'Settings.Labels' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'layout:index', 21 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'label', 'Verrtical Alignment' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'layout:activator', 'labelsAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'preset:Bottom', 0 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'preset:Top', 1 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'preset:Center', 2 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'preset:Below', 3 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelVerticalAlignment"], 'preset:Above', 4 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelScale"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelScale"], 'layout:section', 'Settings.Labels' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelScale"], 'label', 'Scale' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelScale"], 'layout:index', 22 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelScale"], 'layout:activator', 'labelsAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelScale"], 'description', 'An additional scaling applied to the label. The label is already automatically scaled to remain in proportion with either the tile size or the tile spacing (when aligned above or below).' )
__children["ContactSheet"]["Expression1"]["__in"]["p0"].setInput( __children["ContactSheet"]["ContactSheetCore"]["tiles"] )
__children["ContactSheet"]["Expression1"]["__in"]["p1"].setInput( __children["ContactSheet"]["borderWidth"] )
__children["ContactSheet"]["Expression1"]["__in"]["p2"].setInput( __children["ContactSheet"]["bordersEnabled"] )
__children["ContactSheet"]["Expression1"]["__in"]["p3"].setInput( __children["ContactSheet"]["labelScale"] )
__children["ContactSheet"]["Expression1"]["__in"]["p4"].setInput( __children["ContactSheet"]["labelShadowBlur"] )
__children["ContactSheet"]["Expression1"]["__in"]["p5"].setInput( __children["ContactSheet"]["labelShadowOffset"] )
__children["ContactSheet"]["Expression1"]["__in"]["p6"].setInput( __children["ContactSheet"]["labelVerticalAlignment"] )
__children["ContactSheet"]["Expression1"]["__in"]["p7"].setInput( __children["ContactSheet"]["spacing"]["y"] )
__children["ContactSheet"]["Expression1"]["__uiPosition"].setValue( imath.V2f( 263.825592, -154.332092 ) )
__children["ContactSheet"]["LabelFormat"]["format"].setInput( __children["ContactSheet"]["Expression1"]["__out"]["p1"] )
__children["ContactSheet"]["LabelFormat"]["color"].setValue( imath.Color4f( 0, 0, 0, 0 ) )
__children["ContactSheet"]["LabelFormat"]["__uiPosition"].setValue( imath.V2f( 278.799011, -139.703613 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Labels"], 'nodeGadget:color', imath.Color3f( 0.405000001, 0.190350011, 0.190350011 ) )
__children["ContactSheet"]["Labels"]["title"].setValue( 'Labels' )
__children["ContactSheet"]["Labels"]["__uiPosition"].setValue( imath.V2f( 269.111847, -152.258423 ) )
__children["ContactSheet"]["Labels"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -14.4884338, -25.8206177 ), imath.V2f( 26.6798706, 24.4857712 ) ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ModesDescription"], 'nodeGadget:color', imath.Color3f( 0.19780001, 0.224037305, 0.460000008 ) )
__children["ContactSheet"]["ModesDescription"]["title"].setValue( 'Modes' )
__children["ContactSheet"]["ModesDescription"]["description"].setValue( 'Each mode is implemented as a box responsible for the following :\n\n- Outputting `numTiles`, which is the number of tiles to generate.\n- Generating the appropriate image for the current tile, based on the `__contactSheet:tile` context variable.\n- Adding appropriate `label` and `input` metadata to each tile image, to be used when generating labels.' )
__children["ContactSheet"]["ModesDescription"]["__uiPosition"].setValue( imath.V2f( 189.326202, -44.3063431 ) )
__children["ContactSheet"]["ModesDescription"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -3.61514282, 0.461914062 ), imath.V2f( 40.744751, 22.9062729 ) ) )
__children["ContactSheet"]["Dot"]["in"].setInput( __children["ContactSheet"]["ContactSheetCore"]["out"] )
__children["ContactSheet"]["Dot"]["__uiPosition"].setValue( imath.V2f( 246.860611, -129.767151 ) )
__children["ContactSheet"]["Dot1"]["in"].setInput( __children["ContactSheet"]["Dot"]["out"] )
__children["ContactSheet"]["Dot1"]["__uiPosition"].setValue( imath.V2f( 246.860611, -173.549103 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelFormat"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelFormat"], 'layout:section', 'Settings.Labels' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelFormat"], 'layout:index', 19 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelFormat"], 'label', 'Format' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelFormat"], 'layout:activator', 'labelsAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["labelFormat"], 'description', 'Defines the content of the label, using the following substitutions :\n\n- `{label}` : A label identifiying the source image, depending on the mode used. For instance, in Sequence mode the label is the frame number, and in Layers mode the label is the layer name.\n- `{input}` : The index of the source input.\n- `{metadataName}` : The name of any image metadata.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["bordersEnabled"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["bordersEnabled"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["bordersEnabled"], 'layout:index', 28 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["bordersEnabled"], 'label', 'Enabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["bordersEnabled"], 'description', 'Enables a border for each image tile.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderWidth"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderWidth"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderWidth"], 'layout:index', 29 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderWidth"], 'label', 'Width' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderWidth"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderWidth"], 'description', 'The width of the border, measured in pixels.' )
__children["ContactSheet"]["BorderRectangle"]["in"].setInput( __children["ContactSheet"]["BorderFormat"]["out"] )
__children["ContactSheet"]["BorderRectangle"]["color"].setInput( __children["ContactSheet"]["BorderColor"]["out"] )
__children["ContactSheet"]["BorderRectangle"]["area"].setInput( __children["ContactSheet"]["Expression2"]["__out"]["p2"] )
__children["ContactSheet"]["BorderRectangle"]["lineWidth"].setInput( __children["ContactSheet"]["borderWidth"] )
__children["ContactSheet"]["BorderRectangle"]["__uiPosition"].setValue( imath.V2f( 317.072968, -158.909866 ) )
__children["ContactSheet"]["BorderContactSheet"]["in"].setInput( __children["ContactSheet"]["BorderRectangle"]["out"] )
__children["ContactSheet"]["BorderContactSheet"]["format"].setInput( __children["ContactSheet"]["format"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["BorderContactSheet"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["ContactSheet"]["BorderContactSheet"]["tiles"].setInput( __children["ContactSheet"]["Expression2"]["__out"]["p0"] )
__children["ContactSheet"]["BorderContactSheet"]["tileVariable"].setValue( '__contactSheet:tile' )
__children["ContactSheet"]["BorderContactSheet"]["filter"].setValue( 'blackman-harris' )
__children["ContactSheet"]["BorderContactSheet"]["__resampledIn"].setInput( __children["ContactSheet"]["BorderContactSheet"]["__resample"]["out"] )
__children["ContactSheet"]["BorderContactSheet"]["__uiPosition"].setValue( imath.V2f( 317.072968, -170.127411 ) )
__children["ContactSheet"]["Expression2"]["__in"]["p0"].setInput( __children["ContactSheet"]["ContactSheetCore"]["tiles"] )
__children["ContactSheet"]["Expression2"]["__in"]["p1"].setInput( __children["ContactSheet"]["borderWidth"] )
__children["ContactSheet"]["Expression2"]["__uiPosition"].setValue( imath.V2f( 302.274567, -152.834778 ) )
__children["ContactSheet"]["BorderFormat"]["format"].setInput( __children["ContactSheet"]["Expression2"]["__out"]["p1"] )
__children["ContactSheet"]["BorderFormat"]["color"].setValue( imath.Color4f( 0, 0, 0, 0 ) )
__children["ContactSheet"]["BorderFormat"]["__uiPosition"].setValue( imath.V2f( 317.072968, -139.603516 ) )
__children["ContactSheet"]["BorderMerge"]["enabled"].setInput( __children["ContactSheet"]["bordersEnabled"] )
__children["ContactSheet"]["BorderMerge"]["in"][0].setInput( __children["ContactSheet"]["LabelMerge"]["out"] )
__children["ContactSheet"]["BorderMerge"]["in"][1].setInput( __children["ContactSheet"]["BorderContactSheet"]["out"] )
__children["ContactSheet"]["BorderMerge"]["operation"].setValue( 8 )
__children["ContactSheet"]["BorderMerge"]["__uiPosition"].setValue( imath.V2f( 281.799011, -204.197845 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Borders"], 'nodeGadget:color', imath.Color3f( 0.574999988, 0.355781525, 0.215624988 ) )
__children["ContactSheet"]["Borders"]["title"].setValue( 'Borders' )
__children["ContactSheet"]["Borders"]["__uiPosition"].setValue( imath.V2f( 310.406128, -154.017273 ) )
__children["ContactSheet"]["Borders"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -12.2706451, -24.2339478 ), imath.V2f( 52.2255859, 26.1656189 ) ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMode"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMode"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMode"], 'layout:index', 30 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMode"], 'label', 'Color Mode' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMode"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMode"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMode"], 'preset:Constant', 0 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMode"], 'preset:Error Check', 1 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMode"], 'preset:Metadata', 2 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMode"], 'description', 'Determines how a color is chosen for each border :\n\n- `Constant` : Uses the same fixed colour for every tile.\n- `Error Check` : Uses an error colour to highlight images which fail certain quality checks.\n- `Metadata` : Uses image metadata to define the color.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColor"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColor"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColor"], 'label', 'Color' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColor"], 'description', 'The border color for `Constant` mode, and for tiles which pass all checks in `Error Check` mode.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColor"], 'layout:visibilityActivator', 'borderUsesColor' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColor"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColor"], 'layout:index', 31 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMetadata"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMetadata"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMetadata"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMetadata"], 'layout:visibilityActivator', 'borderColorModeIsMetadata' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMetadata"], 'layout:index', 33 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderColorMetadata"], 'description', 'The name of the metadata to provide the border color in `Metadata` mode. Supported metadata types :\n\n- Color4f\n- Color3f\n- Float' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderErrorColor"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderErrorColor"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderErrorColor"], 'description', 'The border color for tiles that fail any checks in `Error Check` mode.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderErrorColor"], 'label', 'Error Color' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderErrorColor"], 'layout:index', 32 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderErrorColor"], 'layout:visibilityActivator', 'borderColorModeIsErrorCheck' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderErrorColor"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckNaN"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckNaN"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckNaN"], 'label', 'Check NaN' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckNaN"], 'layout:index', 34 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckNaN"], 'layout:visibilityActivator', 'borderColorModeIsErrorCheck' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckNaN"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckNaN"], 'description', 'Applies the error color to images which contain any pixels with a `NaN` value.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckFileValid"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckFileValid"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckFileValid"], 'layout:index', 39 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckFileValid"], 'label', 'Check File Valid' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckFileValid"], 'layout:visibilityActivator', 'borderColorModeIsErrorCheck' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckFileValid"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckFileValid"], 'description', 'Highlights images where the ImageReader has applied `Black` or `Hold` mode for missing frames. Works by checking for `fileValid` metadata with a value of `False`. ' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMin"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMin"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMin"], 'layout:index', 36 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMin"], 'label', 'Min' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMin"], 'layout:visibilityActivator', 'borderColorModeIsErrorCheck' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMin"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMin"], 'description', 'The minimum value allowed for pixels when using `borderCheckMin`.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMin"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMin"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMin"], 'layout:index', 35 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMin"], 'label', 'Check Min' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMin"], 'layout:visibilityActivator', 'borderColorModeIsErrorCheck' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMin"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMin"], 'description', 'Applies the error color to images which contain any pixels with values below `borderMin`.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMax"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMax"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMax"], 'layout:index', 37 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMax"], 'layout:visibilityActivator', 'borderColorModeIsErrorCheck' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMax"], 'label', 'Check Max' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMax"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderCheckMax"], 'description', 'Applies the error color to images which contain any pixels with values above `borderMax`.' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMax"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMax"], 'layout:section', 'Settings.Borders' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMax"], 'layout:index', 38 )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMax"], 'label', 'Max' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMax"], 'layout:visibilityActivator', 'borderColorModeIsErrorCheck' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMax"], 'layout:activator', 'bordersAreEnabled' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["borderMax"], 'description', 'The maximum value allowed for pixels when using `borderCheckMin`.' )
__children["ContactSheet"]["ImageStats"]["user"]["min"].setInput( __children["ContactSheet"]["ImageStats"]["min"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ImageStats"]["user"]["min"], 'nodule:type', '' )
__children["ContactSheet"]["ImageStats"]["user"]["max"].setInput( __children["ContactSheet"]["ImageStats"]["max"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ImageStats"]["user"]["max"], 'nodule:type', '' )
__children["ContactSheet"]["ImageStats"]["user"]["average"].setInput( __children["ContactSheet"]["ImageStats"]["average"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ImageStats"]["user"]["average"], 'nodule:type', '' )
__children["ContactSheet"]["ImageStats"]["in"].setInput( __children["ContactSheet"]["Dot3"]["out"] )
__children["ContactSheet"]["ImageStats"]["areaSource"].setValue( 2 )
__children["ContactSheet"]["ImageStats"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 1920, 1080 ) ) )
__children["ContactSheet"]["ImageStats"]["__uiPosition"].setValue( imath.V2f( 332.425873, -139.284103 ) )
__children["ContactSheet"]["Dot2"]["in"].setInput( __children["ContactSheet"]["ModeSwitch"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Dot2"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Dot2"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["Dot2"]["__uiPosition"].setValue( imath.V2f( 342.88205, -63.2436829 ) )
__children["ContactSheet"]["BorderColor"]["index"].setInput( __children["ContactSheet"]["borderColorMode"] )
__children["ContactSheet"]["BorderColor"]["in"][0].setInput( __children["ContactSheet"]["borderColor"] )
__children["ContactSheet"]["BorderColor"]["in"][1].setInput( __children["ContactSheet"]["ErrorCheckColor"]["__out"]["p0"] )
__children["ContactSheet"]["BorderColor"]["in"][2].setInput( __children["ContactSheet"]["MetadataColor"]["__out"]["p0"] )
__children["ContactSheet"]["BorderColor"]["__uiPosition"].setValue( imath.V2f( 338.96875, -154.532715 ) )
__children["ContactSheet"]["Dot3"]["labelType"].setValue( 2 )
__children["ContactSheet"]["Dot3"]["in"].setInput( __children["ContactSheet"]["Dot2"]["out"] )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Dot3"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["Dot3"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContactSheet"]["Dot3"]["__uiPosition"].setValue( imath.V2f( 342.88205, -121.727982 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["ErrorCheckColor"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p0"].setInput( __children["ContactSheet"]["Dot3"]["out"]["metadata"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p1"].setInput( __children["ContactSheet"]["ImageStats"]["user"]["average"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p2"].setInput( __children["ContactSheet"]["ImageStats"]["user"]["max"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p3"].setInput( __children["ContactSheet"]["ImageStats"]["user"]["min"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p4"].setInput( __children["ContactSheet"]["borderCheckFileValid"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p5"].setInput( __children["ContactSheet"]["borderCheckMax"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p6"].setInput( __children["ContactSheet"]["borderCheckMin"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p7"].setInput( __children["ContactSheet"]["borderCheckNaN"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p8"].setInput( __children["ContactSheet"]["borderColor"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p9"].setInput( __children["ContactSheet"]["borderErrorColor"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p10"].setInput( __children["ContactSheet"]["borderMax"] )
__children["ContactSheet"]["ErrorCheckColor"]["__in"]["p11"].setInput( __children["ContactSheet"]["borderMin"] )
__children["ContactSheet"]["ErrorCheckColor"]["__uiPosition"].setValue( imath.V2f( 338.99234, -146.488098 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["MetadataColor"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ContactSheet"]["MetadataColor"]["__in"]["p0"].setInput( __children["ContactSheet"]["Dot3"]["out"]["metadata"] )
__children["ContactSheet"]["MetadataColor"]["__in"]["p1"].setInput( __children["ContactSheet"]["borderColorMetadata"] )
__children["ContactSheet"]["MetadataColor"]["__uiPosition"].setValue( imath.V2f( 352.702606, -146.441376 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["filter"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["filter"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ContactSheet"]["filter"], 'description', 'The pixel filter used when resizing the input images. Each filter provides different tradeoffs between sharpness and the danger of aliasing or ringing.' )
__children["TestSequence"]["size"]["x"].setInput( __children["Expression"]["__out"]["p0"] )
__children["TestSequence"]["size"]["y"].setInput( __children["TestSequence"]["size"]["x"] )
__children["TestSequence"]["__uiPosition"].setValue( imath.V2f( 252.274261, 56.6688347 ) )
__children["TestLayers"]["CollectImages"]["user"]["numLayers"].setValue( 26 )
Gaffer.Metadata.registerValue( __children["TestLayers"]["CollectImages"]["user"]["numLayers"], 'nodule:type', '' )
__children["TestLayers"]["CollectImages"]["in"].setInput( __children["TestLayers"]["Checkerboard3"]["out"] )
__children["TestLayers"]["CollectImages"]["rootLayers"].setInput( __children["TestLayers"]["Expression"]["__out"]["p0"] )
__children["TestLayers"]["CollectImages"]["__uiPosition"].setValue( imath.V2f( 278.365417, 44.4917107 ) )
__children["TestLayers"]["out"].setInput( __children["TestLayers"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["TestLayers"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["TestLayers"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["TestLayers"]["Expression"]["__in"]["p0"].setInput( __children["TestLayers"]["numLayers"] )
__children["TestLayers"]["Expression"]["__uiPosition"].setValue( imath.V2f( 267.98587, 44.3026009 ) )
__children["TestLayers"]["Checkerboard3"]["format"].setInput( __children["TestLayers"]["format"] )
Gaffer.Metadata.registerValue( __children["TestLayers"]["Checkerboard3"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["TestLayers"]["Checkerboard3"]["size"]["y"].setInput( __children["TestLayers"]["Checkerboard3"]["size"]["x"] )
__children["TestLayers"]["Checkerboard3"]["colorA"]["r"].setInput( __children["TestLayers"]["Random"]["outColor"]["r"] )
__children["TestLayers"]["Checkerboard3"]["colorA"]["g"].setInput( __children["TestLayers"]["Random"]["outColor"]["g"] )
__children["TestLayers"]["Checkerboard3"]["colorA"]["b"].setInput( __children["TestLayers"]["Random"]["outColor"]["b"] )
__children["TestLayers"]["Checkerboard3"]["__uiPosition"].setValue( imath.V2f( 278.365417, 52.6557732 ) )
__children["TestLayers"]["Random"]["seedVariable"].setValue( 'collect:layerName' )
__children["TestLayers"]["Random"]["baseColor"].setValue( imath.Color3f( 0.712000012, 0.624083221, 0.206480026 ) )
__children["TestLayers"]["Random"]["hue"].setValue( 0.5 )
__children["TestLayers"]["Random"]["saturation"].setValue( 0.4000000059604645 )
__children["TestLayers"]["Random"]["value"].setValue( 0.5 )
__children["TestLayers"]["Random"]["__uiPosition"].setValue( imath.V2f( 268.115356, 52.5511932 ) )
__children["TestLayers"]["BoxOut"]["in"].setInput( __children["TestLayers"]["CollectImages"]["out"] )
Gaffer.Metadata.registerValue( __children["TestLayers"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["TestLayers"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["TestLayers"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 279.864655, 36.159626 ) )
__children["TestLayers"]["__uiPosition"].setValue( imath.V2f( 281.986481, 56.4923668 ) )
__children["TestLayers"]["numLayers"].setValue( 30 )
Gaffer.Metadata.registerValue( __children["TestLayers"]["numLayers"], 'nodule:type', '' )
__children["TestLayers"]["format"].setValue( GafferImage.Format( 1920, 1080, 1.000 ) )
Gaffer.Metadata.registerValue( __children["TestLayers"]["format"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["TestLayers"]["format"], 'description', 'The resolution and aspect ratio of the image.' )
Gaffer.Metadata.registerValue( __children["TestLayers"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 241.774765, 56.6679306 ) )
__children["TestCollect"]["size"]["x"].setInput( __children["Random"]["outFloat"] )
__children["TestCollect"]["size"]["y"].setInput( __children["TestCollect"]["size"]["x"] )
__children["TestCollect"]["__uiPosition"].setValue( imath.V2f( 297.56308, 56.4623909 ) )
__children["Random"]["seedVariable"].setValue( 'contactSheet:tileIndex' )
__children["Random"]["floatRange"].setValue( imath.V2f( 100, 1000 ) )
__children["Random"]["__uiPosition"].setValue( imath.V2f( 297.221436, 62.0249939 ) )
__children["TestViews"]["Checkerboard1"]["size"]["y"].setInput( __children["TestViews"]["Checkerboard1"]["size"]["x"] )
__children["TestViews"]["Checkerboard1"]["colorA"].setValue( imath.Color4f( 0.23636362, 0.519999981, 0.236363634, 1 ) )
__children["TestViews"]["Checkerboard1"]["__uiPosition"].setValue( imath.V2f( 300.906494, 26.8474369 ) )
__children["TestViews"]["Checkerboard2"]["size"]["y"].setInput( __children["TestViews"]["Checkerboard2"]["size"]["x"] )
__children["TestViews"]["Checkerboard2"]["colorB"].setValue( imath.Color4f( 0.5, 0.212500006, 0.212500006, 1 ) )
__children["TestViews"]["Checkerboard2"]["__uiPosition"].setValue( imath.V2f( 313.866272, 27.0874348 ) )
__children["TestViews"]["CreateViews"]["out"]["format"].setInput( __children["TestViews"]["CreateViews"]["__switch"]["out"]["format"] )
__children["TestViews"]["CreateViews"]["out"]["dataWindow"].setInput( __children["TestViews"]["CreateViews"]["__switch"]["out"]["dataWindow"] )
__children["TestViews"]["CreateViews"]["out"]["metadata"].setInput( __children["TestViews"]["CreateViews"]["__switch"]["out"]["metadata"] )
__children["TestViews"]["CreateViews"]["out"]["deep"].setInput( __children["TestViews"]["CreateViews"]["__switch"]["out"]["deep"] )
__children["TestViews"]["CreateViews"]["out"]["sampleOffsets"].setInput( __children["TestViews"]["CreateViews"]["__switch"]["out"]["sampleOffsets"] )
__children["TestViews"]["CreateViews"]["out"]["channelNames"].setInput( __children["TestViews"]["CreateViews"]["__switch"]["out"]["channelNames"] )
__children["TestViews"]["CreateViews"]["out"]["channelData"].setInput( __children["TestViews"]["CreateViews"]["__switch"]["out"]["channelData"] )
__children["TestViews"]["CreateViews"]["views"][0]["value"].setInput( __children["TestViews"]["Checkerboard1"]["out"] )
__children["TestViews"]["CreateViews"]["views"][1]["value"].setInput( __children["TestViews"]["Checkerboard2"]["out"] )
__children["TestViews"]["CreateViews"]["__uiPosition"].setValue( imath.V2f( 304.391144, 17.4875889 ) )
__children["TestViews"]["out"].setInput( __children["TestViews"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["TestViews"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["TestViews"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["TestViews"]["BoxOut"]["in"].setInput( __children["TestViews"]["CreateViews"]["out"] )
Gaffer.Metadata.registerValue( __children["TestViews"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["TestViews"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["TestViews"]["__uiPosition"].setValue( imath.V2f( 313.755157, 56.4246941 ) )
__children["Tall"]["format"].setValue( GafferImage.Format( 10, 100, 1.000 ) )
Gaffer.Metadata.registerValue( __children["Tall"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["Tall"]["color"].setValue( imath.Color4f( 1, 0.5, 0, 1 ) )
__children["Tall"]["__uiPosition"].setValue( imath.V2f( 266.670319, 56.5078926 ) )
Gaffer.Metadata.registerValue( __children["Backdrop"], 'nodeGadget:color', imath.Color3f( 0.133837715, 0.346396267, 0.425000012 ) )
__children["Backdrop"]["title"].setValue( 'Useful test inputs' )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 286.682617, 59.0463753 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -48.9078598, -7.91404724 ), imath.V2f( 54.9078598, 12.9954872 ) ) )
__children["NaN"]["Constant"]["__uiPosition"].setValue( imath.V2f( 367.518188, 69.3193665 ) )
__children["NaN"]["Constant2"]["color"].setValue( imath.Color4f( 1, 1, 1, 1 ) )
__children["NaN"]["Constant2"]["__uiPosition"].setValue( imath.V2f( 355.676239, 69.4343262 ) )
__children["NaN"]["Merge"]["in"][0].setInput( __children["NaN"]["Constant"]["out"] )
__children["NaN"]["Merge"]["in"][1].setInput( __children["NaN"]["Constant2"]["out"] )
__children["NaN"]["Merge"]["operation"].setValue( 2 )
__children["NaN"]["Merge"]["__uiPosition"].setValue( imath.V2f( 363.379242, 61.155304 ) )
__children["NaN"]["Merge1"]["in"][0].setInput( __children["NaN"]["Merge"]["out"] )
__children["NaN"]["Merge1"]["in"][1].setInput( __children["NaN"]["Merge"]["out"] )
__children["NaN"]["Merge1"]["operation"].setValue( 2 )
__children["NaN"]["Merge1"]["__uiPosition"].setValue( imath.V2f( 363.379242, 52.9912415 ) )
__children["NaN"]["out"].setInput( __children["NaN"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["NaN"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["NaN"]["out"], 'description', 'The output image generated by this node.' )
__children["NaN"]["BoxOut"]["in"].setInput( __children["NaN"]["Merge1"]["out"] )
Gaffer.Metadata.registerValue( __children["NaN"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["NaN"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
__children["NaN"]["__uiPosition"].setValue( imath.V2f( 330.106476, 56.631237 ) )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["Expression"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["LayersMode"]["LayerQuery"]["Expression"]["__expression"].setValue( 'import GafferImage\n\nchannelNames = parent["__in"]["p0"]\nparent["__out"]["p0"] = IECore.StringVectorData(\n\tGafferImage.ImageAlgo.layerNames(\n\t\tGafferImage.ImageAlgo.sortedChannelNames(\n\t\t\tchannelNames\n\t\t)\n\t)\n)' )
__children["ContactSheet"]["LayersMode"]["Expression"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["LayersMode"]["Expression"]["__expression"].setValue( 'connectedInputs = parent["__in"]["p0"]\nparent["__out"]["p0"] = IECore.StringVectorData( [\n\tstr( i ) for i in connectedInputs\n] )' )
__children["ContactSheet"]["LayersMode"]["Expression6"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["LayersMode"]["Expression6"]["__expression"].setValue( 'connectedInputs = parent["__in"]["p1"]\ncollectedLayerNames = parent["__in"]["p0"]\n\nswitchIndexes = IECore.IntVectorData()\nlayerNames = IECore.StringVectorData()\n\nfor input, inputLayerNames in zip( connectedInputs, collectedLayerNames ) :\n\tfor layerName in inputLayerNames :\n\t\tswitchIndexes.append( input )\n\t\tlayerNames.append( layerName )\n\nparent["__out"]["p1"] = switchIndexes\nparent["__out"]["p0"] = layerNames\nparent["__out"]["p2"] = len( switchIndexes )' )
__children["ContactSheet"]["LayersMode"]["Expression7"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["LayersMode"]["Expression7"]["__expression"].setValue( 'parent["__out"]["p0"] = int( context.get( "collect:value", "0" ) )' )
__children["ContactSheet"]["LayersMode"]["Expression8"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["LayersMode"]["Expression8"]["__expression"].setValue( 'switchIndexes = parent["__in"]["p0"]\ntile = context.get( "__contactSheet:tile", 0 )\n\nparent["__out"]["p0"] = switchIndexes[tile] if len( switchIndexes ) > tile else 0' )
__children["ContactSheet"]["LayersMode"]["Expression4"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["LayersMode"]["Expression4"]["__expression"].setValue( 'import GafferImage\n\nlayerNames = parent["__in"]["p0"]\ntile = context.get( "__contactSheet:tile", 0 )\nlayerName = layerNames[tile] if tile < len( layerNames ) else ""\n\nif layerName == "" :\n\tparent["__out"]["p1"] = GafferImage.DeleteChannels.Mode.Delete\n\tparent["__out"]["p0"] = "*.*"\nelse :\n\tparent["__out"]["p1"] = GafferImage.DeleteChannels.Mode.Keep\n\tparent["__out"]["p0"] = GafferImage.ImageAlgo.channelName( layerName, "*" )\n' )
__children["ContactSheet"]["LayersMode"]["Expression12"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["LayersMode"]["Expression12"]["__expression"].setValue( 'import GafferImage\nsource = context.get( "source", "" )\nparent["__out"]["p0"] = GafferImage.ImageAlgo.baseName( source )' )
__children["ContactSheet"]["LayersMode"]["Label"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["LayersMode"]["Label"]["__expression"].setValue( 'layerNames = parent["__in"]["p0"]\nswitchIndexes = parent["__in"]["p1"]\n\ntile = context.get( "__contactSheet:tile", 0 )\n\nparent["__out"]["p1"] = layerNames[tile] or "RGBA" if len( layerNames ) > tile else ""\nparent["__out"]["p0"] = switchIndexes[tile] if len( switchIndexes ) > tile else 0' )
__children["ContactSheet"]["SequenceMode"]["InputContext"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["SequenceMode"]["InputContext"]["__expression"].setValue( 'frames = parent["__in"]["p0"]\nconnectedInputs =  parent["__in"]["p1"]\ntile = context.get( "__contactSheet:tile", 0 )\n\ninputIndex = tile // len( frames ) if len( frames ) else 0\nframeIndex = tile % len( frames ) if len( frames ) else 0\n\ninput = connectedInputs[inputIndex] if inputIndex < len( connectedInputs ) else 0\n\nparent["__out"]["p1"] = input\nparent["__out"]["p0"] = input\nparent["__out"]["p2"] = frames[frameIndex] if frameIndex < len( frames ) else 0' )
__children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["SequenceMode"]["FrameListParser"]["__expression"].setValue( 'frameList = IECore.FrameRange.parse( parent["__in"]["p1"] ).asList()\nparent["__out"]["p0"] = IECore.IntVectorData( frameList )\nparent["__out"]["p1"] = len( frameList ) * len( parent["__in"]["p0"] )' )
__children["ContactSheet"]["StandardMode"]["SwitchIndex"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["StandardMode"]["SwitchIndex"]["__expression"].setValue( 'connectedInputs = parent["__in"]["p0"]\ntile = context.get( "__contactSheet:tile", 0 )\nswitchIndex = connectedInputs[tile] if tile < len( connectedInputs ) else 0\nparent["__out"]["p1"] = switchIndex\nparent["__out"]["p0"] = switchIndex\n' )
__children["ContactSheet"]["StandardMode"]["NumTiles"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["StandardMode"]["NumTiles"]["__expression"].setValue( 'parent["__out"]["p0"] = len( parent["__in"]["p0"] )' )
__children["ContactSheet"]["ViewsMode"]["Expression"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["ViewsMode"]["Expression"]["__expression"].setValue( 'connectedInputs = parent["__in"]["p0"]\nparent["__out"]["p0"] = IECore.StringVectorData( [\n\tstr( i ) for i in connectedInputs\n] )' )
__children["ContactSheet"]["ViewsMode"]["Expression6"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["ViewsMode"]["Expression6"]["__expression"].setValue( 'connectedInputs = parent["__in"]["p1"]\ncollectedViewNames = parent["__in"]["p0"]\n\nswitchIndexes = IECore.IntVectorData()\nviewNames = IECore.StringVectorData()\n\nfor input, inputViewNames in zip( connectedInputs, collectedViewNames ) :\n\tfor viewName in inputViewNames :\n\t\tswitchIndexes.append( input )\n\t\tviewNames.append( viewName )\n\nparent["__out"]["p0"] = switchIndexes\nparent["__out"]["p1"] = viewNames\nparent["__out"]["p2"] = len( switchIndexes )' )
__children["ContactSheet"]["ViewsMode"]["Expression7"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["ViewsMode"]["Expression7"]["__expression"].setValue( 'parent["__out"]["p0"] = int( context.get( "collect:value", "0" ) )' )
__children["ContactSheet"]["ViewsMode"]["Expression8"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["ViewsMode"]["Expression8"]["__expression"].setValue( 'switchIndexes = parent["__in"]["p0"]\ntile = context.get( "__contactSheet:tile", 0 )\n\nparent["__out"]["p0"] = switchIndexes[tile] if len( switchIndexes ) > tile else 0' )
__children["ContactSheet"]["ViewsMode"]["Expression4"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["ViewsMode"]["Expression4"]["__expression"].setValue( 'import GafferImage\n\nviewNames = parent["__in"]["p0"]\ncell = context.get( "__contactSheet:tile", 0 )\nparent["__out"]["p0"] = viewNames[cell] if cell < len( viewNames ) else ""\n' )
__children["ContactSheet"]["ViewsMode"]["Expression13"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["ViewsMode"]["Expression13"]["__expression"].setValue( 'parent["__out"]["p0"] = parent["__in"]["p0"]' )
__children["ContactSheet"]["ViewsMode"]["Label"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["ViewsMode"]["Label"]["__expression"].setValue( 'viewNames = parent["__in"]["p1"]\nswitchIndexes = parent["__in"]["p0"]\ntile = context.get( "__contactSheet:tile", 0 )\n\ntile = context.get( "__contactSheet:tile", 0 )\nparent["__out"]["p1"] = viewNames[tile] if len( viewNames ) > tile else ""\nparent["__out"]["p0"] = switchIndexes[tile] if len( switchIndexes ) > tile else 0' )
__children["ContactSheet"]["Tiles"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["Tiles"]["__expression"].setValue( 'import math\nimport imath\n\n# Inputs\n\ncontentArea = parent["__in"]["p2"]\nspacing = parent["__in"]["p3"]\ndivisions = parent["__in"]["p0"]\ninputFormat = parent["__in"]["p1"]\nverticalAlignment = parent["__in"]["p6"]\nhorizontalAlignment = parent["__in"]["p5"]\nnumTiles = min( parent["__in"]["p4"], divisions.x * divisions.y )\n\ntiles = IECore.Box2fVectorData()\nif numTiles :\n\n\t# Figure out how much space we have available per tile.\n\t# The aspect ratio of this space will not necessarily\n\t# match the aspect ratio of the input image.\n\t\n\tavailableSize = contentArea.size() - spacing * ( imath.V2f( divisions ) - 1 )\n\tavailableTileSize = availableSize / imath.V2f( divisions )\n\tavailableTileAspect = availableTileSize.x / availableTileSize.y\n\t\n\t# Calculate a best-fit tile size that maintains the\n\t# aspect ratio of the input.\n\t\n\tinputSize = inputFormat.getDisplayWindow().size()\n\tinputAspect = inputSize.x / inputSize.y\n\t\t\n\tif availableTileAspect > inputAspect :\n\t\tfittedTileSize = imath.V2f(\n\t\t\tavailableTileSize.y * inputAspect,\n\t\t\tavailableTileSize.y\n\t\t)\n\telse :\n\t\tfittedTileSize = imath.V2f(\n\t\t\tavailableTileSize.x,\n\t\t\tavailableTileSize.x / inputAspect\n\t\t)\n\t\t\n\t# We may now have some extra space. Use the alignment modes\n\t# to decide what to do with it.\n\t\n\torigin = imath.V2f()\n\ttileSize = imath.V2f()\n\tstep = imath.V2f()\n\t\n\tfor d in ( 0, 1 ) : # X, Y\n\t\t\n\t\talignment = verticalAlignment if d == 1 else horizontalAlignment\n\t\tif alignment == 3 and divisions[d] == 1 :\n\t\t\t# Can\'t do justification if there\'s only one\n\t\t\t# tile in this dimension - center instead.\n\t\t\talignment = 2\n\t\t\n\t\textraSpace = availableSize[d] - fittedTileSize[d] * divisions[d]\n\t\t\n\t\tif alignment == 3 :\n\t\t\n\t\t\t# Justified\n\t\t\t\n\t\t\torigin[d] = contentArea.min()[d]\n\t\t\ttileSize[d] = fittedTileSize[d]\n\t\t\tstep[d] = fittedTileSize[d] + spacing[d] + extraSpace / (divisions[d] - 1)\n\t\t\t\n\t\telse :\n\t\t \t\n\t\t\ttileSize[d] = fittedTileSize[d]\n\t\t\tstep[d] = tileSize[d] + spacing[d]\n\t\t \t\n\t\t\tif alignment == 0 :\n\t\t\t\t# Top, Left\n\t\t\t\torigin[d] = contentArea.min()[d]\n\t\t\telif alignment == 1 :\n\t\t\t\t# Bottom, Right\n\t\t\t\torigin[d] = contentArea.min()[d] + extraSpace\n\t\t\telse :\n\t\t\t\t# Center\n\t\t\t\torigin[d] = contentArea.min()[d] + extraSpace / 2\n\t\t\t\t\n\t\tif d == 1 :\n\t\t\torigin[d] = contentArea.max().y - ( origin[d] - contentArea.min()[d] ) - tileSize[d]\n\t\t\tstep[d] *= -1\n\t\n\t# Generate our tiles from `origin`, `tileSize` and `step`.\n\t\n\tfor tileIndex in range( 0, numTiles ) :\n\t\n\t\ty = tileIndex // divisions.x\n\t\tx = tileIndex % divisions.x\n\t\t\n\t\ttileOrigin = origin + step * imath.V2f( x, y )\n\t\ttiles.append( imath.Box2f( tileOrigin, tileOrigin + tileSize ) )\n\t\nparent["__out"]["p0"] = tiles\n' )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["CollectMode"]["ContextVariablesExpression"]["__expression"].setValue( 'switchIndexes = parent["__in"]["p0"]\ntileNames = parent["__in"]["p1"] or [ "" ]\ntileIndex = context.get( "__contactSheet:tile", 0 )\ncollectIndex = tileIndex % len( tileNames )\n\nparent["__out"]["p0"] = tileIndex // len( tileNames )\nparent["__out"]["p2"] = tileNames[collectIndex]\nparent["__out"]["p1"] = collectIndex\n\n' )
__children["ContactSheet"]["CollectMode"]["NumTilesExpression"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["CollectMode"]["NumTilesExpression"]["__expression"].setValue( 'parent["__out"]["p0"] = len( parent["__in"]["p1"] ) * len( parent["__in"]["p0"] )' )
__children["ContactSheet"]["CollectMode"]["Label"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["CollectMode"]["Label"]["__expression"].setValue( 'switchIndexes = parent["__in"]["p0"]\ntileNames = parent["__in"]["p1"]\ntile = context.get( "__contactSheet:tile", 0 )\nparent["__out"]["p1"] = tileNames[tile%len(tileNames)] if len( tileNames ) else ""\nparent["__out"]["p0"] = tile // len( tileNames )' )
__children["ContactSheet"]["AutomaticDivisions"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["AutomaticDivisions"]["__expression"].setValue( 'import math\nimport sys\nimport imath\n\n# Inputs\n\nformat = parent["__in"]["p4"]\ncontentArea = parent["__in"]["p1"]\nnumTiles = parent["__in"]["p3"]\nspacing =  parent["__in"]["p2"]\ninputFormat = parent["__in"]["p0"]\n\ncontentSize = contentArea.size()\ninputSize = inputFormat.getDisplayWindow().size()\ninputAspect = inputSize.x / inputSize.y\n\nif not numTiles :\n\n\tdivisions = imath.V2i( 0 )\n\nelse :\n\n\t# Try increasing numbers of X divisions, and choose\n\t# the one which maximises the fitted tile area.\n\t\n\tmaxFittedArea = 0\n\tdivisions = imath.V2i( 0 )\n\n\tfor xDivisions in range( 1, numTiles + 1 ) :\n\t\n\t\t# Get how many divisions in Y we would need in order\n\t\t# to have enough tiles.\n\t\t\n\t\tyDivisions = math.ceil( numTiles / xDivisions )\n\t\t\t\n\t\t# Figure out how big a fitted tile would be for these\n\t\t# divisions.\n\t\n\t\tavailableSize = contentSize - spacing * ( imath.V2f( xDivisions, yDivisions ) - 1 )\n\t\tif availableSize.x <= 0 or availableSize.y <= 0 :\n\t\t\tcontinue\n\t\t\n\t\tavailableTileSize = availableSize / imath.V2f( xDivisions, yDivisions )\n\t\tavailableTileAspect = availableTileSize.x / availableTileSize.y\n\t\t\t\t\n\t\tif availableTileAspect > inputAspect :\n\t\t\tfittedTileSize = imath.V2f(\n\t\t\t\tavailableTileSize.y * inputAspect,\n\t\t\t\tavailableTileSize.y\n\t\t\t)\n\t\telse :\n\t\t\tfittedTileSize = imath.V2f(\n\t\t\t\tavailableTileSize.x,\n\t\t\t\tavailableTileSize.x / inputAspect\n\t\t\t)\n\n\t\t# Update our best result.\n\n\t\tfittedTileArea = fittedTileSize.x * fittedTileSize.y\n\t\tif fittedTileArea >= maxFittedArea :\n\t\t\tdivisions = imath.V2i( xDivisions, yDivisions )\n\t\t\tmaxFittedArea = fittedTileArea\n\nparent["__out"]["p0"] = divisions' )
__children["ContactSheet"]["Expression"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["Expression"]["__expression"].setValue( 'import collections\n\nmetadata = parent["__in"]["p0"]\nlabelFormat = parent["__in"]["p1"]\n\nformatDict = collections.defaultdict( str )\nfor key, value in metadata.items() :\n\tif hasattr( value, "value" ) :\n\t\t# Unwrap things like IntData so that we can use\n\t\t# format specifiers for padding etc.\n\t\tvalue = value.value\n\tformatDict[key] = value\n\nparent["__out"]["p0"] = labelFormat.format_map( formatDict )' )
__children["ContactSheet"]["ContentAreaExpression"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["ContentAreaExpression"]["__expression"].setValue( 'import imath\n\n# Inputs\n\ndisplayWindow = imath.Box2f( parent["__in"]["p2"].getDisplayWindow() )\nmarginLeft = parent["__in"]["p6"]\nmarginRight = parent["__in"]["p7"]\nmarginTop = parent["__in"]["p8"]\nmarginBottom = parent["__in"]["p5"]\nspacing = parent["__in"]["p9"]\nlabelsEnabled = parent["__in"]["p4"]\nlabelAlignment = parent["__in"]["p3"]\nbordersEnabled = parent["__in"]["p1"]\nborderWidth = parent["__in"]["p0"]\n\n# Adjust margins to make space for labels if necessary\n\nif labelAlignment == 3 :\n\tmarginBottom += spacing.y\nelif labelAlignment == 4 :\n\tmarginTop += spacing.y\n\n# Adjust margins and spacing to make room for borders\n\nif bordersEnabled :\n\tmarginLeft += borderWidth\n\tmarginRight += borderWidth\n\tmarginTop += borderWidth\n\tmarginBottom += borderWidth\n\tspacing += 2 * imath.V2f( borderWidth )\n\n# Outputs\n\nparent["__out"]["p0"] = imath.Box2f(\n\timath.V2f( \n\t\tdisplayWindow.min().x + marginLeft,\n\t\tdisplayWindow.min().y + marginBottom\n\t),\n\timath.V2f(\n\t\tdisplayWindow.max().x - marginRight,\n\t\tdisplayWindow.max().y - marginTop\n\t)\n)\n\nparent["__out"]["p1"] = spacing' )
__children["ContactSheet"]["Expression1"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["Expression1"]["__expression"].setValue( 'import IECore\nimport GafferImage\n\ntiles = parent["__in"]["p0"]\nlabelScale = parent["__in"]["p3"]\nverticalAlignment = parent["__in"]["p6"]\nverticalSpacing = parent["__in"]["p7"]\nborderWidth = parent["__in"]["p1"] if parent["__in"]["p2"] else 0\n\ntileSize = tiles[0].size() if tiles else imath.V2f( 0 )\nlabelDisplayWindow = imath.Box2i( imath.V2i( 0 ), imath.V2i( tileSize ) )\n\nparent["__out"]["p1"] = GafferImage.Format( labelDisplayWindow )\nparent["__out"]["p2"] = labelDisplayWindow\n\nif verticalAlignment == 3 :\n\t# Below\n\ttextSize = labelScale * verticalSpacing * 0.7\n\tparent["__out"]["p6"] = GafferImage.Text.VerticalAlignment.Bottom\n\toffset = imath.V2f( 0, -borderWidth -verticalSpacing * labelScale * 0.85 )\nelif verticalAlignment == 4 :\n\t# Above\n\ttextSize = labelScale * verticalSpacing * 0.7\n\tparent["__out"]["p6"] = GafferImage.Text.VerticalAlignment.Top\n\toffset = imath.V2f( 0, borderWidth + verticalSpacing * labelScale * 0.85 )\nelse :\n\ttextSize = labelScale * tileSize.x / 10\n\tparent["__out"]["p6"] = verticalAlignment\n\toffset = imath.V2f( 0 )\n\t\nparent["__out"]["p5"] = textSize\nparent["__out"]["p4"] = textSize / 20 * parent["__in"]["p5"]\nparent["__out"]["p3"] = textSize / 20 * parent["__in"]["p4"]\n\ntiles = [\n\timath.Box2f( t.min() + offset, t.max() + offset )\n\tfor t in tiles\n]\n\nparent["__out"]["p0"] = IECore.Box2fVectorData( tiles )' )
__children["ContactSheet"]["Expression2"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["Expression2"]["__expression"].setValue( 'import imath\nimport GafferImage\n\nborderWidth = imath.V2f( parent["__in"]["p1"] )\ntiles = parent["__in"]["p0"]\n\ntileSize = tiles[0].size() if tiles else imath.V2f( 0 )\nborderDisplayWindow = imath.Box2i( imath.V2i( 0 ), imath.V2i( tileSize + borderWidth * 2 ) )\n\nparent["__out"]["p1"] = GafferImage.Format( borderDisplayWindow )\n\n\ntiles = [\n\timath.Box2f( t.min() - borderWidth, t.max() + borderWidth )\n\tfor t in tiles\n]\n\nparent["__out"]["p2"] = imath.Box2f( \n\timath.V2f( borderDisplayWindow.min() ) + imath.V2f( borderWidth / 2 ),\n\timath.V2f( borderDisplayWindow.max() ) - imath.V2f( borderWidth / 2 )\n)\n\nparent["__out"]["p0"] = IECore.Box2fVectorData( tiles )' )
__children["ContactSheet"]["ErrorCheckColor"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["ErrorCheckColor"]["__expression"].setValue( 'import math\n\n# Getting min/max from an intermediate plug without infinite\n# limits, because there is a bug serialising plugs with infinite\n# limits.\nstatsMinValue = parent["__in"]["p3"]\nstatsMaxValue = parent["__in"]["p2"]\nstatsAverageValue = parent["__in"]["p1"]\ncheckNaN = parent["__in"]["p7"]\ncheckMin = parent["__in"]["p6"]\ncheckMax = parent["__in"]["p5"]\nminThreshold = parent["__in"]["p11"]\nmaxThreshold = parent["__in"]["p10"]\ncheckFileValid = parent["__in"]["p4"]\ncolor = parent["__in"]["p8"]\nerrorColor = parent["__in"]["p9"]\nmetadata = parent["__in"]["p0"]\n\nif checkNaN and any( math.isnan( x ) for x in statsAverageValue ) :\n\tcolor = errorColor\n\t\nif checkMin and any( statsMinValue[i] < minThreshold[i] for i in range( 0, 4 ) ) :\n\tcolor = errorColor\n\nif checkMax and any( statsMaxValue[i] > maxThreshold[i] for i in range( 0, 4 ) ) :\n\tcolor = errorColor\n\nif checkFileValid :\n\tfileValid = metadata.get( "fileValid" )\n\tif isinstance( fileValid, IECore.BoolData ) and not fileValid.value :\n\t\tcolor = errorColor\n\t\t\nparent["__out"]["p0"] = color' )
__children["ContactSheet"]["MetadataColor"]["__engine"].setValue( 'python' )
__children["ContactSheet"]["MetadataColor"]["__expression"].setValue( 'metadata = parent["__in"]["p0"]\nname = parent["__in"]["p1"]\n\nvalue = metadata.get( name )\n\nif isinstance( value, IECore.Color4fData ) :\n\tcolor = value.value\nelif isinstance( value, IECore.Color3fData ) :\n\tcolor = imath.Color4f( value.value.r, value.value.g, value.value.b, 1 )\nelif isinstance( value, IECore.FloatData ) :\n\tcolor = imath.Color4f( value.value, value.value, value.value, 1 )\nelse :\n\tcolor = imath.Color4f( 0 )\n\nparent["__out"]["p0"] = color' )
__children["TestLayers"]["Expression"]["__engine"].setValue( 'python' )
__children["TestLayers"]["Expression"]["__expression"].setValue( 'parent["__out"]["p0"] = IECore.StringVectorData( [ f"layer{i}" for i in range( 0, parent["__in"]["p0"] ) ] )' )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'parent["__out"]["p0"] = context.getFrame() * 10' )


del __children
