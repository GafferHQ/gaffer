import Gaffer
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Box"] = Gaffer.Box( "Box" )
parent.addChild( __children["Box"] )
__children["Box"].addChild( GafferScene.StandardAttributes( "StandardAttributes" ) )
__children["Box"]["StandardAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "attributes_visibility", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["attributes_visibility"].addChild( Gaffer.StringPlug( "name", defaultValue = 'scene:visible', ) )
__children["Box"]["attributes_visibility"].addChild( Gaffer.BoolPlug( "value", defaultValue = True, ) )
__children["Box"]["attributes_visibility"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = False, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 33007 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Box"]["StandardAttributes"]["attributes"]["visibility"].setInput( __children["Box"]["attributes_visibility"] )
__children["Box"]["StandardAttributes"]["attributes"]["visibility"]["name"].setInput( __children["Box"]["attributes_visibility"]["name"] )
__children["Box"]["StandardAttributes"]["attributes"]["visibility"]["value"].setInput( __children["Box"]["attributes_visibility"]["value"] )
__children["Box"]["StandardAttributes"]["attributes"]["visibility"]["enabled"].setInput( __children["Box"]["attributes_visibility"]["enabled"] )
__children["Box"]["StandardAttributes"]["__uiPosition"].setValue( imath.V2f( 5.25, -0.25 ) )
__children["Box"]["__uiPosition"].setValue( imath.V2f( 5.25, -0.25 ) )
Gaffer.Metadata.registerValue( __children["Box"]["attributes_visibility"], 'description', 'Whether or not the object can be seen - invisible objects are\nnot sent to the renderer at all. Typically more fine\ngrained (camera, reflection etc) visibility can be\nspecified using a renderer specific attributes node.\nNote that making a parent location invisible will\nalways make all the children invisible too, regardless\nof their visibility settings.' )


del __children
