#usda 1.0
(
)

def PointInstancer "inst" (
	kind = "group"
)
{
	int64[] ids = [5, 6, 7, 8, 9, 0, 1, 2, 3, 4]

	float[] primvars:testA (
		interpolation = "vertex"
	)
	float[] primvars:testA.timeSamples = { 0 : [ 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ] }

	point3f[] positions = [(0, 0, -20), (0, 0, -16), (0, 0, -12), (0, 0, -8), (0, 0, -4), (0, 0, 0), (0, 0, 4), (0, 0, 8), (0, 0, 12), (0, 0, 16)]
	int[] protoIndices = [0, 1, 0, 1, 0, 1, 0, 1, 0, 1]
	rel prototypes = [ </inst/Prototypes/sphere>, </inst/Prototypes/subInst> ]

	def Scope "Prototypes" (
		kind = "group"
	)
	{
		def Sphere "sphere"
		{
			double radius = 1
		}
		def PointInstancer "subInst" (
			kind = "group"
		)
		{
			int64[] ids = [5, 6, 7, 8, 9, 0, 1, 2 ]

			float[] primvars:testB (
				interpolation = "vertex"
			)
			float[] primvars:testB.timeSamples = { 0 : [ 0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875 ] }

			point3f[] positions = [
				(-1, -1, -1), (1, -1, -1), (-1, 1, -1), (1, 1, -1),
				(-1, -1, 1), (1, -1, 1), (-1, 1, 1), (1, 1, 1)
			]
			rel prototypes = [ </inst/Prototypes/subInst/Prototypes/sphere> ]

			def Scope "Prototypes" (
				kind = "group"
			)
			{
				def Sphere "sphere"
				{
					double radius = 0.3
				}
			}
		}
	}
}
