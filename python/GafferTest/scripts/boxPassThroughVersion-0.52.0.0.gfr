import Gaffer
import GafferImage
import GafferTest
import IECore
import imath

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 52, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["AddTen"] = Gaffer.Box( "AddTen" )
parent.addChild( __children["AddTen"] )
__children["AddTen"].addChild( GafferTest.AddNode( "AddNode" ) )
__children["AddTen"]["AddNode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["AddTen"]["BoxIn"].addChild( Gaffer.IntPlug( "__in", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"]["BoxIn"].addChild( Gaffer.IntPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"].addChild( Gaffer.IntPlug( "op1", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["AddTen"]["BoxOut"].addChild( Gaffer.IntPlug( "in", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"]["BoxOut"].addChild( Gaffer.IntPlug( "__out", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"].addChild( Gaffer.IntPlug( "sum", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"].addChild( Gaffer.Switch( "Switch" ) )
__children["AddTen"]["Switch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"]["Switch"].addChild( Gaffer.ArrayPlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"]["Switch"]["in"].addChild( Gaffer.IntPlug( "in0", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"]["Switch"]["in"].addChild( Gaffer.IntPlug( "in1", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"]["Switch"]["in"].addChild( Gaffer.IntPlug( "in2", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"]["Switch"].addChild( Gaffer.IntPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddTen"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 45502 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["AddTen"]["AddNode"]["op1"].setInput( __children["AddTen"]["BoxIn"]["out"] )
__children["AddTen"]["AddNode"]["op2"].setValue( 10 )
__children["AddTen"]["AddNode"]["__uiPosition"].setValue( imath.V2f( 2.50122547, -9.98805618 ) )
__children["AddTen"]["__uiPosition"].setValue( imath.V2f( 2.63622808, 0.437344432 ) )
__children["AddTen"]["BoxIn"]["name"].setValue( 'op1' )
__children["AddTen"]["BoxIn"]["__in"].setInput( __children["AddTen"]["op1"] )
__children["AddTen"]["BoxIn"]["out"].setInput( __children["AddTen"]["BoxIn"]["__in"] )
__children["AddTen"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -5.59977055, 0.543976247 ) )
__children["AddTen"]["BoxOut"]["name"].setValue( 'sum' )
__children["AddTen"]["BoxOut"]["in"].setInput( __children["AddTen"]["Switch"]["out"] )
__children["AddTen"]["BoxOut"]["__out"].setInput( __children["AddTen"]["BoxOut"]["in"] )
__children["AddTen"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -5.5997715, -29.4136906 ) )
__children["AddTen"]["sum"].setInput( __children["AddTen"]["BoxOut"]["__out"] )
__children["AddTen"]["Switch"]["index"].setValue( 1 )
__children["AddTen"]["Switch"]["enabled"].setInput( __children["AddTen"]["enabled"] )
__children["AddTen"]["Switch"]["__uiPosition"].setValue( imath.V2f( -5.59977102, -18.1521187 ) )
Gaffer.Metadata.registerValue( __children["AddTen"]["Switch"]["in"], 'noduleLayout:section', 'top' )
__children["AddTen"]["Switch"]["in"]["in0"].setInput( __children["AddTen"]["BoxIn"]["out"] )
__children["AddTen"]["Switch"]["in"]["in1"].setInput( __children["AddTen"]["AddNode"]["sum"] )
__children["AddTen"]["Switch"]["out"].setInput( __children["AddTen"]["Switch"]["in"]["in1"] )
Gaffer.Metadata.registerValue( __children["AddTen"]["Switch"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["AddTen"]["enabled"], 'description', 'Turns the node on and off.' )
Gaffer.Metadata.registerValue( __children["AddTen"]["enabled"], 'nodule:type', '' )


del __children

