import Gaffer
import IECore

__children = {}

__children["b"] = Gaffer.Box( "b" )
parent.addChild( __children["b"] )
__children["b"].addChild( Gaffer.TaskList( "n" ) )
__children["b"]["n"]["requirements"].addChild( Gaffer.Plug( "requirement1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["b"].addChild( Gaffer.Plug( "n_requirements_requirement0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["b"].addChild( Gaffer.Plug( "n_requirement", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["b"]["n"]["requirements"]["requirement0"].setInput( __children["b"]["n_requirements_requirement0"] )
Gaffer.Metadata.registerPlugValue( __children["b"]["n_requirements_requirement0"], "nodeGadget:nodulePosition", None )
Gaffer.Metadata.registerPlugValue( __children["b"]["n_requirements_requirement0"], "nodule:type", None )
Gaffer.Metadata.registerPlugValue( __children["b"]["n_requirements_requirement0"], "compoundNodule:orientation", None )
Gaffer.Metadata.registerPlugValue( __children["b"]["n_requirements_requirement0"], "compoundNodule:spacing", None )
Gaffer.Metadata.registerPlugValue( __children["b"]["n_requirements_requirement0"], "compoundNodule:direction", None )
__children["b"]["n_requirement"].setInput( __children["b"]["n"]["requirement"] )
Gaffer.Metadata.registerPlugValue( __children["b"]["n_requirement"], "nodeGadget:nodulePosition", None )
Gaffer.Metadata.registerPlugValue( __children["b"]["n_requirement"], "nodule:type", None )
Gaffer.Metadata.registerPlugValue( __children["b"]["n_requirement"], "compoundNodule:orientation", None )
Gaffer.Metadata.registerPlugValue( __children["b"]["n_requirement"], "compoundNodule:spacing", None )
Gaffer.Metadata.registerPlugValue( __children["b"]["n_requirement"], "compoundNodule:direction", None )


del __children

