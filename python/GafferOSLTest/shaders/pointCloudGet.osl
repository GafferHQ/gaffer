//////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2024, John Haddon. All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
//
//      * Redistributions of source code must retain the above
//        copyright notice, this list of conditions and the following
//        disclaimer.
//
//      * Redistributions in binary form must reproduce the above
//        copyright notice, this list of conditions and the following
//        disclaimer in the documentation and/or other materials provided with
//        the distribution.
//
//      * Neither the name of John Haddon nor the names of
//        any other contributors to this software may be used to endorse or
//        promote products derived from this software without specific prior
//        written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
//  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
//  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
//  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
//  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
//  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
//  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//////////////////////////////////////////////////////////////////////////

shader pointCloudGet
(
	string name = "",
	string colorAttr = "",
	string floatAttr = "",
	string intAttr = "",
	string stringAttr = "",
	// `lockgeom` needed to prevent doomed constant-folding
	// of the `pointcloud_get()` call.
	int index = 0 [[int lockgeom=0]],
)
{
	int indices[1] = { index };

	if( colorAttr != "" )
	{
		color c[1] = { color( -1 ) };
		if( pointcloud_get( name, indices, 1, colorAttr, c ) )
		{
			Ci = c[0] * emission();
		}
	}
	else if( floatAttr != "" )
	{
		float f[1] = { -1 };
		if( pointcloud_get( name, indices, 1, floatAttr, f ) )
		{
			Ci = color( f[0], 0, 0 ) * emission();
		}
	}
	else if( intAttr != "" )
	{
		int i[1] = { -1 };
		if( pointcloud_get( name, indices, 1, intAttr, i ) )
		{
			Ci = color( i[0], 0, 0 ) * emission();
		}
	}
	else if( stringAttr != "" )
	{
		string s[1] = { "" };
		if( pointcloud_get( name, indices, 1, stringAttr, s ) )
		{
			Ci = debug( "pointValue", "type", "string", "stringValue", s[0] );
		}
	}
}
