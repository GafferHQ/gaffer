# Standard build + test job

parameters:
  name: ''
  vmImage: ''
  container: ''
  buildType: 'RELEASE'
  threads: 2
  publish: false

jobs:

 - job: ${{ parameters.name }}_${{ parameters.buildType }}

   # We're seeing jobs take about an hour sometimes!
   timeoutInMinutes: 100

   ${{ if ne(parameters.container, '') }}:
      container: ${{ parameters.container }}

   pool:
     vmImage: ${{ parameters.vmImage }}

   variables:
     ARNOLD_ROOT: $(System.DefaultWorkingDirectory)/arnoldRoot
     DELIGHT: $(System.DefaultWorkingDirectory)/3delight
     BUILD_TYPE: ${{ parameters.buildType }}
     SCONS_BUILD_CACHEDIR: $(Pipeline.Workspace)/sconsCache


   steps:

   - task: CacheBeta@0
     inputs:
       key: $(Build.SourcesDirectory)/config/installDependencies.sh $(Build.SourcesDirectory)/config/installArnold.sh $(Build.SourcesDirectory)/config/installDelight.sh
       path: $(SCONS_BUILD_CACHEDIR)
     displayName: 'Configure Scons Build Cache'

   # Provides $(Gaffer.*) variables
   - script: |
       pip install --user PyGithub &&
       ./config/azure/setBuildVars.py
     displayName: 'Set Custom Variables'
     env:
       GITHUB_ACCESS_TOKEN: $(githubAccessToken)

   - script: |
       brew update &&
       brew install scons doxygen &&
       brew cask install xquartz inkscape
     displayName: 'Install Toolchain (Darwin)'
     condition: eq( variables['Agent.OS'], 'Darwin' )

   - script: |
       ./config/installDelight.sh &&
       ./config/installArnold.sh &&
       ./config/installDependencies.sh ./build
     displayName: 'Install Dependencies'
     env:
       ARNOLD_LOGIN: $(arnoldLogin)
       ARNOLD_PASSWORD: $(arnoldPassword)
       AZURE: 1

   - script: |
       Xvfb :99 -screen 0 1280x1024x24 &
       metacity&
     displayName: 'Start X (Linux)'
     condition: and( succeeded(), eq( variables['Agent.OS'], 'Linux' ) )
     env:
       DISPLAY: :99.0

   - script: |
       echo BUILD_TYPE=${{ parameters.buildType }}
       g++ --version
       scons -j ${{ parameters.threads }} package ENV_VARS_TO_IMPORT=PATH BUILD_TYPE=${{ parameters.buildType }} DELIGHT_ROOT=$DELIGHT ARNOLD_ROOT=$ARNOLD_ROOT BUILD_DIR=./build INSTALL_DIR=./install/$(Gaffer.Build.Name) BUILD_CACHEDIR=$(SCONS_BUILD_CACHEDIR)
     displayName: 'Build'
     env:
       DISPLAY: :99.0
       AZURE: 1

   - script: |
       ./install/$(Gaffer.Build.Name)/bin/gaffer test
     displayName: 'Test'
     env:
       DISPLAY: :99.0
       AZURE: 1
       USER: azureTestUser # ImageWriterTest requires $USER but by default Azure doesn't provide it

   - ${{ if eq(parameters.publish, true) }}:

     - script: |
         pip install --user azure-storage-blob PyGithub &&
         ./config/azure/publishBuild.py --archive ./install/$(Gaffer.Build.Name).tar.gz --repo $(Build.Repository.Name) --commit $(Gaffer.Source.Commit)
       displayName: "Publish Build"
       condition: and( succeeded(), or( eq( variables['Build.Reason'], 'PullRequest' ), eq( variables['Build.Reason'], 'Schedule' ) ) )
       env:
         GITHUB_ACCESS_TOKEN: $(githubAccessToken)
         AZURE_ACCESS_TOKEN: $(azureBlobAccessToken)

     - script: |
         pip install --user PyGithub &&
         ./config/azure/publishRelease.py --archive ./install/$(Gaffer.Build.Name).tar.gz --repo $(Build.Repository.Name) --releaseId $(Gaffer.GitHub.ReleaseID)
       displayName: "Publish Release"
       condition: and( succeeded(), ne( variables['Gaffer.GitHub.ReleaseID'], '' ) )
       env:
         GITHUB_ACCESS_TOKEN: $(githubAccessToken)

