#! /bin/bash
##########################################################################
#  
#  Copyright (c) 2011-2012, John Haddon. All rights reserved.
#  Copyright (c) 2011-2012, Image Engine Design Inc. All rights reserved.
#  
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are
#  met:
#  
#      * Redistributions of source code must retain the above
#        copyright notice, this list of conditions and the following
#        disclaimer.
#  
#      * Redistributions in binary form must reproduce the above
#        copyright notice, this list of conditions and the following
#        disclaimer in the documentation and/or other materials provided with
#        the distribution.
#  
#      * Neither the name of John Haddon nor the names of
#        any other contributors to this software may be used to endorse or
#        promote products derived from this software without specific prior
#        written permission.
#  
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
#  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
#  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#  
##########################################################################

# Wrapper script for gaffer. This ensures that relevant environment
# variables are set appropriately and then runs gaffer.py in the 
# correct python interpreter.
##########################################################################

# Remove -psn_0 argument that the OS X launcher adds on annoyingly.
##########################################################################

if [[ $1 == -psn_0_* ]] ; then
	shift
fi

# Find where this script is located, resolving any symlinks that were used
# to invoke it. Set GAFFER_ROOT based on the script location.
##########################################################################

pushd . &> /dev/null

# resolve symlinks
thisScript=$0
while [ -L "$thisScript" ]
do
	cd `dirname "$thisScript"`
	thisScript=`basename $thisScript`
	thisScript=`readlink $thisScript`
done

# find the bin directory we're in
cd `dirname $thisScript` 
binDir=`pwd -P`
export GAFFER_ROOT=`dirname $binDir`

popd &> /dev/null

# Make sure resource paths are set appropriately
##########################################################################

export IECOREGL_SHADER_PATHS=$GAFFER_ROOT/glsl${IECOREGL_SHADER_PATHS:+:}${IECOREGL_SHADER_PATHS:-}
export IECOREGL_SHADER_INCLUDE_PATHS=$GAFFER_ROOT/glsl${IECOREGL_SHADER_INCLUDE_PATHS:+:}${IECOREGL_SHADER_INCLUDE_PATHS:-}
export IECORE_FONT_PATHS=$GAFFER_ROOT/fonts${IECORE_FONT_PATHS:+:}${IECORE_FONT_PATHS:-}
export IECORE_OP_PATHS=~/gaffer/ops:$GAFFER_ROOT/ops${IECORE_OP_PATHS:+:}${IECORE_OP_PATHS:-}
export IECORE_OP_PRESET_PATHS=~/gaffer/opPresets:$GAFFER_ROOT/opPresets${IECORE_OP_PRESET_PATHS:+:}${IECORE_OP_PRESET_PATHS:-}
export IECORE_PROCEDURAL_PATHS=~/gaffer/procedurals:$GAFFER_ROOT/procedurals${IECORE_PROCEDURAL_PATHS:+:}${IECORE_PROCEDURAL_PATHS:-}
export IECORE_PROCEDURAL_PRESET_PATHS=~/gaffer/proceduralPresets:$GAFFER_ROOT/proceduralPresets${IECORE_PROCEDURAL_PRESET_PATHS:+:}${IECORE_PROCEDURAL_PRESET_PATHS:-}

if [[ -z $CORTEX_POINTDISTRIBUTION_TILESET ]] ; then
	export CORTEX_POINTDISTRIBUTION_TILESET=$GAFFER_ROOT/resources/cortex/tileset_2048.dat
fi

export GAFFER_APP_PATHS=~/gaffer/apps:$GAFFER_ROOT/apps${GAFFER_APP_PATHS:+:}${GAFFER_APP_PATHS:-}
export GAFFER_STARTUP_PATHS=~/gaffer/startup:$GAFFER_ROOT/startup${GAFFER_STARTUP_PATHS:+:}${GAFFER_STARTUP_PATHS:-}

export GAFFERUI_IMAGE_PATHS=$GAFFER_ROOT/graphics${GAFFERUI_IMAGE_PATHS:+:}${GAFFERUI_IMAGE_PATHS:-}

export OSLHOME=$GAFFER_ROOT

# Get python set up properly
##########################################################################

# Make sure PYTHONHOME is pointing to our internal python build.

if [[ `uname` = "Linux" ]] ; then
	export PYTHONHOME=$GAFFER_ROOT
else
	export PYTHONHOME=$GAFFER_ROOT/lib/Python.framework/Versions/Current
fi

# Get python module path set up

export PYTHONPATH=$GAFFER_ROOT/python${PYTHONPATH:+:}${PYTHONPATH:-}

# Get library paths set up
##########################################################################

if [[ `uname` = "Linux" ]] ; then
	export LD_LIBRARY_PATH=$GAFFER_ROOT/lib/${LD_LIBRARY_PATH:+:}${LD_LIBRARY_PATH:-}
else
	export DYLD_FRAMEWORK_PATH=$GAFFER_ROOT/lib${DYLD_FRAMEWORK_PATH:+:}${DYLD_FRAMEWORK_PATH:-}
	export DYLD_LIBRARY_PATH=$GAFFER_ROOT/lib/${DYLD_LIBRARY_PATH:+:}${DYLD_LIBRARY_PATH:-}
	export DYLD_LIBRARY_PATH=/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Resources/:$DYLD_LIBRARY_PATH
	if [[ -n $DELIGHT ]] ; then
		export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$DELIGHT/lib
	fi
fi

# Get the executable path set up, for running child processes from Gaffer
##########################################################################

export PATH=$GAFFER_ROOT/bin:$PATH

# If appleseed isn't configured in the environment, and we've been
# shipped with it, then get that set up.
##########################################################################

if [[ -z $APPLESEED && -d $GAFFER_ROOT/appleseed ]] ; then

	export APPLESEED=$GAFFER_ROOT/appleseed

	if [[ `uname` = "Linux" ]] ; then
		export LD_LIBRARY_PATH=$APPLESEED/lib:$LD_LIBRARY_PATH
	else
		export DYLD_LIBRARY_PATH=$APPLESEED/lib:$DYLD_LIBRARY_PATH
	fi

	# Using a glob to keep the wrapper agnostic of python version.
	for appleseedPython in $APPLESEED/lib/python* ; do
		export PYTHONPATH=$appleseedPython:$PYTHONPATH
	done

	export APPLESEED_SEARCHPATH=$APPLESEED/shaders:$GAFFER_ROOT/appleseedDisplays

	export PATH=$APPLESEED/bin:$PATH

fi

# Run gaffer itself
##########################################################################

if [[ -n $GAFFER_DEBUG ]] ; then 
	if [[ -z $GAFFER_DEBUGGER ]] ; then
		export GAFFER_DEBUGGER="gdb --args"
	fi

	exec $GAFFER_DEBUGGER $GAFFER_ROOT/bin/python $GAFFER_ROOT/bin/gaffer.py "$@"
else
	exec $GAFFER_ROOT/bin/python $GAFFER_ROOT/bin/gaffer.py "$@"
fi
