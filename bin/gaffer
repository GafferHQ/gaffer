#! /bin/bash
##########################################################################
#
#  Copyright (c) 2011-2012, John Haddon. All rights reserved.
#  Copyright (c) 2011-2012, Image Engine Design Inc. All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are
#  met:
#
#      * Redistributions of source code must retain the above
#        copyright notice, this list of conditions and the following
#        disclaimer.
#
#      * Redistributions in binary form must reproduce the above
#        copyright notice, this list of conditions and the following
#        disclaimer in the documentation and/or other materials provided with
#        the distribution.
#
#      * Neither the name of John Haddon nor the names of
#        any other contributors to this software may be used to endorse or
#        promote products derived from this software without specific prior
#        written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
#  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
#  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
##########################################################################

# Public-facing launch script for gaffer. This sets up the Python interpreter
# and then defers to `_gaffer.py` to set up the appropriate environment
# and finally launch `__gaffer.py`.
#
## \todo Move all remaining environment setup to `_gaffer.py`.

set -e

# Remove -psn_0 argument that the OS X launcher adds on annoyingly.
##########################################################################

if [[ $1 == -psn_0_* ]] ; then
	shift
fi

# Find where this script is located, resolving any symlinks that were used
# to invoke it. Set GAFFER_ROOT based on the script location.
##########################################################################

pushd . &> /dev/null

# resolve symlinks
thisScript=$0
while [[ -L $thisScript ]]
do
	cd "`dirname "$thisScript"`"
	thisScript=`basename "$thisScript"`
	thisScript=`readlink "$thisScript"`
done

# find the bin directory we're in
cd "`dirname "$thisScript"`"
binDir=`pwd -P`
export GAFFER_ROOT="`dirname "$binDir"`"

popd &> /dev/null

# Make sure resource paths are set appropriately
##########################################################################

# Prepend a directory to a path if it is not
# already there.
#
# $1 is the value to include in the path
# $2 is the name of the path to edit
#
# e.g. prependToPath "$HOME/bin" PATH
function prependToPath {

	if [[ ":${!2}:" != *":$1:"* ]] ; then

		if [[ ${!2} ]] ; then
			eval "export $2=\"$1:${!2}\""
		else
			eval "export $2=\"$1\""
		fi

	fi

}

function appendToPath {

	if [[ ":${!2}:" != *":$1:"* ]] ; then

		if [[ ${!2} ]] ; then
			eval "export $2=\"${!2}:$1\""
		else
			eval "export $2=\"$1\""
		fi

	fi

}

prependToPath "$HOME/gaffer/apps:$GAFFER_ROOT/apps" GAFFER_APP_PATHS

prependToPath "$HOME/gaffer/startup" GAFFER_STARTUP_PATHS
appendToPath "$GAFFER_ROOT/startup" GAFFER_STARTUP_PATHS

prependToPath "$GAFFER_ROOT/graphics" GAFFERUI_IMAGE_PATHS

if [[ -e $GAFFER_ROOT/bin/oslc ]] ; then
	export OSLHOME=$GAFFER_ROOT
fi

## \todo: should we rename this to "osl" to match our "glsl" folder?
prependToPath "$HOME/gaffer/shaders:$GAFFER_ROOT/shaders" OSL_SHADER_PATHS

if [[ -z $GAFFEROSL_CODE_DIRECTORY ]] ; then
	export GAFFEROSL_CODE_DIRECTORY="$HOME/gaffer/oslCode"
	appendToPath "$GAFFEROSL_CODE_DIRECTORY" OSL_SHADER_PATHS
fi

# Get python set up properly
##########################################################################

# Unset PYTHONHOME to make sure our internal Python build is used in preference
# to anything in the external environment. We only do this if Gaffer has been
# built with an internal version of Python - otherwise we assume the existing
# environment is providing the right value.
if [[ -e $GAFFER_ROOT/bin/python ]] ; then
	unset PYTHONHOME
fi

# Get python module path set up

prependToPath "$GAFFER_ROOT/python" PYTHONPATH

if [[ -z $PYTHONNOUSERSITE ]] ; then
	# Prevent Python automatically adding a user-level `site-packages`
	# directory to the `sys.path`. These frequently contain modules which
	# conflict with our own. Users who know what they are doing can set
	# `PYTHONNOUSERSITE=0` before running Gaffer if they want to use
	# the user directory.
	export PYTHONNOUSERSITE=1
fi

# Get library paths set up
##########################################################################

if [[ `uname` = "Linux" ]] ; then
	prependToPath "$GAFFER_ROOT/lib" LD_LIBRARY_PATH
else
	prependToPath "$GAFFER_ROOT/lib" DYLD_FRAMEWORK_PATH
	prependToPath "$GAFFER_ROOT/lib" DYLD_LIBRARY_PATH
	prependToPath /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Resources/ DYLD_LIBRARY_PATH
fi

# Set up Qt
##########################################################################

if [[ -e $GAFFER_ROOT/qt/plugins ]] ; then
	export QT_QPA_PLATFORM_PLUGIN_PATH="$GAFFER_ROOT/qt/plugins"
fi

# Work around issue with Qt 5.12+ when using a wacom tablet on linux.
#   See https://bugreports.qt.io/browse/QTBUG-77826
# This can hopefully be removed once this patch is in:
#   https://codereview.qt-project.org/c/qt/qtbase/+/284141
export QT_XCB_TABLET_LEGACY_COORDINATES=1

# Get the executable path set up, for running child processes from Gaffer
##########################################################################

prependToPath "$GAFFER_ROOT/bin" PATH

# Run gaffer itself
##########################################################################

if [[ -n $GAFFER_DEBUG ]] ; then
	if [[ -z $GAFFER_DEBUGGER ]] ; then
		if [[ `uname` = "Linux" ]] ; then
			export GAFFER_DEBUGGER="gdb --args"
		else
			export GAFFER_DEBUGGER="lldb -- "
		fi
	fi
	# Using `which` because lldb doesn't seem to respect $PATH
	exec $GAFFER_DEBUGGER `which python` "$GAFFER_ROOT/bin/_gaffer.py" "$@"
else
	exec python "$GAFFER_ROOT/bin/_gaffer.py" "$@"
fi
