import Gaffer
import GafferDelight
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["ViewerSettings"] = Gaffer.Box( "ViewerSettings" )
parent.addChild( __children["ViewerSettings"] )
__children["ViewerSettings"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["ViewerSettings"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["ViewerSettings"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["ViewerSettings"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["ViewerSettings"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.StringPlug( "shading", defaultValue = 'flat', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.NameSwitch( "ShadingSwitch" ) )
__children["ViewerSettings"]["ShadingSwitch"].setup( GafferScene.ScenePlug( "value", ) )
__children["ViewerSettings"]["ShadingSwitch"]["in"].addChild( Gaffer.NameValuePlug( "", GafferScene.ScenePlug( "value", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "in2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ViewerSettings"]["ShadingSwitch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.ShaderAssignment( "FlatAssignment" ) )
__children["ViewerSettings"]["FlatAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Dot( "Dot" ) )
__children["ViewerSettings"]["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["ViewerSettings"]["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Dot( "Dot1" ) )
__children["ViewerSettings"]["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["ViewerSettings"]["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.ShaderAssignment( "PreviewAssignment" ) )
__children["ViewerSettings"]["PreviewAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.StringPlug( "lighting", defaultValue = 'direct', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Backdrop( "Backdrop" ) )
__children["ViewerSettings"]["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferOSL.OSLShader( "Flat" ) )
__children["ViewerSettings"]["Flat"].loadShader( "dlConstant" )
__children["ViewerSettings"]["Flat"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferOSL.OSLShader( "FacingRatio" ) )
__children["ViewerSettings"]["FacingRatio"].loadShader( "dlFacingRatio" )
__children["ViewerSettings"]["FacingRatio"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferOSL.OSLShader( "AttributeRead" ) )
__children["ViewerSettings"]["AttributeRead"].loadShader( "dlAttributeRead" )
__children["ViewerSettings"]["AttributeRead"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferOSL.OSLShader( "Preview" ) )
__children["ViewerSettings"]["Preview"].loadShader( "dlPrincipled" )
__children["ViewerSettings"]["Preview"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferDelight.DelightOptions( "DelightOptions" ) )
__children["ViewerSettings"]["DelightOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Spreadsheet( "LightingSpreadsheet" ) )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"].addColumn( Gaffer.NameValuePlug( "dl:maximumraydepth.diffuse", Gaffer.IntPlug( "value", defaultValue = 1, ), False, "maximumRayDepthDiffuse", Gaffer.Plug.Flags.Default ), adoptEnabledPlug = True )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"].addRows( 2 )
__children["ViewerSettings"]["LightingSpreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
parent["frame"].setValue( 2.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 42897 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
__children["ViewerSettings"]["__uiPosition"].setValue( imath.V2f( -61.1485977, -9.83581161 ) )
__children["ViewerSettings"]["BoxIn"]["__in"].setInput( __children["ViewerSettings"]["in"] )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxIn"]["__in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxIn"]["__in"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["ViewerSettings"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -5.69273949, 33.6189842 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'layout:index', 0 )
__children["ViewerSettings"]["BoxOut"]["in"].setInput( __children["ViewerSettings"]["DelightOptions"]["out"] )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'noduleLayout:spacing', 2.0 )
__children["ViewerSettings"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -2.69274139, -70.5862885 ) )
__children["ViewerSettings"]["out"].setInput( __children["ViewerSettings"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'description', 'The input scene.' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'preset:Flat', 'flat' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'preset:Preview', 'preview' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'preset:Full', 'full' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'description', 'Controls shading quality.\n\n- Flat : Facing-ratio shading using the `displayColor` primitive variable. Intended for cases where there is no lighting, or viewport speed is the top priority.\n- Preview : Simple untextured shading using the `displayColor` primitive variable. Intended to provide a quick lighting preview.\n- Full : Full shading using the shaders assigned in the scene itself. ' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["ShadingSwitch"], 'annotation:user:text', 'Todo : Can we improve the "Preview" shading mode to use assignments made via USD\'s "preview" material purpose, including support for UsdPreviewSurface?' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["ShadingSwitch"], 'annotation:user:color', imath.Color3f( 0.150000006, 0.25999999, 0.25999999 ) )
__children["ViewerSettings"]["ShadingSwitch"]["__index"].setInput( __children["ViewerSettings"]["ShadingSwitch"]["__outIndex"] )
__children["ViewerSettings"]["ShadingSwitch"]["selector"].setInput( __children["ViewerSettings"]["shading"] )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["ShadingSwitch"]["in"], 'noduleLayout:section', 'top' )
__children["ViewerSettings"]["ShadingSwitch"]["in"][0]["name"].setValue( '*' )
__children["ViewerSettings"]["ShadingSwitch"]["in"][0]["value"].setInput( __children["ViewerSettings"]["Dot1"]["out"] )
__children["ViewerSettings"]["ShadingSwitch"]["in"][1]["name"].setValue( 'flat' )
__children["ViewerSettings"]["ShadingSwitch"]["in"][1]["value"].setInput( __children["ViewerSettings"]["FlatAssignment"]["out"] )
__children["ViewerSettings"]["ShadingSwitch"]["in"][2]["name"].setValue( 'preview' )
__children["ViewerSettings"]["ShadingSwitch"]["in"][2]["value"].setInput( __children["ViewerSettings"]["PreviewAssignment"]["out"] )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["ShadingSwitch"]["out"], 'noduleLayout:section', 'bottom' )
__children["ViewerSettings"]["ShadingSwitch"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -26.6222305 ) )
__children["ViewerSettings"]["FlatAssignment"]["in"].setInput( __children["ViewerSettings"]["BoxIn"]["out"] )
__children["ViewerSettings"]["FlatAssignment"]["shader"].setInput( __children["ViewerSettings"]["Flat"]["out"]["outColor"] )
__children["ViewerSettings"]["FlatAssignment"]["__uiPosition"].setValue( imath.V2f( -5.69273949, 9.88680363 ) )
__children["ViewerSettings"]["Dot"]["in"].setInput( __children["ViewerSettings"]["BoxIn"]["out"] )
__children["ViewerSettings"]["Dot"]["__uiPosition"].setValue( imath.V2f( -29.2354755, 16.7868004 ) )
__children["ViewerSettings"]["Dot1"]["in"].setInput( __children["ViewerSettings"]["Dot"]["out"] )
__children["ViewerSettings"]["Dot1"]["__uiPosition"].setValue( imath.V2f( -29.2354755, -19.2901993 ) )
__children["ViewerSettings"]["PreviewAssignment"]["in"].setInput( __children["ViewerSettings"]["BoxIn"]["out"] )
__children["ViewerSettings"]["PreviewAssignment"]["shader"].setInput( __children["ViewerSettings"]["Preview"]["out"]["outColor"] )
__children["ViewerSettings"]["PreviewAssignment"]["__uiPosition"].setValue( imath.V2f( 22.8108902, 9.98861408 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'preset:Direct', 'direct' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'preset:One Bounce', 'oneBounce' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'preset:Full', 'full' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'description', 'Controls lighting quality :\n\n- Direct : Considers direct lighting only, for maximum speed and minimum noise. Ideal for adjusting exposure, falloff and shadow and gobo position.\n- One Bounce : Adds one level of bounce lighting on top of the above.\n- Full : Full quality lighting, using the settings defined in the scene itself.' )
__children["ViewerSettings"]["Backdrop"]["title"].setValue( 'Shading' )
__children["ViewerSettings"]["Backdrop"]["__uiPosition"].setValue( imath.V2f( -3.59827423, 3.58236122 ) )
__children["ViewerSettings"]["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -61.4142838, -35.2866211 ), imath.V2f( 42.5063324, 41.2866211 ) ) )
__children["ViewerSettings"]["Flat"]["parameters"]["i_color"].setInput( __children["ViewerSettings"]["FacingRatio"]["out"]["outColor"] )
__children["ViewerSettings"]["Flat"]["__uiPosition"].setValue( imath.V2f( -19.5462551, 9.88680363 ) )
__children["ViewerSettings"]["FacingRatio"]["parameters"]["color_edge"].setValue( imath.Color3f( 0, 0, 0 ) )
__children["ViewerSettings"]["FacingRatio"]["parameters"]["color_center"].setInput( __children["ViewerSettings"]["AttributeRead"]["out"]["o_color"] )
__children["ViewerSettings"]["FacingRatio"]["__uiPosition"].setValue( imath.V2f( -37.8262787, 15.2868013 ) )
__children["ViewerSettings"]["AttributeRead"]["parameters"]["attribute_name"].setValue( 'displayColor' )
__children["ViewerSettings"]["AttributeRead"]["parameters"]["fallback_value"].setValue( imath.Color3f( 1, 1, 1 ) )
__children["ViewerSettings"]["AttributeRead"]["__uiPosition"].setValue( imath.V2f( -56.6509743, 28.0451012 ) )
__children["ViewerSettings"]["Preview"]["parameters"]["i_color"].setInput( __children["ViewerSettings"]["AttributeRead"]["out"]["o_color"] )
__children["ViewerSettings"]["Preview"]["__uiPosition"].setValue( imath.V2f( 7.54868317, 9.98861313 ) )
__children["ViewerSettings"]["DelightOptions"]["in"].setInput( __children["ViewerSettings"]["ShadingSwitch"]["out"]["value"] )
__children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthDiffuse"].setInput( __children["ViewerSettings"]["LightingSpreadsheet"]["out"]["maximumRayDepthDiffuse"] )
__children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthHair"]["value"].setInput( __children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthDiffuse"]["value"] )
__children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthHair"]["enabled"].setInput( __children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthDiffuse"]["enabled"] )
__children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthReflection"]["value"].setInput( __children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthDiffuse"]["value"] )
__children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthReflection"]["enabled"].setInput( __children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthDiffuse"]["enabled"] )
__children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthRefraction"]["value"].setInput( __children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthDiffuse"]["value"] )
__children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthRefraction"]["enabled"].setInput( __children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthDiffuse"]["enabled"] )
__children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthVolume"]["value"].setInput( __children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthDiffuse"]["value"] )
__children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthVolume"]["enabled"].setInput( __children["ViewerSettings"]["DelightOptions"]["options"]["maximumRayDepthDiffuse"]["enabled"] )
__children["ViewerSettings"]["DelightOptions"]["__uiPosition"].setValue( imath.V2f( -4.19274139, -50.8393555 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["ViewerSettings"]["LightingSpreadsheet"]["selector"].setInput( __children["ViewerSettings"]["lighting"] )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][1]["name"].setValue( 'direct' )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][1]["cells"]["maximumRayDepthDiffuse"]["value"]["value"].setValue( 0 )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][1]["cells"]["maximumRayDepthDiffuse"]["value"]["enabled"].setValue( True )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][2]["name"].setValue( 'oneBounce' )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][2]["cells"]["maximumRayDepthDiffuse"]["value"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"], 'spreadsheet:columnWidth', 204 )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"], 'renameable:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"], 'deletable:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"], 'nameValuePlugPlugValueWidget:ignoreNamePlug', True )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"], 'description', 'The maximum bounce depth a diffuse ray can reach. A depth\nof 1 specifies one additional bounce compared to purely\nlocal illumination.' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"], 'label', 'Diffuse' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["name"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["name"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["name"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["name"], 'renameable:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["name"], 'deletable:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["value"], 'renameable:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["value"], 'deletable:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["enabled"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["enabled"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["enabled"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["enabled"], 'renameable:promotable', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["maximumRayDepthDiffuse"]["value"]["enabled"], 'deletable:promotable', False )
__children["ViewerSettings"]["LightingSpreadsheet"]["__uiPosition"].setValue( imath.V2f( -32.2124939, -51.0890388 ) )


del __children

