name: CI

on:
  push:
    branches:
      - master
      - '*_maintenance'
  pull_request:
    branches:
      - master
      - '*_maintenance'
  release:
      types: [published]

jobs:

  build:

    strategy:

      # Don't cancel other jobs in the build matrix if one job fails.
      fail-fast: false

      matrix:

        # Rather than generate all permutations of various settings,
        # we want to explicitly list each of the variants we want to
        # test. We can use `name` to declare the names of our variants,
        # and then use `include` to define their settings.

        name: [
          linux,
          linux-debug,
          linux-python3,
          macos,
        ]

        include:

          - name: linux
            os: ubuntu-16.04
            buildType: RELEASE
            variant: linux-python2
            publish: true
            containerImage: gafferhq/build:1.2.0
            dependenciesURL: https://github.com/GafferHQ/dependencies/releases/download/2.1.1/gafferDependencies-2.1.1-Python2-linux.tar.gz
            # GitHub container builds run as root. This causes failures for tests that
            # assert that filesystem permissions are respected, because root doesn't
            # respect permissions. So we run the final test suite as a dedicated
            # test user rather than as root.
            testRunner: su testUser -c
            sconsCacheMegabytes: 400

          - name: linux-debug
            os: ubuntu-16.04
            buildType: DEBUG
            variant: linux-python2
            publish: false
            containerImage: gafferhq/build:1.2.0
            dependenciesURL: https://github.com/GafferHQ/dependencies/releases/download/2.1.1/gafferDependencies-2.1.1-Python2-linux.tar.gz
            testRunner: su testUser -c
            # Debug builds are ludicrously big, so we must use a larger cache
            # limit. In practice this compresses down to 4-500Mb.
            sconsCacheMegabytes: 2500

          - name: linux-python3
            os: ubuntu-16.04
            buildType: RELEASE
            variant: linux-python3
            publish: true
            containerImage: gafferhq/build:1.2.0
            dependenciesURL: https://github.com/GafferHQ/dependencies/releases/download/2.1.1/gafferDependencies-2.1.1-Python3-linux.tar.gz
            testRunner: su testUser -c
            sconsCacheMegabytes: 400

          - name: macos
            os: macos-10.15
            buildType: RELEASE
            variant: macos-python2
            publish: true
            containerImage:
            dependenciesURL: https://github.com/GafferHQ/dependencies/releases/download/2.1.1/gafferDependencies-2.1.1-Python2-osx.tar.gz
            testRunner: bash -c
            sconsCacheMegabytes: 400

    runs-on: ${{ matrix.os }}

    container: ${{ matrix.containerImage }}

    env:
      DISPLAY: ":99.0"
      ARNOLD_LICENSE_ORDER: none # Don't waste time looking for a license that doesn't exist
      GAFFER_BUILD_DIR: "./build"
      GAFFER_CACHE_DIR: "./sconsCache"

    steps:

    - uses: actions/checkout@v2

    - name: Install toolchain (MacOS)
      # Prefer `pip install` where possible because it is faster
      # than `brew install`.
      run: |
        pip install scons==3.1.2
        # Ensure scons is on PATH, at some point it vanished, maybe as part of GH Py 2-3 migration?
        echo `pip show scons | grep "Location:" | cut -d ' ' -f2`/../../../bin >> $GITHUB_PATH
        pip install sphinx==1.8.1 sphinx_rtd_theme==0.4.3 recommonmark==0.5.0 docutils==0.12
        # Force inkscape < 1.0 until SConstruct is updated
        brew cask install xquartz https://raw.githubusercontent.com/Homebrew/homebrew-cask/5eafe6e9877c5524100b9ac1c5375fe8a2d039be/Casks/inkscape.rb
      if: runner.os == 'macOS'

    - name: Install toolchain (Linux)
      run: |
        echo /opt/rh/devtoolset-6/root/bin >> $GITHUB_PATH
        Xvfb :99 -screen 0 1280x1024x24 &
        metacity&
        useradd -m testUser
      if: runner.os == 'Linux'

    - name: 'Install Python Modules'
      run: |
        python --version
        pip install PyGitHub==1.45

    - name: Set Custom Variables
      run: |
        .github/workflows/main/setBuildVars.py
        echo GAFFER_SPHINX=`which sphinx-build` >> $GITHUB_ENV
      env:
       GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       GAFFER_BUILD_VARIANT: ${{ matrix.variant }}

    - name: Disable macOS PR Docs
      run: |
        echo GAFFER_SPHINX=doesNotExist >> $GITHUB_ENV
        echo GAFFER_VALIDATE_EXTRA_FLAGS=--skipDocs >> $GITHUB_ENV
      if: false && runner.os == 'macOS' && env.GAFFER_GITHUB_RELEASEID == ''

    - name: Install dependencies
      # The `$GITHUB_ENV` shenanigans creates an environment variable
      # containing the hash of the archive, for use in the cache key
      # below.
      run: |
        echo GAFFER_DEPENDENCIES_HASH=`python .github/workflows/main/installDependencies.py --archiveURL ${{ matrix.dependenciesURL }} --dependenciesDir ${{ env.GAFFER_BUILD_DIR }} --outputFormat "{archiveDigest}"` >> $GITHUB_ENV
        ./config/installArnold.sh
        ./config/installDelight.sh
        echo ARNOLD_ROOT=$GITHUB_WORKSPACE/arnoldRoot >> $GITHUB_ENV
        echo DELIGHT=$GITHUB_WORKSPACE/3delight >> $GITHUB_ENV

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ${{ env.GAFFER_CACHE_DIR }}
        key: ${{ runner.os }}-${{ matrix.containerImage }}-${{env.GAFFER_DEPENDENCIES_HASH}}-${{ matrix.buildType }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.containerImage }}-${{env.GAFFER_DEPENDENCIES_HASH}}-${{ matrix.buildType }}-

    - name: Build Gaffer
      run: |
       scons -j 2 build BUILD_TYPE=${{ matrix.buildType }} OPTIONS=.github/workflows/main/sconsOptions

    - name: Test
      run: |
        echo "::add-matcher::./.github/workflows/main/problemMatchers/unittest.json"
        ${{ matrix.testRunner }} "${{ env.GAFFER_BUILD_DIR }}/bin/gaffer test"
        echo "::remove-matcher owner=unittest::"
      if: false

    - name: Build Docs and Package
      # We currently experience sporadic hangs in the docs builds (mac), this
      # aborts them in a more timely fashion than the default 6hr timeout.
      timeout-minutes: 20
      run: |
        # Treats warnings-as-errors so we know about broken links
        echo "::add-matcher::./.github/workflows/main/problemMatchers/sphinx.json"
        scons -j 2 package BUILD_TYPE=${{ matrix.buildType }} OPTIONS=.github/workflows/main/sconsOptions
        echo "::remove-matcher owner=sphinx::"
      if: matrix.publish

    - name: Validate
      run: |
        echo "::add-matcher::./.github/workflows/main/problemMatchers/validateRelease.json"
        ./config/validateRelease.py --archive ${{ env.GAFFER_BUILD_NAME }}.tar.gz ${{ env.GAFFER_VALIDATE_EXTRA_FLAGS }}
        echo "::remove-matcher owner=validateRelease::"
      if: matrix.publish

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.GAFFER_BUILD_NAME }}
        path: ${{ env.GAFFER_BUILD_NAME }}.tar.gz
      if: matrix.publish && env.GAFFER_GITHUB_RELEASEID == ''

    - name: Publish Release
      run: |
        ./config/publishRelease.py --archive ${{ env.GAFFER_BUILD_NAME }}.tar.gz --repo ${{ github.repository }} --releaseId ${{ env.GAFFER_GITHUB_RELEASEID }}
      if: matrix.publish && env.GAFFER_GITHUB_RELEASEID != ''
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Limit cache size
      # GitHub has a limit of 5G for all caches in a repository. Because we write new
      # files into `./sconsCache` with every build, we must trim its size to avoid
      # unbounded growth. In practice, the archives that get uploaded are much smaller
      # than the limit we apply here, because they're compressed.
      run: ./.github/workflows/main/limitDirectorySize.py --directory ./sconsCache --megabytes ${{ matrix.sconsCacheMegabytes }} --verbose
