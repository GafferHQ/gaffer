import Gaffer
import GafferAppleseed
import GafferDispatch
import GafferScene
import IECore
import imath

__children = {}

__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraTweaks"] = GafferScene.CameraTweaks( "CameraTweaks" )
parent.addChild( __children["CameraTweaks"] )
__children["CameraTweaks"]["tweaks"].addChild( Gaffer.TweakPlug( "tweak_focalLength", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraTweaks"]["tweaks"]["tweak_focalLength"].addChild( Gaffer.FloatPlug( "value", defaultValue = 35.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraTweaks"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedRender"] = GafferAppleseed.AppleseedRender( "AppleseedRender" )
parent.addChild( __children["AppleseedRender"] )
__children["AppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "displayPort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayPort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'displayPort', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayPort"].addChild( Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "quantize", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.StringPlug( "name", defaultValue = 'quantize', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "remoteDisplayType", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["remoteDisplayType"].addChild( Gaffer.StringPlug( "name", defaultValue = 'remoteDisplayType', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["remoteDisplayType"].addChild( Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "displayHost", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayHost"].addChild( Gaffer.StringPlug( "name", defaultValue = 'displayHost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayHost"].addChild( Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "driverType", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["driverType"].addChild( Gaffer.StringPlug( "name", defaultValue = 'driverType', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["driverType"].addChild( Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedOptions"] = GafferAppleseed.AppleseedOptions( "AppleseedOptions" )
parent.addChild( __children["AppleseedOptions"] )
__children["AppleseedOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"]["perspectiveMode"].setValue( 1 )
__children["Camera"]["focalLength"].setValue( 50.0 )
__children["Camera"]["renderSettingOverrides"]["resolution"]["value"].setValue( imath.V2i( 3840, 2560 ) )
__children["Camera"]["renderSettingOverrides"]["overscan"]["value"].setValue( True )
__children["Camera"]["renderSettingOverrides"]["overscan"]["enabled"].setValue( True )
__children["Camera"]["renderSettingOverrides"]["overscanLeft"]["value"].setValue( 0.05 )
__children["Camera"]["renderSettingOverrides"]["overscanLeft"]["enabled"].setValue( True )
__children["Camera"]["renderSettingOverrides"]["overscanRight"]["value"].setValue( 0.05 )
__children["Camera"]["renderSettingOverrides"]["overscanRight"]["enabled"].setValue( True )
__children["Camera"]["renderSettingOverrides"]["overscanTop"]["value"].setValue( 0.05 )
__children["Camera"]["renderSettingOverrides"]["overscanTop"]["enabled"].setValue( True )
__children["Camera"]["renderSettingOverrides"]["overscanBottom"]["value"].setValue( 0.05 )
__children["Camera"]["renderSettingOverrides"]["overscanBottom"]["enabled"].setValue( True )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( -2.75046539, 61.9499931 ) )
__children["CameraTweaks"]["in"].setInput( __children["Camera"]["out"] )
__children["CameraTweaks"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["CameraTweaks"]["tweaks"]["tweak_focalLength"]["name"].setValue( 'focalLength' )
__children["CameraTweaks"]["__uiPosition"].setValue( imath.V2f( -2.75046539, 37.4578056 ) )
__children["StandardOptions"]["in"].setInput( __children["CameraTweaks"]["out"] )
__children["StandardOptions"]["options"]["render:camera"]["value"].setValue( '/camera' )
__children["StandardOptions"]["options"]["render:camera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["render:resolution"]["value"].setValue( imath.V2i( 1920, 1080 ) )
__children["StandardOptions"]["options"]["render:resolution"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( -2.75132775, 12.9656172 ) )
__children["AppleseedRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["AppleseedRender"]["fileName"].setValue( '${project:rootDirectory}/appleseeds/${script:name}/${script:name}.####.appleseed' )
__children["AppleseedRender"]["__uiPosition"].setValue( imath.V2f( -4.2517252, -27.4421921 ) )
__children["Outputs"]["in"].setInput( __children["AppleseedOptions"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( -2.75132751, -19.4421883 ) )
__children["AppleseedOptions"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["AppleseedOptions"]["__uiPosition"].setValue( imath.V2f( -2.75132751, -11.2781258 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/camera' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 10.0040741, 41.639843 ) )

del __children
