import Gaffer
import GafferCycles
import GafferDispatch
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 13, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["point_light"] = GafferCycles.CyclesLight( "point_light" )
parent.addChild( __children["point_light"] )
__children["point_light"].loadShader( "point_light" )
__children["point_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light2"] = GafferCycles.CyclesLight( "point_light2" )
parent.addChild( __children["point_light2"] )
__children["point_light2"].loadShader( "point_light" )
__children["point_light2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"] = Gaffer.Box( "Spheres" )
parent.addChild( __children["Spheres"] )
__children["Spheres"].addChild( GafferScene.Sphere( "Sphere" ) )
__children["Spheres"]["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Spheres"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Spheres"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Spheres"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.Sphere( "Sphere1" ) )
__children["Spheres"]["Sphere1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.PathFilter( "PathFilter1" ) )
__children["Spheres"]["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.Sphere( "Sphere2" ) )
__children["Spheres"]["Sphere2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.PathFilter( "PathFilter2" ) )
__children["Spheres"]["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.Group( "Group" ) )
__children["Spheres"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"]["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferCycles.CyclesShader( "principled_bsdf3" ) )
__children["Spheres"]["principled_bsdf3"].loadShader( "principled_bsdf" )
__children["Spheres"]["principled_bsdf3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment3" ) )
__children["Spheres"]["ShaderAssignment3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.CustomAttributes( "CustomAttributes" ) )
__children["Spheres"]["CustomAttributes"]["attributes"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Spheres"]["CustomAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.CustomAttributes( "CustomAttributes1" ) )
__children["Spheres"]["CustomAttributes1"]["attributes"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Spheres"]["CustomAttributes1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferScene.CustomAttributes( "CustomAttributes2" ) )
__children["Spheres"]["CustomAttributes2"]["attributes"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Spheres"]["CustomAttributes2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spheres"].addChild( GafferCycles.CyclesShader( "attribute" ) )
__children["Spheres"]["attribute"].loadShader( "attribute" )
__children["Spheres"]["attribute"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = Gaffer.Box( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( GafferScene.Plane( "Plane" ) )
__children["Plane"]["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment1" ) )
__children["Plane"]["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( GafferScene.PathFilter( "PathFilter1" ) )
__children["Plane"]["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Plane"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Plane"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( GafferCycles.CyclesShader( "principled_bsdf" ) )
__children["Plane"]["principled_bsdf"].loadShader( "principled_bsdf" )
__children["Plane"]["principled_bsdf"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CyclesOptions"] = GafferCycles.CyclesOptions( "CyclesOptions" )
parent.addChild( __children["CyclesOptions"] )
__children["CyclesOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["Render"] = GafferScene.Render( "Render" )
parent.addChild( __children["Render"] )
__children["Render"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 41535 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["point_light"]["transform"]["translate"].setValue( imath.V3f( -40, 40, 40 ) )
__children["point_light"]["parameters"]["exposure"].setValue( 18.5 )
__children["point_light"]["__uiPosition"].setValue( imath.V2f( 99.9575348, -3.50132656 ) )
__children["point_light2"]["transform"]["translate"].setValue( imath.V3f( 40, -40, 15 ) )
__children["point_light2"]["parameters"]["exposure"].setValue( 16.0 )
__children["point_light2"]["__uiPosition"].setValue( imath.V2f( 113.213676, -3.50132656 ) )
__children["Camera"]["transform"]["translate"].setValue( imath.V3f( 0, 0, -2 ) )
__children["Camera"]["perspectiveMode"].setValue( 1 )
__children["Camera"]["fieldOfView"].setValue( 90.0 )
__children["Camera"]["focalLength"].setValue( 17.0 )
__children["Camera"]["orthographicAperture"].setValue( imath.V2f( 10, 10 ) )
__children["Camera"]["fStop"].setValue( 1.0 )
__children["Camera"]["focusDistance"].setValue( 13.0 )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( 126.644318, -3.50132656 ) )
__children["StandardOptions"]["in"].setInput( __children["Group"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/group/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 400, 300 ) )
__children["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["depthOfField"]["value"].setValue( True )
__children["StandardOptions"]["options"]["depthOfField"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 88.7361526, -17.3294506 ) )
__children["Group"]["in"][0].setInput( __children["Spheres"]["out"] )
__children["Group"]["in"][1].setInput( __children["Plane"]["out"] )
__children["Group"]["in"][2].setInput( __children["point_light"]["out"] )
__children["Group"]["in"][3].setInput( __children["point_light2"]["out"] )
__children["Group"]["in"][4].setInput( __children["Camera"]["out"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( 88.7361526, -11.6653891 ) )
__children["Spheres"]["Sphere"]["transform"]["translate"].setValue( imath.V3f( 0, 12, -25 ) )
__children["Spheres"]["Sphere"]["__uiPosition"].setValue( imath.V2f( -53.1233711, 13.2299356 ) )
__children["Spheres"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["Spheres"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( -39.6556129, 8.77549362 ) )
__children["Spheres"]["out"].setInput( __children["Spheres"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Spheres"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Spheres"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Spheres"]["out"], 'description', 'The processed output scene.' )
__children["Spheres"]["BoxOut"]["in"].setInput( __children["Spheres"]["ShaderAssignment3"]["out"] )
Gaffer.Metadata.registerValue( __children["Spheres"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Spheres"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Spheres"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Spheres"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Spheres"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 19.3290253, -65.1890335 ) )
__children["Spheres"]["__uiPosition"].setValue( imath.V2f( 71.4406891, -3.33335781 ) )
__children["Spheres"]["Sphere1"]["transform"]["translate"].setValue( imath.V3f( 0, 1, -15 ) )
__children["Spheres"]["Sphere1"]["__uiPosition"].setValue( imath.V2f( 16.3290253, 12.6263533 ) )
__children["Spheres"]["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["Spheres"]["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 28.9967842, 8.47191143 ) )
__children["Spheres"]["Sphere2"]["transform"]["translate"].setValue( imath.V3f( 0, -3.5, -10 ) )
__children["Spheres"]["Sphere2"]["__uiPosition"].setValue( imath.V2f( 85.7926178, 14.4151306 ) )
__children["Spheres"]["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["Spheres"]["PathFilter2"]["__uiPosition"].setValue( imath.V2f( 99.2603683, 11.5606899 ) )
__children["Spheres"]["Group"]["in"][0].setInput( __children["Spheres"]["CustomAttributes"]["out"] )
__children["Spheres"]["Group"]["in"][1].setInput( __children["Spheres"]["CustomAttributes1"]["out"] )
__children["Spheres"]["Group"]["in"][2].setInput( __children["Spheres"]["CustomAttributes2"]["out"] )
__children["Spheres"]["Group"]["__uiPosition"].setValue( imath.V2f( 17.8290253, -44.1276588 ) )
__children["Spheres"]["principled_bsdf3"]["parameters"]["base_color"].setInput( __children["Spheres"]["attribute"]["out"]["color"] )
__children["Spheres"]["principled_bsdf3"]["__uiPosition"].setValue( imath.V2f( -3.10729408, -53.8709297 ) )
__children["Spheres"]["ShaderAssignment3"]["in"].setInput( __children["Spheres"]["Group"]["out"] )
__children["Spheres"]["ShaderAssignment3"]["shader"].setInput( __children["Spheres"]["principled_bsdf3"]["out"]["BSDF"] )
__children["Spheres"]["ShaderAssignment3"]["__uiPosition"].setValue( imath.V2f( 17.8290253, -53.8709297 ) )
__children["Spheres"]["CustomAttributes"]["in"].setInput( __children["Spheres"]["Sphere"]["out"] )
__children["Spheres"]["CustomAttributes"]["filter"].setInput( __children["Spheres"]["PathFilter"]["out"] )
__children["Spheres"]["CustomAttributes"]["attributes"]["member1"]["name"].setValue( 'user:color' )
__children["Spheres"]["CustomAttributes"]["attributes"]["member1"]["value"].setValue( imath.Color3f( 0.5, 0.075000003, 0.075000003 ) )
__children["Spheres"]["CustomAttributes"]["__uiPosition"].setValue( imath.V2f( -53.1233711, 3.02906227 ) )
__children["Spheres"]["CustomAttributes1"]["in"].setInput( __children["Spheres"]["Sphere1"]["out"] )
__children["Spheres"]["CustomAttributes1"]["filter"].setInput( __children["Spheres"]["PathFilter1"]["out"] )
__children["Spheres"]["CustomAttributes1"]["attributes"]["member1"]["name"].setValue( 'user:color' )
__children["Spheres"]["CustomAttributes1"]["attributes"]["member1"]["value"].setValue( imath.Color3f( 0.075000003, 0.5, 0.0749999881 ) )
__children["Spheres"]["CustomAttributes1"]["__uiPosition"].setValue( imath.V2f( 16.3290253, 2.62906027 ) )
__children["Spheres"]["CustomAttributes2"]["in"].setInput( __children["Spheres"]["Sphere2"]["out"] )
__children["Spheres"]["CustomAttributes2"]["filter"].setInput( __children["Spheres"]["PathFilter2"]["out"] )
__children["Spheres"]["CustomAttributes2"]["attributes"]["member1"]["name"].setValue( 'user:color' )
__children["Spheres"]["CustomAttributes2"]["attributes"]["member1"]["value"].setValue( imath.Color3f( 0.075000003, 0.0749999881, 0.5 ) )
__children["Spheres"]["CustomAttributes2"]["__uiPosition"].setValue( imath.V2f( 85.7926178, 6.25106812 ) )
__children["Spheres"]["attribute"]["parameters"]["attribute"].setValue( 'user:color' )
__children["Spheres"]["attribute"]["__uiPosition"].setValue( imath.V2f( -17.1600285, -41.2709312 ) )
__children["Plane"]["Plane"]["transform"]["translate"].setValue( imath.V3f( 0, 0, -30 ) )
__children["Plane"]["Plane"]["dimensions"].setValue( imath.V2f( 125, 125 ) )
__children["Plane"]["Plane"]["__uiPosition"].setValue( imath.V2f( -6.12300396, 37.8530388 ) )
__children["Plane"]["ShaderAssignment1"]["in"].setInput( __children["Plane"]["Plane"]["out"] )
__children["Plane"]["ShaderAssignment1"]["filter"].setInput( __children["Plane"]["PathFilter1"]["out"] )
__children["Plane"]["ShaderAssignment1"]["shader"].setInput( __children["Plane"]["principled_bsdf"]["out"]["BSDF"] )
__children["Plane"]["ShaderAssignment1"]["__uiPosition"].setValue( imath.V2f( -6.12300348, 24.5889797 ) )
__children["Plane"]["out"].setInput( __children["Plane"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Plane"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Plane"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Plane"]["out"], 'description', 'The processed output scene.' )
__children["Plane"]["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["Plane"]["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 8.47416496, 30.671011 ) )
__children["Plane"]["BoxOut"]["in"].setInput( __children["Plane"]["ShaderAssignment1"]["out"] )
Gaffer.Metadata.registerValue( __children["Plane"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Plane"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Plane"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Plane"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Plane"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -4.62300396, 0.656945229 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( 85.7361526, -3.33335829 ) )
__children["Plane"]["principled_bsdf"]["parameters"]["base_color"].setValue( imath.Color3f( 0.0340285413, 0.0340285413, 0.0340285413 ) )
__children["Plane"]["principled_bsdf"]["parameters"]["specular"].setValue( 1.0 )
__children["Plane"]["principled_bsdf"]["__uiPosition"].setValue( imath.V2f( -22.9894581, 24.5889778 ) )
__children["CyclesOptions"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["CyclesOptions"]["__uiPosition"].setValue( imath.V2f( 88.7361526, -22.9935131 ) )
__children["Outputs"]["in"].setInput( __children["CyclesOptions"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Batch/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/beauty/beauty.####.exr' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'exr' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( 88.7361526, -28.6575756 ) )
__children["Render"]["in"].setInput( __children["Outputs"]["out"] )
__children["Render"]["renderer"].setValue( 'Cycles' )
__children["Render"]["__uiPosition"].setValue( imath.V2f( 88.7361526, -34.5347786 ) )


del __children

