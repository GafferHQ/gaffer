import Gaffer
import GafferAppleseed
import GafferDispatch
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["SceneReader"] = GafferScene.SceneReader( "SceneReader" )
parent.addChild( __children["SceneReader"] )
__children["SceneReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InteractiveAppleseedRender"] = GafferAppleseed.InteractiveAppleseedRender( "InteractiveAppleseedRender" )
parent.addChild( __children["InteractiveAppleseedRender"] )
__children["InteractiveAppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedRender"] = GafferAppleseed.AppleseedRender( "AppleseedRender" )
parent.addChild( __children["AppleseedRender"] )
__children["AppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"] = Gaffer.Box( "Box" )
parent.addChild( __children["Box"] )
__children["Box"].addChild( GafferScene.Set( "Set" ) )
__children["Box"]["Set"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferScene.Set( "Set1" ) )
__children["Box"]["Set1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["Box"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment1" ) )
__children["Box"]["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Box"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferScene.Group( "Group" ) )
__children["Box"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "as_color_texture" ) )
__children["Box"]["as_color_texture"].loadShader( "texture2d/as_color_texture" )
__children["Box"]["as_color_texture"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "as_disney_material" ) )
__children["Box"]["as_disney_material"].loadShader( "material/as_disney_material" )
__children["Box"]["as_disney_material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "as_disney_material1" ) )
__children["Box"]["as_disney_material1"].loadShader( "material/as_disney_material" )
__children["Box"]["as_disney_material1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferAppleseed.AppleseedLight( "directional_light" ) )
__children["Box"]["directional_light"].loadShader( "directional_light" )
__children["Box"]["directional_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferScene.Camera( "Camera" ) )
__children["Box"]["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferAppleseed.AppleseedOptions( "AppleseedOptions" ) )
__children["Box"]["AppleseedOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferScene.StandardOptions( "StandardOptions" ) )
__children["Box"]["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferScene.Outputs( "Outputs" ) )
__children["Box"]["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["Box"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["Box"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Box"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Box"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SceneReader"]["__uiPosition"].setValue( imath.V2f( -26.6860752, 3.33652973 ) )
__children["InteractiveAppleseedRender"]["in"].setInput( __children["Box"]["out"] )
__children["InteractiveAppleseedRender"]["__uiPosition"].setValue( imath.V2f( -22.2700901, -86.6676941 ) )
__children["AppleseedRender"]["in"].setInput( __children["Box"]["out"] )
__children["AppleseedRender"]["fileName"].setValue( '${project:rootDirectory}/appleseeds/${script:name}/${script:name}.####.appleseed' )
__children["AppleseedRender"]["__uiPosition"].setValue( imath.V2f( -40.0083275, -86.6972198 ) )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/${script:name}' )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( -4.80829668, -86.797226 ) )
__children["Box"]["Set"]["in"].setInput( __children["Box"]["BoxIn"]["out"] )
__children["Box"]["Set"]["filter"].setInput( __children["Box"]["PathFilter"]["out"] )
__children["Box"]["Set"]["__uiPosition"].setValue( imath.V2f( -26.6860752, -4.82753277 ) )
__children["Box"]["in"].setInput( __children["SceneReader"]["out"] )
Gaffer.Metadata.registerValue( __children["Box"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Box"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Box"]["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["Box"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Box"]["in"], 'noduleLayout:spacing', 2.0 )
__children["Box"]["Set1"]["in"].setInput( __children["Box"]["Set"]["out"] )
__children["Box"]["Set1"]["filter"].setInput( __children["Box"]["PathFilter"]["out"] )
__children["Box"]["Set1"]["__uiPosition"].setValue( imath.V2f( -26.6860752, -12.9915953 ) )
__children["Box"]["ShaderAssignment"]["in"].setInput( __children["Box"]["Set1"]["out"] )
__children["Box"]["ShaderAssignment"]["filter"].setInput( __children["Box"]["PathFilter"]["out"] )
__children["Box"]["ShaderAssignment"]["shader"].setInput( __children["Box"]["as_disney_material"]["out"] )
__children["Box"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( -26.7287922, -21.1555176 ) )
__children["Box"]["ShaderAssignment1"]["in"].setInput( __children["Box"]["ShaderAssignment"]["out"] )
__children["Box"]["ShaderAssignment1"]["filter"].setInput( __children["Box"]["PathFilter"]["out"] )
__children["Box"]["ShaderAssignment1"]["shader"].setInput( __children["Box"]["as_disney_material1"]["out"] )
__children["Box"]["ShaderAssignment1"]["__uiPosition"].setValue( imath.V2f( -26.7734604, -39.6373978 ) )
__children["Box"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( -9.88607311, -1.04550147 ) )
__children["Box"]["Group"]["in"]["in0"].setInput( __children["Box"]["ShaderAssignment1"]["out"] )
__children["Box"]["Group"]["in"]["in1"].setInput( __children["Box"]["directional_light"]["out"] )
__children["Box"]["Group"]["in"]["in2"].setInput( __children["Box"]["Camera"]["out"] )
__children["Box"]["Group"]["__uiPosition"].setValue( imath.V2f( -22.2734604, -54.0114479 ) )
__children["Box"]["as_color_texture"]["__uiPosition"].setValue( imath.V2f( -70.9190292, -27.6555195 ) )
__children["Box"]["as_disney_material"]["parameters"]["BaseColor"].setInput( __children["Box"]["as_color_texture"]["out"]["ColorOut"] )
__children["Box"]["as_disney_material"]["parameters"]["BaseColor"]["r"].setInput( __children["Box"]["as_color_texture"]["out"]["ColorOut"]["r"] )
__children["Box"]["as_disney_material"]["parameters"]["BaseColor"]["g"].setInput( __children["Box"]["as_color_texture"]["out"]["ColorOut"]["g"] )
__children["Box"]["as_disney_material"]["parameters"]["BaseColor"]["b"].setInput( __children["Box"]["as_color_texture"]["out"]["ColorOut"]["b"] )
__children["Box"]["as_disney_material"]["__uiPosition"].setValue( imath.V2f( -45.3642807, -21.1555176 ) )
__children["Box"]["as_disney_material1"]["parameters"]["BaseColor"].setInput( __children["Box"]["as_color_texture"]["out"]["ColorOut"] )
__children["Box"]["as_disney_material1"]["parameters"]["BaseColor"]["r"].setInput( __children["Box"]["as_color_texture"]["out"]["ColorOut"]["r"] )
__children["Box"]["as_disney_material1"]["parameters"]["BaseColor"]["g"].setInput( __children["Box"]["as_color_texture"]["out"]["ColorOut"]["g"] )
__children["Box"]["as_disney_material1"]["parameters"]["BaseColor"]["b"].setInput( __children["Box"]["as_color_texture"]["out"]["ColorOut"]["b"] )
__children["Box"]["as_disney_material1"]["__uiPosition"].setValue( imath.V2f( -45.008812, -39.6373978 ) )
__children["Box"]["directional_light"]["__uiPosition"].setValue( imath.V2f( -1.42083836, -45.8473854 ) )
__children["Box"]["Camera"]["__uiPosition"].setValue( imath.V2f( 11.1812506, -45.8473854 ) )
__children["Box"]["AppleseedOptions"]["in"].setInput( __children["Box"]["Group"]["out"] )
__children["Box"]["AppleseedOptions"]["__uiPosition"].setValue( imath.V2f( -22.2726192, -62.1755104 ) )
__children["Box"]["StandardOptions"]["in"].setInput( __children["Box"]["AppleseedOptions"]["out"] )
__children["Box"]["StandardOptions"]["__uiPosition"].setValue( imath.V2f( -22.2717762, -70.3395691 ) )
__children["Box"]["Outputs"]["in"].setInput( __children["Box"]["StandardOptions"]["out"] )
__children["Box"]["Outputs"]["__uiPosition"].setValue( imath.V2f( -22.2709332, -78.5036316 ) )
__children["Box"]["out"].setInput( __children["Box"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Box"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Box"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["Box"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["Box"]["BoxIn"]["__in"].setInput( __children["Box"]["in"] )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["Box"]["BoxOut"]["in"].setInput( __children["Box"]["Outputs"]["out"] )
__children["Box"]["__uiPosition"].setValue( imath.V2f( -25.1860752, -53.6730042 ) )


del __children
