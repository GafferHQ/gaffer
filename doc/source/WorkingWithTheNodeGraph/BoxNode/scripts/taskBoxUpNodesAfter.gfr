import Gaffer
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_disney_material"] = GafferOSL.OSLShader( "as_disney_material" )
parent.addChild( __children["as_disney_material"] )
__children["as_disney_material"].loadShader( "material/as_disney_material" )
__children["as_disney_material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CustomAttributes"] = GafferScene.CustomAttributes( "CustomAttributes" )
parent.addChild( __children["CustomAttributes"] )
__children["CustomAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_color_texture"] = GafferOSL.OSLShader( "as_color_texture" )
parent.addChild( __children["as_color_texture"] )
__children["as_color_texture"].loadShader( "texture2d/as_color_texture" )
__children["as_color_texture"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Transform"] = GafferScene.Transform( "Transform" )
parent.addChild( __children["Transform"] )
__children["Transform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.FilterPlug( "out", defaultValue = 7, minValue = 0, maxValue = 7, ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn1"] = Gaffer.BoxIn( "BoxIn1" )
parent.addChild( __children["BoxIn1"] )
__children["BoxIn1"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"]["in"].setInput( __children["CustomAttributes"]["out"] )
__children["ShaderAssignment"]["filter"].setInput( __children["BoxIn"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["as_disney_material"]["out"] )
__children["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( -3.8758955, 3.61751962 ) )
__children["as_disney_material"]["parameters"]["BaseColor"].setInput( __children["as_color_texture"]["out"]["ColorOut"] )
__children["as_disney_material"]["parameters"]["BaseColor"]["r"].setInput( __children["as_color_texture"]["out"]["ColorOut"]["r"] )
__children["as_disney_material"]["parameters"]["BaseColor"]["g"].setInput( __children["as_color_texture"]["out"]["ColorOut"]["g"] )
__children["as_disney_material"]["parameters"]["BaseColor"]["b"].setInput( __children["as_color_texture"]["out"]["ColorOut"]["b"] )
__children["as_disney_material"]["__uiPosition"].setValue( imath.V2f( -21.4308262, 3.61662579 ) )
__children["CustomAttributes"]["in"].setInput( __children["Transform"]["out"] )
__children["CustomAttributes"]["filter"].setInput( __children["BoxIn"]["out"] )
__children["CustomAttributes"]["__uiPosition"].setValue( imath.V2f( -3.8758955, 11.7815819 ) )
__children["as_color_texture"]["__uiPosition"].setValue( imath.V2f( -36.6341934, 7.21662617 ) )
__children["Transform"]["in"].setInput( __children["BoxIn1"]["out"] )
__children["Transform"]["filter"].setInput( __children["BoxIn"]["out"] )
__children["Transform"]["__uiPosition"].setValue( imath.V2f( -3.8758955, 19.8833752 ) )
__children["BoxOut"]["in"].setInput( __children["ShaderAssignment"]["out"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -2.37524152, -4.71451187 ) )
__children["BoxIn"]["name"].setValue( 'filter' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The filter used to control which parts of the scene are\nprocessed. A Filter node should be connected here.' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', 'GafferSceneUI.FilterPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 10.7095337, 11.7608242 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -3.87516642, 28.2154064 ) )

del __children
