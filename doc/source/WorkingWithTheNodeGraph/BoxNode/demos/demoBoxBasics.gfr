import Gaffer
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["Cube"] = GafferScene.Cube( "Cube" )
parent.addChild( __children["Cube"] )
__children["Cube"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"] = Gaffer.Box( "ScaleScene" )
parent.addChild( __children["ScaleScene"] )
__children["ScaleScene"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["ScaleScene"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["ScaleScene"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( GafferScene.Transform( "SmallTransform" ) )
__children["ScaleScene"]["SmallTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( GafferScene.Transform( "MediumTransform" ) )
__children["ScaleScene"]["MediumTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( Gaffer.BoxIn( "BoxIn1" ) )
__children["ScaleScene"]["BoxIn1"].setup( GafferScene.FilterPlug( "out", defaultValue = 0, minValue = 0, maxValue = 7, ) )
__children["ScaleScene"]["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"]["BoxIn1"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( GafferScene.FilterPlug( "filter", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( GafferScene.Transform( "BigTransform" ) )
__children["ScaleScene"]["BigTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( Gaffer.Switch( "Switch" ) )
__children["ScaleScene"]["Switch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"]["Switch"].addChild( Gaffer.ArrayPlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"]["Switch"]["in"].addChild( GafferScene.ScenePlug( "in0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"]["Switch"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"]["Switch"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"]["Switch"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"]["Switch"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"]["Switch"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["ScaleScene"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["ScaleScene"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( Gaffer.IntPlug( "scale", defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( GafferScene.Transform( "CustomTransform" ) )
__children["ScaleScene"]["CustomTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( Gaffer.V3fPlug( "custom_scale", defaultValue = imath.V3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ScaleScene"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cube"]["__uiPosition"].setValue( imath.V2f( 0.997555733, 3.31601286 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"], 'description', 'Scales up the provided scene. Connect a filter plug to select one or more locations from the provided scene.\n<ul>\n<li>Select a preset scale the <em>Scale</em> menu, or choose <em>Custom</em>.</li>\n<li>Set the <em>Custom Scale</em> plug for a user-defined scale.\n<li>Optional: Drive the <em>custom_scale</em> plug on the left side of the Box with a V3f plug.</li>\n</ul>\n\n' )
Gaffer.Metadata.registerValue( __children["ScaleScene"], 'nodeGadget:color', imath.Color3f( 0.540000021, 0.449999988, 0.224999994 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
__children["ScaleScene"]["__uiPosition"].setValue( imath.V2f( 2.49755573, -5.01601839 ) )
__children["ScaleScene"]["BoxIn"]["__in"].setInput( __children["ScaleScene"]["in"] )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxIn"]["__in"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxIn"]["__in"], 'description', 'The output scene.' )
__children["ScaleScene"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 5.09310293, 2.16231918 ) )
__children["ScaleScene"]["in"].setInput( __children["Cube"]["out"] )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["in"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["in"], 'description', 'The output scene.' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["in"], 'layout:index', 0 )
__children["ScaleScene"]["SmallTransform"]["in"].setInput( __children["ScaleScene"]["BoxIn"]["out"] )
__children["ScaleScene"]["SmallTransform"]["filter"].setInput( __children["ScaleScene"]["BoxIn1"]["out"] )
__children["ScaleScene"]["SmallTransform"]["transform"]["scale"]["x"].setValue( 2.0 )
__children["ScaleScene"]["SmallTransform"]["transform"]["scale"]["y"].setInput( __children["ScaleScene"]["SmallTransform"]["transform"]["scale"]["x"] )
__children["ScaleScene"]["SmallTransform"]["transform"]["scale"]["z"].setInput( __children["ScaleScene"]["SmallTransform"]["transform"]["scale"]["x"] )
__children["ScaleScene"]["SmallTransform"]["__uiPosition"].setValue( imath.V2f( -16.5543385, -14.7431154 ) )
__children["ScaleScene"]["MediumTransform"]["in"].setInput( __children["ScaleScene"]["BoxIn"]["out"] )
__children["ScaleScene"]["MediumTransform"]["filter"].setInput( __children["ScaleScene"]["BoxIn1"]["out"] )
__children["ScaleScene"]["MediumTransform"]["transform"]["scale"]["x"].setValue( 4.0 )
__children["ScaleScene"]["MediumTransform"]["transform"]["scale"]["y"].setInput( __children["ScaleScene"]["MediumTransform"]["transform"]["scale"]["x"] )
__children["ScaleScene"]["MediumTransform"]["transform"]["scale"]["z"].setInput( __children["ScaleScene"]["MediumTransform"]["transform"]["scale"]["x"] )
__children["ScaleScene"]["MediumTransform"]["__uiPosition"].setValue( imath.V2f( -2.20962644, -14.7431154 ) )
__children["ScaleScene"]["BoxIn1"]["name"].setValue( 'filter' )
__children["ScaleScene"]["BoxIn1"]["__in"].setInput( __children["ScaleScene"]["filter"] )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.540000021, 0.230000004 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxIn1"]["__in"], 'connectionGadget:color', None )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxIn1"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxIn1"]["__in"], 'description', 'The filter used to control which parts of the scene are\nprocessed. A Filter node should be connected here.' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxIn1"]["__in"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxIn1"]["__in"], 'plugValueWidget:type', 'GafferSceneUI.FilterPlugValueWidget' )
__children["ScaleScene"]["BoxIn1"]["__uiPosition"].setValue( imath.V2f( 48.7254868, -3.9499383 ) )
__children["ScaleScene"]["BoxIn1"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["ScaleScene"]["filter"].setInput( __children["PathFilter"]["out"] )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["filter"], 'nodule:color', imath.Color3f( 0.689999998, 0.540000021, 0.230000004 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["filter"], 'connectionGadget:color', None )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["filter"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["filter"], 'description', 'The filter used to control which parts of the scene are\nprocessed. A Filter node should be connected here.' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["filter"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["filter"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["filter"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["filter"], 'layout:index', 2 )
__children["ScaleScene"]["BigTransform"]["in"].setInput( __children["ScaleScene"]["BoxIn"]["out"] )
__children["ScaleScene"]["BigTransform"]["filter"].setInput( __children["ScaleScene"]["BoxIn1"]["out"] )
__children["ScaleScene"]["BigTransform"]["transform"]["scale"]["x"].setValue( 8.0 )
__children["ScaleScene"]["BigTransform"]["transform"]["scale"]["y"].setInput( __children["ScaleScene"]["BigTransform"]["transform"]["scale"]["x"] )
__children["ScaleScene"]["BigTransform"]["transform"]["scale"]["z"].setInput( __children["ScaleScene"]["BigTransform"]["transform"]["scale"]["x"] )
__children["ScaleScene"]["BigTransform"]["__uiPosition"].setValue( imath.V2f( 11.7985449, -14.7431154 ) )
__children["ScaleScene"]["Switch"]["index"].setInput( __children["ScaleScene"]["scale"] )
__children["ScaleScene"]["Switch"]["__uiPosition"].setValue( imath.V2f( 5.0829525, -29.0331764 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["Switch"]["in"], 'noduleLayout:section', 'top' )
__children["ScaleScene"]["Switch"]["in"]["in0"].setInput( __children["ScaleScene"]["SmallTransform"]["out"] )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["Switch"]["in"]["in0"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["Switch"]["in"]["in0"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["ScaleScene"]["Switch"]["in"]["in1"].setInput( __children["ScaleScene"]["MediumTransform"]["out"] )
__children["ScaleScene"]["Switch"]["in"]["in2"].setInput( __children["ScaleScene"]["BigTransform"]["out"] )
__children["ScaleScene"]["Switch"]["in"]["in3"].setInput( __children["ScaleScene"]["CustomTransform"]["out"] )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["Switch"]["in"]["in4"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["Switch"]["in"]["in4"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["ScaleScene"]["Switch"]["out"].setInput( __children["ScaleScene"]["Switch"]["in"]["in0"] )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["Switch"]["out"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["Switch"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["Switch"]["out"], 'noduleLayout:section', 'bottom' )
__children["ScaleScene"]["BoxOut"]["in"].setInput( __children["ScaleScene"]["Switch"]["out"] )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
__children["ScaleScene"]["BoxOut"]["passThrough"].setInput( __children["ScaleScene"]["BoxIn"]["out"] )
__children["ScaleScene"]["BoxOut"]["enabled"].setInput( __children["ScaleScene"]["enabled"] )
__children["ScaleScene"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 6.5829525, -42.4089699 ) )
__children["ScaleScene"]["out"].setInput( __children["ScaleScene"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["out"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["out"], 'description', 'Outputs the input specified by the index.' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'nodule:color', imath.Color3f( 0.409999996, 0.939999998, 0.75999999 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'connectionGadget:color', None )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'description', 'The index of the input which is passed through. A value\nof 0 chooses the first input, 1 the second and so on. Values\nlarger than the number of available inputs wrap back around to\nthe beginning.' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'label', 'Scale' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'preset:2x', 0 )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'preset:4x', 1 )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'preset:8x', 2 )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["scale"], 'preset:Custom', 3 )
__children["ScaleScene"]["CustomTransform"]["in"].setInput( __children["ScaleScene"]["BoxIn"]["out"] )
__children["ScaleScene"]["CustomTransform"]["filter"].setInput( __children["ScaleScene"]["BoxIn1"]["out"] )
__children["ScaleScene"]["CustomTransform"]["transform"]["scale"].setInput( __children["ScaleScene"]["custom_scale"] )
__children["ScaleScene"]["CustomTransform"]["transform"]["scale"]["x"].setInput( __children["ScaleScene"]["custom_scale"]["x"] )
__children["ScaleScene"]["CustomTransform"]["transform"]["scale"]["y"].setInput( __children["ScaleScene"]["custom_scale"]["y"] )
__children["ScaleScene"]["CustomTransform"]["transform"]["scale"]["z"].setInput( __children["ScaleScene"]["custom_scale"]["z"] )
__children["ScaleScene"]["CustomTransform"]["__uiPosition"].setValue( imath.V2f( 25.5044994, -14.7431154 ) )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["custom_scale"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["custom_scale"], 'label', 'Custom scale' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["custom_scale"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ScaleScene"]["custom_scale"], 'layout:index', 4 )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/cube' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 16.6021118, -0.451083541 ) )
__children["Backdrop"]["title"].setValue( 'Demo: Box Node Basics' )
__children["Backdrop"]["scale"].setValue( 1.25 )
__children["Backdrop"]["description"].setValue( "This is a basic Box that takes a scene and scales it based on a plug set on the Box itself. See the Box's tooltip for instructions on how to use. \n\nSome things to note:\n\n- For best practices, the filter (required by the Transform nodes) is managed outside of the Box.\n- The value of the custom scale can be driven by any V3f plug, and connected directly to the Box.\n- The Box has a custom UI: custom node color, tool-tip, plug positions in the Graph Editor, and plug interface in the Node Editor.\n" )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -20.3000069, -30.0480652 ), imath.V2f( 16.7000027, 10 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -31.1432953, -4.18365002 ) )

del __children
