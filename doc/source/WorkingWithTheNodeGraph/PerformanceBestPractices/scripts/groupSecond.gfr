import Gaffer
import GafferScene
import IECore

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 23, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 2, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AssetA"] = GafferScene.SceneReader( "AssetA" )
parent.addChild( __children["AssetA"] )
__children["AssetA"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AssetA"]["__uiPosition"].setValue( IECore.V2f( -28.1435509, -1.49142623 ) )
__children["AssetB"] = GafferScene.SceneReader( "AssetB" )
parent.addChild( __children["AssetB"] )
__children["AssetB"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AssetB"]["__uiPosition"].setValue( IECore.V2f( -15.1435509, -1.49599874 ) )
__children["AssetB"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AssetC"] = GafferScene.SceneReader( "AssetC" )
parent.addChild( __children["AssetC"] )
__children["AssetC"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AssetC"]["__uiPosition"].setValue( IECore.V2f( -2.14355111, -1.49604273 ) )
__children["AssetC"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AssetD"] = GafferScene.SceneReader( "AssetD" )
parent.addChild( __children["AssetD"] )
__children["AssetD"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AssetD"]["__uiPosition"].setValue( IECore.V2f( 10.8564491, -1.49606276 ) )
__children["AssetD"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["__uiPosition"].setValue( IECore.V2f( -7.14355564, -19.8241882 ) )
__children["LookDevA"] = Gaffer.Box( "LookDevA" )
parent.addChild( __children["LookDevA"] )
__children["LookDevA"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevA"]["__uiPosition"].setValue( IECore.V2f( -28.142334, -10.6573343 ) )
__children["LookDevA"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevA"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevA"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevA"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["LookDevA"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevA"]["ShaderAssignment"]["__uiPosition"].setValue( IECore.V2f( 19.6385956, -14.1900845 ) )
__children["LookDevB"] = Gaffer.Box( "LookDevB" )
parent.addChild( __children["LookDevB"] )
__children["LookDevB"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevB"]["__uiPosition"].setValue( IECore.V2f( -15.1435547, -10.6600609 ) )
__children["LookDevB"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevB"].addChild( Gaffer.V2fPlug( "__uiPosition2", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevB"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevB"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevB"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["LookDevB"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevB"]["ShaderAssignment"]["__uiPosition"].setValue( IECore.V2f( 19.6385956, -14.1900845 ) )
__children["LookDevC"] = Gaffer.Box( "LookDevC" )
parent.addChild( __children["LookDevC"] )
__children["LookDevC"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevC"]["__uiPosition"].setValue( IECore.V2f( -2.14416575, -10.6601048 ) )
__children["LookDevC"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevC"].addChild( Gaffer.V2fPlug( "__uiPosition2", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevC"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevC"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevC"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["LookDevC"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevC"]["ShaderAssignment"]["__uiPosition"].setValue( IECore.V2f( 19.6385956, -14.1900845 ) )
__children["LookDevD"] = Gaffer.Box( "LookDevD" )
parent.addChild( __children["LookDevD"] )
__children["LookDevD"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevD"]["__uiPosition"].setValue( IECore.V2f( 10.855835, -10.6601248 ) )
__children["LookDevD"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevD"].addChild( Gaffer.V2fPlug( "__uiPosition2", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevD"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevD"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevD"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["LookDevD"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LookDevD"]["ShaderAssignment"]["__uiPosition"].setValue( IECore.V2f( 19.6385956, -14.1900845 ) )
parent["variables"]["projectName"]["name"].setFlags( Gaffer.Plug.Flags.ReadOnly, True )
parent["variables"]["projectRootDirectory"]["name"].setFlags( Gaffer.Plug.Flags.ReadOnly, True )
__children["Group"]["in"]["in0"].setInput( __children["LookDevA"]["out"] )
__children["Group"]["in"]["in1"].setInput( __children["LookDevB"]["out"] )
__children["Group"]["in"]["in2"].setInput( __children["LookDevC"]["out"] )
__children["Group"]["in"]["in3"].setInput( __children["LookDevD"]["out"] )
__children["LookDevA"]["out"].setInput( __children["LookDevA"]["ShaderAssignment"]["out"] )
Gaffer.Metadata.registerPlugValue( __children["LookDevA"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerPlugValue( __children["LookDevA"]["out"], 'nodule:color', IECore.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerPlugValue( __children["LookDevA"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["LookDevA"]["in"].setInput( __children["AssetA"]["out"] )
Gaffer.Metadata.registerPlugValue( __children["LookDevA"]["in"], 'nodule:color', IECore.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerPlugValue( __children["LookDevA"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerPlugValue( __children["LookDevA"]["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerPlugValue( __children["LookDevA"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerPlugValue( __children["LookDevA"]["in"], 'compoundNodule:spacing', 2.0 )
__children["LookDevA"]["ShaderAssignment"]["in"].setInput( __children["LookDevA"]["in"] )
__children["LookDevB"]["out"].setInput( __children["LookDevB"]["ShaderAssignment"]["out"] )
Gaffer.Metadata.registerPlugValue( __children["LookDevB"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerPlugValue( __children["LookDevB"]["out"], 'nodule:color', IECore.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerPlugValue( __children["LookDevB"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["LookDevB"]["in"].setInput( __children["AssetB"]["out"] )
Gaffer.Metadata.registerPlugValue( __children["LookDevB"]["in"], 'nodule:color', IECore.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerPlugValue( __children["LookDevB"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerPlugValue( __children["LookDevB"]["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerPlugValue( __children["LookDevB"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerPlugValue( __children["LookDevB"]["in"], 'compoundNodule:spacing', 2.0 )
__children["LookDevB"]["ShaderAssignment"]["in"].setInput( __children["LookDevB"]["in"] )
__children["LookDevC"]["out"].setInput( __children["LookDevC"]["ShaderAssignment"]["out"] )
Gaffer.Metadata.registerPlugValue( __children["LookDevC"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerPlugValue( __children["LookDevC"]["out"], 'nodule:color', IECore.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerPlugValue( __children["LookDevC"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["LookDevC"]["in"].setInput( __children["AssetC"]["out"] )
Gaffer.Metadata.registerPlugValue( __children["LookDevC"]["in"], 'nodule:color', IECore.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerPlugValue( __children["LookDevC"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerPlugValue( __children["LookDevC"]["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerPlugValue( __children["LookDevC"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerPlugValue( __children["LookDevC"]["in"], 'compoundNodule:spacing', 2.0 )
__children["LookDevC"]["ShaderAssignment"]["in"].setInput( __children["LookDevC"]["in"] )
__children["LookDevD"]["out"].setInput( __children["LookDevD"]["ShaderAssignment"]["out"] )
Gaffer.Metadata.registerPlugValue( __children["LookDevD"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerPlugValue( __children["LookDevD"]["out"], 'nodule:color', IECore.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerPlugValue( __children["LookDevD"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["LookDevD"]["in"].setInput( __children["AssetD"]["out"] )
Gaffer.Metadata.registerPlugValue( __children["LookDevD"]["in"], 'nodule:color', IECore.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerPlugValue( __children["LookDevD"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerPlugValue( __children["LookDevD"]["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerPlugValue( __children["LookDevD"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerPlugValue( __children["LookDevD"]["in"], 'compoundNodule:spacing', 2.0 )
__children["LookDevD"]["ShaderAssignment"]["in"].setInput( __children["LookDevD"]["in"] )


del __children

