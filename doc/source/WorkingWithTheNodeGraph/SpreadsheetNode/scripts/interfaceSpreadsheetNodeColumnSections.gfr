import Gaffer
import GafferCycles
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 56, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["Spreadsheet"] = Gaffer.Spreadsheet( "Spreadsheet" )
parent.addChild( __children["Spreadsheet"] )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.NameValuePlug( "as:cfg:adaptive_tile_renderer:max_samples", Gaffer.IntPlug( "value", defaultValue = 32, ), False, "samples", Gaffer.Plug.Flags.Default ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.NameValuePlug( "as:cfg:pt:max_bounces", Gaffer.IntPlug( "value", defaultValue = -1, ), False, "maxBounce", Gaffer.Plug.Flags.Default ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.NameValuePlug( "render:camera", Gaffer.StringPlug( "value", defaultValue = '', ), False, "renderCamera", Gaffer.Plug.Flags.Default ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.FloatPlug( "exposure", defaultValue = 0.0, minValue = -64.0, maxValue = 64.0, ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.V3fPlug( "translate", defaultValue = imath.V3f( 0, 0, 0 ), ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.FloatPlug( "exposure1", defaultValue = 0.0, minValue = -64.0, maxValue = 64.0, ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.V3fPlug( "translate1", defaultValue = imath.V3f( 0, 0, 0 ), ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.NameValuePlug( "render:transformBlur", Gaffer.BoolPlug( "value", defaultValue = False, ), False, "transformBlur", Gaffer.Plug.Flags.Default ) )
__children["Spreadsheet"]["rows"].addRows( 3 )
__children["Spreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light"] = GafferCycles.CyclesLight( "point_light" )
parent.addChild( __children["point_light"] )
__children["point_light"].loadShader( "point_light" )
__children["point_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CyclesOptions"] = GafferCycles.CyclesOptions( "CyclesOptions" )
parent.addChild( __children["CyclesOptions"] )
__children["CyclesOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light1"] = GafferCycles.CyclesLight( "point_light1" )
parent.addChild( __children["point_light1"] )
__children["point_light1"].loadShader( "point_light" )
__children["point_light1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"], 'nodeGadget:type', 'GafferUI::AuxiliaryNodeGadget' )
__children["Spreadsheet"]["selector"].setValue( '${shot}' )
__children["Spreadsheet"]["rows"][0]["cells"]["renderCamera"]["value"]["value"].setValue( '/cameraDefault' )
__children["Spreadsheet"]["rows"][0]["cells"]["renderCamera"]["value"]["enabled"].setValue( True )
__children["Spreadsheet"]["rows"][1]["name"].setValue( '1' )
__children["Spreadsheet"]["rows"][1]["cells"]["renderCamera"]["value"]["value"].setValue( '/camera1' )
__children["Spreadsheet"]["rows"][1]["cells"]["renderCamera"]["value"]["enabled"].setValue( True )
__children["Spreadsheet"]["rows"][1]["cells"]["exposure"]["value"].setValue( 4.5 )
__children["Spreadsheet"]["rows"][1]["cells"]["translate"]["value"].setValue( imath.V3f( 0.119999997, 0.670000017, 0.100000001 ) )
__children["Spreadsheet"]["rows"][1]["cells"]["exposure1"]["value"].setValue( 3.0 )
__children["Spreadsheet"]["rows"][1]["cells"]["translate1"]["value"].setValue( imath.V3f( 0.360000014, 0.819999993, 0.980000019 ) )
__children["Spreadsheet"]["rows"][2]["name"].setValue( '2' )
__children["Spreadsheet"]["rows"][2]["cells"]["renderCamera"]["value"]["value"].setValue( '/camera1' )
__children["Spreadsheet"]["rows"][2]["cells"]["renderCamera"]["value"]["enabled"].setValue( True )
__children["Spreadsheet"]["rows"][2]["cells"]["exposure"]["value"].setValue( 6.300000190734863 )
__children["Spreadsheet"]["rows"][2]["cells"]["translate"]["value"].setValue( imath.V3f( 0, 0.400000006, 0 ) )
__children["Spreadsheet"]["rows"][2]["cells"]["exposure1"]["value"].setValue( 2.0 )
__children["Spreadsheet"]["rows"][3]["name"].setValue( '3' )
__children["Spreadsheet"]["rows"][3]["cells"]["renderCamera"]["value"]["value"].setValue( '/camera2' )
__children["Spreadsheet"]["rows"][3]["cells"]["renderCamera"]["value"]["enabled"].setValue( True )
__children["Spreadsheet"]["rows"][3]["cells"]["exposure"]["value"].setValue( 2.0 )
__children["Spreadsheet"]["rows"][3]["cells"]["exposure1"]["value"].setValue( 12.0 )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"], 'spreadsheet:section:Renderer:index', 1 )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"], 'spreadsheet:section:Camera:index', 2 )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"], 'spreadsheet:section:Lights:index', 0 )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"], 'spreadsheet:section:Other:index', 3 )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["samples"], 'spreadsheet:section', 'Renderer' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["samples"], 'spreadsheet:columnIndex', 0 )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["samples"], 'spreadsheet:columnLabel', 'Samples' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["samples"]["value"], 'description', 'Maximum number of anti-aliasing samples (0 for unlimited)' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["samples"]["value"], 'label', 'Max Samples' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["maxBounce"], 'spreadsheet:section', 'Renderer' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["maxBounce"], 'spreadsheet:columnLabel', 'Max Bounce' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["maxBounce"], 'spreadsheet:columnIndex', 3 )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["maxBounce"]["value"], 'description', 'Maximum number of bounces.If set to a negative number, use an unlimited number of bounces' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["maxBounce"]["value"], 'label', 'Max Bounces' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderCamera"], 'spreadsheet:section', 'Camera' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderCamera"], 'spreadsheet:columnLabel', 'Camera' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderCamera"]["value"], 'description', 'The primary camera to be used for rendering. If this\nis not specified, then a default orthographic camera\npositioned at the origin is used.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderCamera"]["value"], 'label', 'Camera' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'plugValueWidget:type', 'GafferSceneUI.ScenePathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'path:valid', True )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'scenePathPlugValueWidget:setNames', IECore.StringVectorData( [ '__cameras' ] ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'scenePathPlugValueWidget:setsLabel', 'Show only cameras' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure"], 'spreadsheet:section', 'Lights' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure"], 'spreadsheet:columnLabel', 'Window Exposure' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'description', 'Light exposure' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'label', 'Exposure' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate"], 'spreadsheet:section', 'Lights' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate"], 'spreadsheet:columnLabel', 'Window Translate' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate"]["value"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate"]["value"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate"]["value"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate"]["value"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure1"], 'spreadsheet:section', 'Lights' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure1"], 'spreadsheet:columnLabel', 'Lamp Exposure' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure1"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure1"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure1"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure1"]["value"], 'description', 'Light exposure' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["exposure1"]["value"], 'label', 'Exposure' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate1"], 'spreadsheet:section', 'Lights' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate1"], 'spreadsheet:columnLabel', 'Lamp Translate' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate1"]["value"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate1"]["value"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate1"]["value"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["translate1"]["value"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["transformBlur"]["value"], 'description', 'Whether or not transform motion is taken into\naccount in the renderered image. To specify the\nnumber of transform segments to use for each\nobject in the scene, use a StandardAttributes node\nwith appropriate filters.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["transformBlur"]["value"], 'label', 'Transform' )
__children["Spreadsheet"]["__uiPosition"].setValue( imath.V2f( 14.7354708, 8.14100552 ) )
__children["point_light"]["transform"]["translate"].setInput( __children["Spreadsheet"]["out"]["translate"] )
__children["point_light"]["transform"]["translate"]["x"].setInput( __children["Spreadsheet"]["out"]["translate"]["x"] )
__children["point_light"]["transform"]["translate"]["y"].setInput( __children["Spreadsheet"]["out"]["translate"]["y"] )
__children["point_light"]["transform"]["translate"]["z"].setInput( __children["Spreadsheet"]["out"]["translate"]["z"] )
__children["point_light"]["parameters"]["exposure"].setInput( __children["Spreadsheet"]["out"]["exposure"] )
__children["point_light"]["__uiPosition"].setValue( imath.V2f( 33.8499985, 7 ) )
__children["CyclesOptions"]["options"]["samples"].setInput( __children["Spreadsheet"]["out"]["samples"] )
__children["CyclesOptions"]["options"]["samples"]["name"].setInput( __children["Spreadsheet"]["out"]["samples"]["name"] )
__children["CyclesOptions"]["options"]["samples"]["value"].setInput( __children["Spreadsheet"]["out"]["samples"]["value"] )
__children["CyclesOptions"]["options"]["samples"]["enabled"].setInput( __children["Spreadsheet"]["out"]["samples"]["enabled"] )
__children["CyclesOptions"]["options"]["maxBounce"].setInput( __children["Spreadsheet"]["out"]["maxBounce"] )
__children["CyclesOptions"]["options"]["maxBounce"]["name"].setInput( __children["Spreadsheet"]["out"]["maxBounce"]["name"] )
__children["CyclesOptions"]["options"]["maxBounce"]["value"].setInput( __children["Spreadsheet"]["out"]["maxBounce"]["value"] )
__children["CyclesOptions"]["options"]["maxBounce"]["enabled"].setInput( __children["Spreadsheet"]["out"]["maxBounce"]["enabled"] )
__children["CyclesOptions"]["__uiPosition"].setValue( imath.V2f( 19.9500027, 13.7000017 ) )
__children["StandardOptions"]["options"]["render:camera"].setInput( __children["Spreadsheet"]["out"]["renderCamera"] )
__children["StandardOptions"]["options"]["render:camera"]["name"].setInput( __children["Spreadsheet"]["out"]["renderCamera"]["name"] )
__children["StandardOptions"]["options"]["render:camera"]["value"].setInput( __children["Spreadsheet"]["out"]["renderCamera"]["value"] )
__children["StandardOptions"]["options"]["render:camera"]["enabled"].setInput( __children["Spreadsheet"]["out"]["renderCamera"]["enabled"] )
__children["StandardOptions"]["options"]["render:transformBlur"].setInput( __children["Spreadsheet"]["out"]["transformBlur"] )
__children["StandardOptions"]["options"]["render:transformBlur"]["name"].setInput( __children["Spreadsheet"]["out"]["transformBlur"]["name"] )
__children["StandardOptions"]["options"]["render:transformBlur"]["value"].setInput( __children["Spreadsheet"]["out"]["transformBlur"]["value"] )
__children["StandardOptions"]["options"]["render:transformBlur"]["enabled"].setInput( __children["Spreadsheet"]["out"]["transformBlur"]["enabled"] )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 7.12685442, -3.89999914 ) )
__children["point_light1"]["transform"]["translate"].setInput( __children["Spreadsheet"]["out"]["translate1"] )
__children["point_light1"]["transform"]["translate"]["x"].setInput( __children["Spreadsheet"]["out"]["translate1"]["x"] )
__children["point_light1"]["transform"]["translate"]["y"].setInput( __children["Spreadsheet"]["out"]["translate1"]["y"] )
__children["point_light1"]["transform"]["translate"]["z"].setInput( __children["Spreadsheet"]["out"]["translate1"]["z"] )
__children["point_light1"]["parameters"]["exposure"].setInput( __children["Spreadsheet"]["out"]["exposure1"] )
__children["point_light1"]["__uiPosition"].setValue( imath.V2f( 20.8499985, 1.60000134 ) )


del __children

