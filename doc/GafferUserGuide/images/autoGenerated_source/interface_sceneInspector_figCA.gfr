import Gaffer
import GafferImage
import GafferRenderMan
import GafferScene
import IECore

__children = {}

parent["frameRange"]["start"].setValue( 1 )
parent["frameRange"]["end"].setValue( 100 )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
parent["variables"]["projectName"]["name"].setValue( 'project:name' )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
parent["variables"]["projectName"]["value"].setValue( 'default' )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
parent["variables"]["projectRootDirectory"]["name"].setValue( 'project:rootDirectory' )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
parent["variables"]["projectRootDirectory"]["value"].setValue( '$HOME/gaffer/projects/${project:name}' )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, )
parent.addChild( __children["defaultFormat"] )
GafferImage.Format.registerFormat( GafferImage.Format( IECore.Box2i( IECore.V2i( 0, 0 ), IECore.V2i( 1023, 777 ) ), 1.000 ), "1K Super 35 (full-ap) 1024x778 1" )
GafferImage.Format.registerFormat( GafferImage.Format( IECore.Box2i( IECore.V2i( 0, 0 ), IECore.V2i( 2047, 1555 ) ), 1.000 ), "2K Super 35 (full-ap) 2048x1556 1" )
GafferImage.Format.registerFormat( GafferImage.Format( IECore.Box2i( IECore.V2i( 0, 0 ), IECore.V2i( 4095, 3111 ) ), 1.000 ), "4K Super 35 (full-ap) 4096x3112 1" )
GafferImage.Format.registerFormat( GafferImage.Format( IECore.Box2i( IECore.V2i( 0, 0 ), IECore.V2i( 1919, 1079 ) ), 1.000 ), "HD (1920x1080) 1920x1080 1" )
GafferImage.Format.registerFormat( GafferImage.Format( IECore.Box2i( IECore.V2i( 0, 0 ), IECore.V2i( 639, 479 ) ), 1.000 ), "PC Video (640x480) 640x480 1" )
__children["defaultFormat"].setValue( GafferImage.Format( IECore.Box2i( IECore.V2i( 0, 0 ), IECore.V2i( 1919, 1079 ) ), 1.000 ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"]["enabled"].setValue( True )
__children["Camera"]["name"].setValue( 'camera' )
__children["Camera"]["transform"]["translate"]["x"].setValue( 0.0 )
__children["Camera"]["transform"]["translate"]["y"].setValue( 5.0 )
__children["Camera"]["transform"]["translate"]["z"].setValue( 15.0 )
__children["Camera"]["transform"]["rotate"]["x"].setValue( -19.1299991607666 )
__children["Camera"]["transform"]["rotate"]["y"].setValue( 0.0 )
__children["Camera"]["transform"]["rotate"]["z"].setValue( 0.0 )
__children["Camera"]["transform"]["scale"]["x"].setValue( 1.0 )
__children["Camera"]["transform"]["scale"]["y"].setValue( 1.0 )
__children["Camera"]["transform"]["scale"]["z"].setValue( 1.0 )
__children["Camera"]["projection"].setValue( 'perspective' )
__children["Camera"]["fieldOfView"].setValue( 25.0 )
__children["Camera"]["clippingPlanes"]["x"].setValue( 0.009999999776482582 )
__children["Camera"]["clippingPlanes"]["y"].setValue( 100000.0 )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Camera"]["__uiPosition"]["x"].setValue( -0.9475593566894531 )
__children["Camera"]["__uiPosition"]["y"].setValue( 9.526983261108398 )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Camera"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["Camera"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["ShaderAssignmentA"] = GafferScene.ShaderAssignment( "ShaderAssignmentA" )
parent.addChild( __children["ShaderAssignmentA"] )
__children["ShaderAssignmentA"]["enabled"].setValue( True )
__children["ShaderAssignmentA"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["ShaderAssignmentA"]["__uiPosition"]["x"].setValue( 16.874876022338867 )
__children["ShaderAssignmentA"]["__uiPosition"]["y"].setValue( -13.302556991577148 )
__children["ShaderAssignmentA"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["ShaderAssignmentA"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["ShaderAssignmentA"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["ShaderAssignmentB"] = GafferScene.ShaderAssignment( "ShaderAssignmentB" )
parent.addChild( __children["ShaderAssignmentB"] )
__children["ShaderAssignmentB"]["enabled"].setValue( True )
__children["ShaderAssignmentB"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["ShaderAssignmentB"]["__uiPosition"]["x"].setValue( 16.874876022338867 )
__children["ShaderAssignmentB"]["__uiPosition"]["y"].setValue( -32.73320007324219 )
__children["ShaderAssignmentB"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["ShaderAssignmentB"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["ShaderAssignmentB"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["pointlight"] = GafferRenderMan.RenderManLight( "pointlight" )
parent.addChild( __children["pointlight"] )
__children["pointlight"]["enabled"].setValue( True )
__children["pointlight"]["name"].setValue( 'light' )
__children["pointlight"]["transform"]["translate"]["x"].setValue( -2.5 )
__children["pointlight"]["transform"]["translate"]["y"].setValue( 4.5 )
__children["pointlight"]["transform"]["translate"]["z"].setValue( 2.5 )
__children["pointlight"]["transform"]["rotate"]["x"].setValue( 0.0 )
__children["pointlight"]["transform"]["rotate"]["y"].setValue( 0.0 )
__children["pointlight"]["transform"]["rotate"]["z"].setValue( 0.0 )
__children["pointlight"]["transform"]["scale"]["x"].setValue( 1.0 )
__children["pointlight"]["transform"]["scale"]["y"].setValue( 1.0 )
__children["pointlight"]["transform"]["scale"]["z"].setValue( 1.0 )
__children["pointlight"]["parameters"].addChild( Gaffer.FloatPlug( "intensity", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["parameters"]["intensity"].setValue( 1.0 )
__children["pointlight"]["parameters"].addChild( Gaffer.Color3fPlug( "lightcolor", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["parameters"]["lightcolor"]["r"].setValue( 1.0 )
__children["pointlight"]["parameters"]["lightcolor"]["g"].setValue( 1.0 )
__children["pointlight"]["parameters"]["lightcolor"]["b"].setValue( 1.0 )
__children["pointlight"]["parameters"].addChild( Gaffer.V3fPlug( "from", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["parameters"]["from"]["x"].setValue( 0.0 )
__children["pointlight"]["parameters"]["from"]["y"].setValue( 0.0 )
__children["pointlight"]["parameters"]["from"]["z"].setValue( 0.0 )
__children["pointlight"]["parameters"].addChild( Gaffer.FloatPlug( "decay", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["parameters"]["decay"].setValue( 0.0 )
__children["pointlight"]["parameters"].addChild( Gaffer.StringPlug( "__category", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["parameters"]["__category"].setValue( '' )
__children["pointlight"]["__shaderName"].setValue( 'pointlight' )
__children["pointlight"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["__uiPosition"]["x"].setValue( 11.186132431030273 )
__children["pointlight"]["__uiPosition"]["y"].setValue( 8.059062957763672 )
__children["pointlight"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["pointlight"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["redPlasticSurface"] = GafferRenderMan.RenderManShader( "redPlasticSurface" )
parent.addChild( __children["redPlasticSurface"] )
__children["redPlasticSurface"]["name"].setValue( 'architectural' )
__children["redPlasticSurface"]["type"].setValue( 'ri:surface' )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "i_ambient", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["i_ambient"]["r"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"]["i_ambient"]["g"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"]["i_ambient"]["b"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "diffuse_scale", defaultValue = 0.800000012, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["diffuse_scale"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "i_diffuse_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["i_diffuse_color"]["r"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["i_diffuse_color"]["g"].setValue( 0.05434781312942505 )
__children["redPlasticSurface"]["parameters"]["i_diffuse_color"]["b"].setValue( 0.05434781312942505 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "i_diffuse_roughness", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["i_diffuse_roughness"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflectivity", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["reflectivity"].setValue( 0.10000000149011612 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "reflection_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["reflection_color"]["r"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["reflection_color"]["g"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["reflection_color"]["b"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflection_gloss", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["reflection_gloss"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflection_gloss_samples", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["reflection_gloss_samples"].setValue( 2.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "highlights_only", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["highlights_only"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "is_metallic", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["is_metallic"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.StringPlug( "environment_map", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["environment_map"].setValue( '' )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "transparency", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["transparency"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "refraction_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["refraction_color"]["r"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["refraction_color"]["g"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["refraction_color"]["b"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_gloss", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["refraction_gloss"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_ior", defaultValue = 1.29999995, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["refraction_ior"].setValue( 1.2999999523162842 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_gloss_samples", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["refraction_gloss_samples"].setValue( 2.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "anisotropy", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["anisotropy"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "anisotropy_rotation", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["anisotropy_rotation"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_fresnel", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["brdf_fresnel"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_0_degree_refl", defaultValue = 0.800000012, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["brdf_0_degree_refl"].setValue( 0.800000011920929 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_90_degree_refl", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["brdf_90_degree_refl"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_curve", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["brdf_curve"].setValue( 2.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_conserve_energy", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["brdf_conserve_energy"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "single_env_sample", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["single_env_sample"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "indirect_multiplier", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["indirect_multiplier"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "enable_ao", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["enable_ao"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "ao_samples", defaultValue = 32, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["ao_samples"].setValue( 32.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "ao_distance", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["ao_distance"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "ao_dark", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["ao_dark"]["r"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"]["ao_dark"]["g"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"]["ao_dark"]["b"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "ao_ambient", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["ao_ambient"]["r"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["ao_ambient"]["g"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["ao_ambient"]["b"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "thin_walled", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["thin_walled"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "hl_vs_refl_balance", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["hl_vs_refl_balance"].setValue( 1.0 )
__children["redPlasticSurface"]["enabled"].setValue( True )
__children["redPlasticSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["__uiPosition"]["x"].setValue( 28.444578170776367 )
__children["redPlasticSurface"]["__uiPosition"]["y"].setValue( -6.746917724609375 )
__children["redPlasticSurface"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["redPlasticSurface"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["PathFilterA"] = GafferScene.PathFilter( "PathFilterA" )
parent.addChild( __children["PathFilterA"] )
__children["PathFilterA"]["paths"].setValue( IECore.StringVectorData( [ "/group/ballA" ] ) )
__children["PathFilterA"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["PathFilterA"]["__uiPosition"]["x"].setValue( 22.47321891784668 )
__children["PathFilterA"]["__uiPosition"]["y"].setValue( -1.4056053161621094 )
__children["PathFilterA"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["PathFilterA"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["PathFilterA"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["greenPlasticSurface"] = GafferRenderMan.RenderManShader( "greenPlasticSurface" )
parent.addChild( __children["greenPlasticSurface"] )
__children["greenPlasticSurface"]["name"].setValue( 'architectural' )
__children["greenPlasticSurface"]["type"].setValue( 'ri:surface' )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "i_ambient", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["i_ambient"]["r"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"]["i_ambient"]["g"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"]["i_ambient"]["b"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "diffuse_scale", defaultValue = 0.800000012, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["diffuse_scale"].setValue( 0.800000011920929 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "i_diffuse_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["i_diffuse_color"]["r"].setValue( 0.05434781312942505 )
__children["greenPlasticSurface"]["parameters"]["i_diffuse_color"]["g"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["i_diffuse_color"]["b"].setValue( 0.10574200004339218 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "i_diffuse_roughness", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["i_diffuse_roughness"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflectivity", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["reflectivity"].setValue( 0.10000000149011612 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "reflection_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["reflection_color"]["r"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["reflection_color"]["g"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["reflection_color"]["b"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflection_gloss", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["reflection_gloss"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflection_gloss_samples", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["reflection_gloss_samples"].setValue( 2.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "highlights_only", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["highlights_only"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "is_metallic", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["is_metallic"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.StringPlug( "environment_map", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["environment_map"].setValue( '' )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "transparency", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["transparency"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "refraction_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["refraction_color"]["r"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["refraction_color"]["g"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["refraction_color"]["b"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_gloss", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["refraction_gloss"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_ior", defaultValue = 1.29999995, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["refraction_ior"].setValue( 1.2999999523162842 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_gloss_samples", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["refraction_gloss_samples"].setValue( 2.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "anisotropy", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["anisotropy"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "anisotropy_rotation", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["anisotropy_rotation"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_fresnel", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["brdf_fresnel"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_0_degree_refl", defaultValue = 0.800000012, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["brdf_0_degree_refl"].setValue( 0.800000011920929 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_90_degree_refl", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["brdf_90_degree_refl"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_curve", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["brdf_curve"].setValue( 2.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_conserve_energy", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["brdf_conserve_energy"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "single_env_sample", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["single_env_sample"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "indirect_multiplier", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["indirect_multiplier"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "enable_ao", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["enable_ao"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "ao_samples", defaultValue = 32, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["ao_samples"].setValue( 32.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "ao_distance", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["ao_distance"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "ao_dark", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["ao_dark"]["r"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"]["ao_dark"]["g"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"]["ao_dark"]["b"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "ao_ambient", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["ao_ambient"]["r"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["ao_ambient"]["g"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["ao_ambient"]["b"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "thin_walled", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["thin_walled"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "hl_vs_refl_balance", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["hl_vs_refl_balance"].setValue( 1.0 )
__children["greenPlasticSurface"]["enabled"].setValue( True )
__children["greenPlasticSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["__uiPosition"]["x"].setValue( 33.33528137207031 )
__children["greenPlasticSurface"]["__uiPosition"]["y"].setValue( -25.328121185302734 )
__children["greenPlasticSurface"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["greenPlasticSurface"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["greenPlasticSurface"].addChild( Gaffer.V2fPlug( "__uiPosition2", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["__uiPosition2"]["x"].setValue( 0.0 )
__children["greenPlasticSurface"]["__uiPosition2"]["y"].setValue( 0.0 )
__children["PathFilterB"] = GafferScene.PathFilter( "PathFilterB" )
parent.addChild( __children["PathFilterB"] )
__children["PathFilterB"]["paths"].setValue( IECore.StringVectorData( [ "/group/ball*" ] ) )
__children["PathFilterB"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["PathFilterB"]["__uiPosition"]["x"].setValue( 30.600419998168945 )
__children["PathFilterB"]["__uiPosition"]["y"].setValue( -19.680809020996094 )
__children["PathFilterB"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["PathFilterB"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["PathFilterB"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderCamera"]["name"].setValue( 'render:camera' )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/group/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderResolution"]["name"].setValue( 'render:resolution' )
__children["StandardOptions"]["options"]["renderResolution"]["value"]["x"].setValue( 1024 )
__children["StandardOptions"]["options"]["renderResolution"]["value"]["y"].setValue( 778 )
__children["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["cameraBlur"]["name"].setValue( 'render:cameraBlur' )
__children["StandardOptions"]["options"]["cameraBlur"]["value"].setValue( False )
__children["StandardOptions"]["options"]["cameraBlur"]["enabled"].setValue( False )
__children["StandardOptions"]["options"]["transformBlur"]["name"].setValue( 'render:transformBlur' )
__children["StandardOptions"]["options"]["transformBlur"]["value"].setValue( False )
__children["StandardOptions"]["options"]["transformBlur"]["enabled"].setValue( False )
__children["StandardOptions"]["options"]["deformationBlur"]["name"].setValue( 'render:deformationBlur' )
__children["StandardOptions"]["options"]["deformationBlur"]["value"].setValue( False )
__children["StandardOptions"]["options"]["deformationBlur"]["enabled"].setValue( False )
__children["StandardOptions"]["options"]["shutter"]["name"].setValue( 'render:shutter' )
__children["StandardOptions"]["options"]["shutter"]["value"]["x"].setValue( -0.25 )
__children["StandardOptions"]["options"]["shutter"]["value"]["y"].setValue( 0.25 )
__children["StandardOptions"]["options"]["shutter"]["enabled"].setValue( False )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["StandardOptions"]["__uiPosition"]["x"].setValue( 16.874876022338867 )
__children["StandardOptions"]["__uiPosition"]["y"].setValue( -44.68046569824219 )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["StandardOptions"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["StandardOptions"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["RenderManRender"] = GafferRenderMan.RenderManRender( "RenderManRender" )
parent.addChild( __children["RenderManRender"] )
__children["RenderManRender"]["requirements"].addChild( Gaffer.Plug( "requirement0", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["RenderManRender"]["requirements"].addChild( Gaffer.Plug( "requirement1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["RenderManRender"]["requirements"].addChild( Gaffer.Plug( "requirement2", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["RenderManRender"]["mode"].setValue( 'render' )
__children["RenderManRender"]["ribFileName"].setValue( '/tmp/interface_sceneInspector_figAA.#.rib' )
__children["RenderManRender"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["RenderManRender"]["__uiPosition"]["x"].setValue( 16.874876022338867 )
__children["RenderManRender"]["__uiPosition"]["y"].setValue( -50.051307678222656 )
__children["RenderManRender"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["RenderManRender"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["RenderManRender"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["Displays"] = GafferScene.Displays( "Displays" )
parent.addChild( __children["Displays"] )
__children["Displays"]["enabled"].setValue( True )
__children["Displays"]["displays"].addChild( Gaffer.CompoundPlug( "display1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.StringPlug( "label", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["label"].setValue( 'Interactive/Beauty' )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["active"].setValue( True )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["name"].setValue( 'beauty' )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["type"].setValue( 'ieDisplay' )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["data"].setValue( 'rgba' )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member1"]["name"].setValue( 'displayPort' )
__children["Displays"]["displays"]["display1"]["parameters"]["member1"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member1"]["value"].setValue( '1601' )
__children["Displays"]["displays"]["display1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member2", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member2"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member2"]["name"].setValue( 'quantize' )
__children["Displays"]["displays"]["display1"]["parameters"]["member2"].addChild( Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member2"]["value"].setValue( IECore.IntVectorData( [ 0, 0, 0, 0 ] ) )
__children["Displays"]["displays"]["display1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member3", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member3"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member3"]["name"].setValue( 'driverType' )
__children["Displays"]["displays"]["display1"]["parameters"]["member3"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member3"]["value"].setValue( 'ClientDisplayDriver' )
__children["Displays"]["displays"]["display1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member4", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member4"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member4"]["name"].setValue( 'displayHost' )
__children["Displays"]["displays"]["display1"]["parameters"]["member4"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member4"]["value"].setValue( 'localhost' )
__children["Displays"]["displays"]["display1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member5", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member5"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member5"]["name"].setValue( 'remoteDisplayType' )
__children["Displays"]["displays"]["display1"]["parameters"]["member5"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member5"]["value"].setValue( 'GafferDisplayDriver' )
__children["Displays"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["__uiPosition"]["x"].setValue( 16.874876022338867 )
__children["Displays"]["__uiPosition"]["y"].setValue( -38.70878601074219 )
__children["Displays"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["Displays"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["Display"] = GafferImage.Display( "Display" )
parent.addChild( __children["Display"] )
__children["Display"]["enabled"].setValue( True )
__children["Display"]["port"].setValue( 1601 )
__children["Display"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Display"]["__uiPosition"]["x"].setValue( 34.545921325683594 )
__children["Display"]["__uiPosition"]["y"].setValue( -40.808326721191406 )
__children["Display"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Display"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["Display"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["enabled"].setValue( True )
__children["Group"]["name"].setValue( 'group' )
__children["Group"]["transform"]["translate"]["x"].setValue( 0.0 )
__children["Group"]["transform"]["translate"]["y"].setValue( 0.0 )
__children["Group"]["transform"]["translate"]["z"].setValue( 0.0 )
__children["Group"]["transform"]["rotate"]["x"].setValue( 0.0 )
__children["Group"]["transform"]["rotate"]["y"].setValue( 0.0 )
__children["Group"]["transform"]["rotate"]["z"].setValue( 0.0 )
__children["Group"]["transform"]["scale"]["x"].setValue( 1.0 )
__children["Group"]["transform"]["scale"]["y"].setValue( 1.0 )
__children["Group"]["transform"]["scale"]["z"].setValue( 1.0 )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Group"]["__uiPosition"]["x"].setValue( 1.7161121368408203 )
__children["Group"]["__uiPosition"]["y"].setValue( -7.339666366577148 )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Group"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["Group"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["Group"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Group"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Group"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Group"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["SphereA"] = GafferScene.Sphere( "SphereA" )
parent.addChild( __children["SphereA"] )
__children["SphereA"]["enabled"].setValue( True )
__children["SphereA"]["name"].setValue( 'ballA' )
__children["SphereA"]["transform"]["translate"]["x"].setValue( -1.5 )
__children["SphereA"]["transform"]["translate"]["y"].setValue( 0.0 )
__children["SphereA"]["transform"]["translate"]["z"].setValue( 0.0 )
__children["SphereA"]["transform"]["rotate"]["x"].setValue( 0.0 )
__children["SphereA"]["transform"]["rotate"]["y"].setValue( 0.0 )
__children["SphereA"]["transform"]["rotate"]["z"].setValue( 0.0 )
__children["SphereA"]["transform"]["scale"]["x"].setValue( 1.0 )
__children["SphereA"]["transform"]["scale"]["y"].setValue( 1.0 )
__children["SphereA"]["transform"]["scale"]["z"].setValue( 1.0 )
__children["SphereA"]["type"].setValue( 1 )
__children["SphereA"]["radius"].setValue( 1.0 )
__children["SphereA"]["zMin"].setValue( -1.0 )
__children["SphereA"]["zMax"].setValue( 1.0 )
__children["SphereA"]["thetaMax"].setValue( 360.0 )
__children["SphereA"]["divisions"]["x"].setValue( 20 )
__children["SphereA"]["divisions"]["y"].setValue( 40 )
__children["SphereA"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["SphereA"]["__uiPosition"]["x"].setValue( -19.28537368774414 )
__children["SphereA"]["__uiPosition"]["y"].setValue( 0.5656929016113281 )
__children["SphereA"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["SphereA"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["SphereA"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["SphereB"] = GafferScene.Sphere( "SphereB" )
parent.addChild( __children["SphereB"] )
__children["SphereB"]["enabled"].setValue( True )
__children["SphereB"]["name"].setValue( 'ballB' )
__children["SphereB"]["transform"]["translate"]["x"].setValue( 1.5 )
__children["SphereB"]["transform"]["translate"]["y"].setValue( 0.0 )
__children["SphereB"]["transform"]["translate"]["z"].setValue( 0.0 )
__children["SphereB"]["transform"]["rotate"]["x"].setValue( 0.0 )
__children["SphereB"]["transform"]["rotate"]["y"].setValue( 0.0 )
__children["SphereB"]["transform"]["rotate"]["z"].setValue( 0.0 )
__children["SphereB"]["transform"]["scale"]["x"].setValue( 1.0 )
__children["SphereB"]["transform"]["scale"]["y"].setValue( 1.0 )
__children["SphereB"]["transform"]["scale"]["z"].setValue( 1.0 )
__children["SphereB"]["type"].setValue( 1 )
__children["SphereB"]["radius"].setValue( 1.0 )
__children["SphereB"]["zMin"].setValue( -1.0 )
__children["SphereB"]["zMax"].setValue( 1.0 )
__children["SphereB"]["thetaMax"].setValue( 360.0 )
__children["SphereB"]["divisions"]["x"].setValue( 20 )
__children["SphereB"]["divisions"]["y"].setValue( 40 )
__children["SphereB"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["SphereB"]["__uiPosition"]["x"].setValue( -6.833168029785156 )
__children["SphereB"]["__uiPosition"]["y"].setValue( 0.8831787109375 )
__children["SphereB"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["SphereB"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["SphereB"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["SphereB"].addChild( Gaffer.V2fPlug( "__uiPosition2", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["SphereB"]["__uiPosition2"]["x"].setValue( 0.0 )
__children["SphereB"]["__uiPosition2"]["y"].setValue( 0.0 )
__children["StandardAttributes"] = GafferScene.StandardAttributes( "StandardAttributes" )
parent.addChild( __children["StandardAttributes"] )
__children["StandardAttributes"]["enabled"].setValue( True )
__children["StandardAttributes"]["filter"].setValue( 2 )
__children["StandardAttributes"]["attributes"]["visibility"]["name"].setValue( 'scene:visible' )
__children["StandardAttributes"]["attributes"]["visibility"]["value"].setValue( True )
__children["StandardAttributes"]["attributes"]["visibility"]["enabled"].setValue( False )
__children["StandardAttributes"]["attributes"]["transformBlur"]["name"].setValue( 'gaffer:transformBlur' )
__children["StandardAttributes"]["attributes"]["transformBlur"]["value"].setValue( True )
__children["StandardAttributes"]["attributes"]["transformBlur"]["enabled"].setValue( False )
__children["StandardAttributes"]["attributes"]["transformBlurSegments"]["name"].setValue( 'gaffer:transformBlurSegments' )
__children["StandardAttributes"]["attributes"]["transformBlurSegments"]["value"].setValue( 1 )
__children["StandardAttributes"]["attributes"]["transformBlurSegments"]["enabled"].setValue( False )
__children["StandardAttributes"]["attributes"]["deformationBlur"]["name"].setValue( 'gaffer:deformationBlur' )
__children["StandardAttributes"]["attributes"]["deformationBlur"]["value"].setValue( True )
__children["StandardAttributes"]["attributes"]["deformationBlur"]["enabled"].setValue( False )
__children["StandardAttributes"]["attributes"]["deformationBlurSegments"]["name"].setValue( 'gaffer:deformationBlurSegments' )
__children["StandardAttributes"]["attributes"]["deformationBlurSegments"]["value"].setValue( 1 )
__children["StandardAttributes"]["attributes"]["deformationBlurSegments"]["enabled"].setValue( False )
__children["StandardAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["StandardAttributes"]["__uiPosition"]["x"].setValue( 16.874876022338867 )
__children["StandardAttributes"]["__uiPosition"]["y"].setValue( -19.17731285095215 )
__children["StandardAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["StandardAttributes"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["StandardAttributes"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["CustomAttributes"] = GafferScene.CustomAttributes( "CustomAttributes" )
parent.addChild( __children["CustomAttributes"] )
__children["CustomAttributes"]["enabled"].setValue( True )
__children["CustomAttributes"]["filter"].setValue( 2 )
__children["CustomAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["CustomAttributes"]["__uiPosition"]["x"].setValue( 16.874876022338867 )
__children["CustomAttributes"]["__uiPosition"]["y"].setValue( -24.95124053955078 )
__children["CustomAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["CustomAttributes"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["CustomAttributes"]["__uiPosition1"]["y"].setValue( 0.0 )
parent["variables"]["projectName"]["name"].setFlags( Gaffer.Plug.Flags.ReadOnly, True )
parent["variables"]["projectRootDirectory"]["name"].setFlags( Gaffer.Plug.Flags.ReadOnly, True )
__children["ShaderAssignmentA"]["in"].setInput( __children["Group"]["out"] )
__children["ShaderAssignmentA"]["filter"].setInput( __children["PathFilterA"]["match"] )
__children["ShaderAssignmentA"]["shader"].setInput( __children["redPlasticSurface"]["out"] )
__children["ShaderAssignmentB"]["in"].setInput( __children["CustomAttributes"]["out"] )
__children["ShaderAssignmentB"]["filter"].setInput( __children["PathFilterB"]["match"] )
__children["ShaderAssignmentB"]["shader"].setInput( __children["greenPlasticSurface"]["out"] )
__children["StandardOptions"]["in"].setInput( __children["Displays"]["out"] )
__children["RenderManRender"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["Displays"]["in"].setInput( __children["ShaderAssignmentB"]["out"] )
__children["Group"]["in"].setInput( __children["SphereA"]["out"] )
__children["Group"]["in1"].setInput( __children["SphereB"]["out"] )
__children["Group"]["in2"].setInput( __children["Camera"]["out"] )
__children["Group"]["in3"].setInput( __children["pointlight"]["out"] )
__children["StandardAttributes"]["in"].setInput( __children["ShaderAssignmentA"]["out"] )
__children["CustomAttributes"]["in"].setInput( __children["StandardAttributes"]["out"] )
__children["redPlasticSurface"].loadShader( "architectural", keepExistingValues=True )
__children["greenPlasticSurface"].loadShader( "architectural", keepExistingValues=True )


del __children

