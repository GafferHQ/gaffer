import Gaffer
import GafferImage
import GafferRenderMan
import GafferScene
import IECore

__children = {}

parent["frameRange"]["start"].setValue( 1 )
parent["frameRange"]["end"].setValue( 100 )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"]["enabled"].setValue( True )
__children["Camera"]["name"].setValue( 'camera' )
__children["Camera"]["transform"]["translate"].setValue( IECore.V3f( 0, 5, 15 ) )
__children["Camera"]["transform"]["translate"]["x"].setValue( 0.0 )
__children["Camera"]["transform"]["translate"]["y"].setValue( 5.0 )
__children["Camera"]["transform"]["translate"]["z"].setValue( 15.0 )
__children["Camera"]["transform"]["rotate"].setValue( IECore.V3f( -19.13, 0, 0 ) )
__children["Camera"]["transform"]["rotate"]["x"].setValue( -19.129999160766602 )
__children["Camera"]["transform"]["rotate"]["y"].setValue( 0.0 )
__children["Camera"]["transform"]["rotate"]["z"].setValue( 0.0 )
__children["Camera"]["transform"]["scale"].setValue( IECore.V3f( 1, 1, 1 ) )
__children["Camera"]["transform"]["scale"]["x"].setValue( 1.0 )
__children["Camera"]["transform"]["scale"]["y"].setValue( 1.0 )
__children["Camera"]["transform"]["scale"]["z"].setValue( 1.0 )
__children["Camera"]["projection"].setValue( 'perspective' )
__children["Camera"]["fieldOfView"].setValue( 25.0 )
__children["Camera"]["clippingPlanes"].setValue( IECore.V2f( 0.01, 100000 ) )
__children["Camera"]["clippingPlanes"]["x"].setValue( 0.0099999997764825821 )
__children["Camera"]["clippingPlanes"]["y"].setValue( 100000.0 )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Camera"]["__uiPosition"].setValue( IECore.V2f( 32.8827, -8.29944 ) )
__children["Camera"]["__uiPosition"]["x"].setValue( 32.882671356201172 )
__children["Camera"]["__uiPosition"]["y"].setValue( -8.2994365692138672 )
__children["ShaderAssignmentA"] = GafferScene.ShaderAssignment( "ShaderAssignmentA" )
parent.addChild( __children["ShaderAssignmentA"] )
__children["ShaderAssignmentA"]["enabled"].setValue( True )
__children["ShaderAssignmentA"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["ShaderAssignmentA"]["__uiPosition"].setValue( IECore.V2f( 27.5622, -27.867 ) )
__children["ShaderAssignmentA"]["__uiPosition"]["x"].setValue( 27.562217712402344 )
__children["ShaderAssignmentA"]["__uiPosition"]["y"].setValue( -27.866950988769531 )
__children["ShaderAssignmentB"] = GafferScene.ShaderAssignment( "ShaderAssignmentB" )
parent.addChild( __children["ShaderAssignmentB"] )
__children["ShaderAssignmentB"]["enabled"].setValue( True )
__children["ShaderAssignmentB"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["ShaderAssignmentB"]["__uiPosition"].setValue( IECore.V2f( 27.5622, -39.3066 ) )
__children["ShaderAssignmentB"]["__uiPosition"]["x"].setValue( 27.562217712402344 )
__children["ShaderAssignmentB"]["__uiPosition"]["y"].setValue( -39.306594848632812 )
__children["pointlight"] = GafferRenderMan.RenderManLight( "pointlight" )
parent.addChild( __children["pointlight"] )
__children["pointlight"]["enabled"].setValue( True )
__children["pointlight"]["name"].setValue( 'light' )
__children["pointlight"]["transform"]["translate"].setValue( IECore.V3f( -2.5, 4.5, 2.5 ) )
__children["pointlight"]["transform"]["translate"]["x"].setValue( -2.5 )
__children["pointlight"]["transform"]["translate"]["y"].setValue( 4.5 )
__children["pointlight"]["transform"]["translate"]["z"].setValue( 2.5 )
__children["pointlight"]["transform"]["rotate"].setValue( IECore.V3f( 0, 0, 0 ) )
__children["pointlight"]["transform"]["rotate"]["x"].setValue( 0.0 )
__children["pointlight"]["transform"]["rotate"]["y"].setValue( 0.0 )
__children["pointlight"]["transform"]["rotate"]["z"].setValue( 0.0 )
__children["pointlight"]["transform"]["scale"].setValue( IECore.V3f( 1, 1, 1 ) )
__children["pointlight"]["transform"]["scale"]["x"].setValue( 1.0 )
__children["pointlight"]["transform"]["scale"]["y"].setValue( 1.0 )
__children["pointlight"]["transform"]["scale"]["z"].setValue( 1.0 )
__children["pointlight"]["parameters"].addChild( Gaffer.FloatPlug( "intensity", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["parameters"]["intensity"].setValue( 1.0 )
__children["pointlight"]["parameters"].addChild( Gaffer.Color3fPlug( "lightcolor", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["parameters"]["lightcolor"].setValue( IECore.Color3f( 1, 1, 1 ) )
__children["pointlight"]["parameters"]["lightcolor"]["r"].setValue( 1.0 )
__children["pointlight"]["parameters"]["lightcolor"]["g"].setValue( 1.0 )
__children["pointlight"]["parameters"]["lightcolor"]["b"].setValue( 1.0 )
__children["pointlight"]["parameters"].addChild( Gaffer.V3fPlug( "from", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["parameters"]["from"].setValue( IECore.V3f( 0, 0, 0 ) )
__children["pointlight"]["parameters"]["from"]["x"].setValue( 0.0 )
__children["pointlight"]["parameters"]["from"]["y"].setValue( 0.0 )
__children["pointlight"]["parameters"]["from"]["z"].setValue( 0.0 )
__children["pointlight"]["parameters"].addChild( Gaffer.FloatPlug( "decay", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["parameters"]["decay"].setValue( 0.0 )
__children["pointlight"]["parameters"].addChild( Gaffer.StringPlug( "__category", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["parameters"]["__category"].setValue( '' )
__children["pointlight"]["__shaderName"].setValue( 'pointlight' )
__children["pointlight"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["pointlight"]["__uiPosition"].setValue( IECore.V2f( 46.4334, -8.35718 ) )
__children["pointlight"]["__uiPosition"]["x"].setValue( 46.433418273925781 )
__children["pointlight"]["__uiPosition"]["y"].setValue( -8.357177734375 )
__children["redPlasticSurface"] = GafferRenderMan.RenderManShader( "redPlasticSurface" )
parent.addChild( __children["redPlasticSurface"] )
__children["redPlasticSurface"]["name"].setValue( 'architectural' )
__children["redPlasticSurface"]["type"].setValue( 'ri:surface' )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "i_ambient", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["i_ambient"].setValue( IECore.Color3f( 0, 0, 0 ) )
__children["redPlasticSurface"]["parameters"]["i_ambient"]["r"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"]["i_ambient"]["g"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"]["i_ambient"]["b"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "diffuse_scale", defaultValue = 0.800000012, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["diffuse_scale"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "i_diffuse_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["i_diffuse_color"].setValue( IECore.Color3f( 1, 0.0543478, 0.0543478 ) )
__children["redPlasticSurface"]["parameters"]["i_diffuse_color"]["r"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["i_diffuse_color"]["g"].setValue( 0.054347813129425049 )
__children["redPlasticSurface"]["parameters"]["i_diffuse_color"]["b"].setValue( 0.054347813129425049 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "i_diffuse_roughness", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["i_diffuse_roughness"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflectivity", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["reflectivity"].setValue( 0.10000000149011612 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "reflection_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["reflection_color"].setValue( IECore.Color3f( 1, 1, 1 ) )
__children["redPlasticSurface"]["parameters"]["reflection_color"]["r"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["reflection_color"]["g"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["reflection_color"]["b"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflection_gloss", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["reflection_gloss"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflection_gloss_samples", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["reflection_gloss_samples"].setValue( 2.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "highlights_only", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["highlights_only"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "is_metallic", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["is_metallic"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.StringPlug( "environment_map", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["environment_map"].setValue( '' )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "transparency", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["transparency"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "refraction_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["refraction_color"].setValue( IECore.Color3f( 1, 1, 1 ) )
__children["redPlasticSurface"]["parameters"]["refraction_color"]["r"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["refraction_color"]["g"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["refraction_color"]["b"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_gloss", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["refraction_gloss"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_ior", defaultValue = 1.29999995, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["refraction_ior"].setValue( 1.2999999523162842 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_gloss_samples", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["refraction_gloss_samples"].setValue( 2.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "anisotropy", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["anisotropy"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "anisotropy_rotation", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["anisotropy_rotation"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_fresnel", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["brdf_fresnel"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_0_degree_refl", defaultValue = 0.800000012, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["brdf_0_degree_refl"].setValue( 0.80000001192092896 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_90_degree_refl", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["brdf_90_degree_refl"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_curve", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["brdf_curve"].setValue( 2.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_conserve_energy", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["brdf_conserve_energy"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "single_env_sample", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["single_env_sample"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "indirect_multiplier", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["indirect_multiplier"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "enable_ao", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["enable_ao"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "ao_samples", defaultValue = 32, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["ao_samples"].setValue( 32.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "ao_distance", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["ao_distance"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "ao_dark", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["ao_dark"].setValue( IECore.Color3f( 0, 0, 0 ) )
__children["redPlasticSurface"]["parameters"]["ao_dark"]["r"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"]["ao_dark"]["g"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"]["ao_dark"]["b"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "ao_ambient", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["ao_ambient"].setValue( IECore.Color3f( 1, 1, 1 ) )
__children["redPlasticSurface"]["parameters"]["ao_ambient"]["r"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["ao_ambient"]["g"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"]["ao_ambient"]["b"].setValue( 1.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "thin_walled", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["thin_walled"].setValue( 0.0 )
__children["redPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "hl_vs_refl_balance", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["parameters"]["hl_vs_refl_balance"].setValue( 1.0 )
__children["redPlasticSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["redPlasticSurface"]["__uiPosition"].setValue( IECore.V2f( 10.9596, -23.2283 ) )
__children["redPlasticSurface"]["__uiPosition"]["x"].setValue( 10.959587097167969 )
__children["redPlasticSurface"]["__uiPosition"]["y"].setValue( -23.228328704833984 )
__children["PathFilterA"] = GafferScene.PathFilter( "PathFilterA" )
parent.addChild( __children["PathFilterA"] )
__children["PathFilterA"]["paths"].setValue( IECore.StringVectorData( [ "/group/ballA" ] ) )
__children["PathFilterA"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["PathFilterA"]["__uiPosition"].setValue( IECore.V2f( 37.3224, -22.4922 ) )
__children["PathFilterA"]["__uiPosition"]["x"].setValue( 37.322368621826172 )
__children["PathFilterA"]["__uiPosition"]["y"].setValue( -22.492195129394531 )
__children["greenPlasticSurface"] = GafferRenderMan.RenderManShader( "greenPlasticSurface" )
parent.addChild( __children["greenPlasticSurface"] )
__children["greenPlasticSurface"]["name"].setValue( 'architectural' )
__children["greenPlasticSurface"]["type"].setValue( 'ri:surface' )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "i_ambient", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["i_ambient"].setValue( IECore.Color3f( 0, 0, 0 ) )
__children["greenPlasticSurface"]["parameters"]["i_ambient"]["r"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"]["i_ambient"]["g"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"]["i_ambient"]["b"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "diffuse_scale", defaultValue = 0.800000012, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["diffuse_scale"].setValue( 0.80000001192092896 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "i_diffuse_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["i_diffuse_color"].setValue( IECore.Color3f( 0.0543478, 1, 0.105742 ) )
__children["greenPlasticSurface"]["parameters"]["i_diffuse_color"]["r"].setValue( 0.054347813129425049 )
__children["greenPlasticSurface"]["parameters"]["i_diffuse_color"]["g"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["i_diffuse_color"]["b"].setValue( 0.10574200004339218 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "i_diffuse_roughness", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["i_diffuse_roughness"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflectivity", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["reflectivity"].setValue( 0.10000000149011612 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "reflection_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["reflection_color"].setValue( IECore.Color3f( 1, 1, 1 ) )
__children["greenPlasticSurface"]["parameters"]["reflection_color"]["r"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["reflection_color"]["g"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["reflection_color"]["b"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflection_gloss", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["reflection_gloss"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "reflection_gloss_samples", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["reflection_gloss_samples"].setValue( 2.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "highlights_only", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["highlights_only"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "is_metallic", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["is_metallic"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.StringPlug( "environment_map", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["environment_map"].setValue( '' )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "transparency", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["transparency"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "refraction_color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["refraction_color"].setValue( IECore.Color3f( 1, 1, 1 ) )
__children["greenPlasticSurface"]["parameters"]["refraction_color"]["r"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["refraction_color"]["g"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["refraction_color"]["b"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_gloss", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["refraction_gloss"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_ior", defaultValue = 1.29999995, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["refraction_ior"].setValue( 1.2999999523162842 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "refraction_gloss_samples", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["refraction_gloss_samples"].setValue( 2.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "anisotropy", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["anisotropy"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "anisotropy_rotation", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["anisotropy_rotation"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_fresnel", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["brdf_fresnel"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_0_degree_refl", defaultValue = 0.800000012, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["brdf_0_degree_refl"].setValue( 0.80000001192092896 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_90_degree_refl", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["brdf_90_degree_refl"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_curve", defaultValue = 2, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["brdf_curve"].setValue( 2.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "brdf_conserve_energy", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["brdf_conserve_energy"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "single_env_sample", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["single_env_sample"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "indirect_multiplier", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["indirect_multiplier"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "enable_ao", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["enable_ao"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "ao_samples", defaultValue = 32, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["ao_samples"].setValue( 32.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "ao_distance", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["ao_distance"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "ao_dark", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["ao_dark"].setValue( IECore.Color3f( 0, 0, 0 ) )
__children["greenPlasticSurface"]["parameters"]["ao_dark"]["r"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"]["ao_dark"]["g"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"]["ao_dark"]["b"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.Color3fPlug( "ao_ambient", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["ao_ambient"].setValue( IECore.Color3f( 1, 1, 1 ) )
__children["greenPlasticSurface"]["parameters"]["ao_ambient"]["r"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["ao_ambient"]["g"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"]["ao_ambient"]["b"].setValue( 1.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "thin_walled", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["thin_walled"].setValue( 0.0 )
__children["greenPlasticSurface"]["parameters"].addChild( Gaffer.FloatPlug( "hl_vs_refl_balance", defaultValue = 1, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["parameters"]["hl_vs_refl_balance"].setValue( 1.0 )
__children["greenPlasticSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["__uiPosition"].setValue( IECore.V2f( 11.4774, -34.437 ) )
__children["greenPlasticSurface"]["__uiPosition"]["x"].setValue( 11.477365493774414 )
__children["greenPlasticSurface"]["__uiPosition"]["y"].setValue( -34.437049865722656 )
__children["greenPlasticSurface"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["greenPlasticSurface"]["__uiPosition1"].setValue( IECore.V2f( 0, 0 ) )
__children["greenPlasticSurface"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["greenPlasticSurface"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["PathFilterB"] = GafferScene.PathFilter( "PathFilterB" )
parent.addChild( __children["PathFilterB"] )
__children["PathFilterB"]["paths"].setValue( IECore.StringVectorData( [ "/group/ballB" ] ) )
__children["PathFilterB"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["PathFilterB"]["__uiPosition"].setValue( IECore.V2f( 37.684, -33.9318 ) )
__children["PathFilterB"]["__uiPosition"]["x"].setValue( 37.683967590332031 )
__children["PathFilterB"]["__uiPosition"]["y"].setValue( -33.931838989257812 )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderCamera"]["name"].setValue( 'render:camera' )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/group/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderResolution"]["name"].setValue( 'render:resolution' )
__children["StandardOptions"]["options"]["renderResolution"]["value"].setValue( IECore.V2i( 1024, 778 ) )
__children["StandardOptions"]["options"]["renderResolution"]["value"]["x"].setValue( 1024 )
__children["StandardOptions"]["options"]["renderResolution"]["value"]["y"].setValue( 778 )
__children["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["cameraBlur"]["name"].setValue( 'render:cameraBlur' )
__children["StandardOptions"]["options"]["cameraBlur"]["value"].setValue( False )
__children["StandardOptions"]["options"]["cameraBlur"]["enabled"].setValue( False )
__children["StandardOptions"]["options"]["transformBlur"]["name"].setValue( 'render:transformBlur' )
__children["StandardOptions"]["options"]["transformBlur"]["value"].setValue( False )
__children["StandardOptions"]["options"]["transformBlur"]["enabled"].setValue( False )
__children["StandardOptions"]["options"]["deformationBlur"]["name"].setValue( 'render:deformationBlur' )
__children["StandardOptions"]["options"]["deformationBlur"]["value"].setValue( False )
__children["StandardOptions"]["options"]["deformationBlur"]["enabled"].setValue( False )
__children["StandardOptions"]["options"]["shutter"]["name"].setValue( 'render:shutter' )
__children["StandardOptions"]["options"]["shutter"]["value"].setValue( IECore.V2f( -0.25, 0.25 ) )
__children["StandardOptions"]["options"]["shutter"]["value"]["x"].setValue( -0.25 )
__children["StandardOptions"]["options"]["shutter"]["value"]["y"].setValue( 0.25 )
__children["StandardOptions"]["options"]["shutter"]["enabled"].setValue( False )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["StandardOptions"]["__uiPosition"].setValue( IECore.V2f( 27.5622, -51.2539 ) )
__children["StandardOptions"]["__uiPosition"]["x"].setValue( 27.562217712402344 )
__children["StandardOptions"]["__uiPosition"]["y"].setValue( -51.253860473632812 )
__children["RenderManRender"] = GafferRenderMan.RenderManRender( "RenderManRender" )
parent.addChild( __children["RenderManRender"] )
__children["RenderManRender"]["mode"].setValue( 'render' )
__children["RenderManRender"]["ribFileName"].setValue( '/tmp/interface_sceneInspector_figAE.#.rib' )
__children["RenderManRender"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["RenderManRender"]["__uiPosition"].setValue( IECore.V2f( 27.5622, -56.6247 ) )
__children["RenderManRender"]["__uiPosition"]["x"].setValue( 27.562217712402344 )
__children["RenderManRender"]["__uiPosition"]["y"].setValue( -56.624710083007812 )
__children["Displays"] = GafferScene.Displays( "Displays" )
parent.addChild( __children["Displays"] )
__children["Displays"]["enabled"].setValue( True )
__children["Displays"]["displays"].addChild( Gaffer.CompoundPlug( "display1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.StringPlug( "label", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["label"].setValue( 'Interactive/Beauty' )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["active"].setValue( True )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["name"].setValue( 'beauty' )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["type"].setValue( 'ieDisplay' )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["data"].setValue( 'rgba' )
__children["Displays"]["displays"]["display1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member1"]["name"].setValue( 'displayPort' )
__children["Displays"]["displays"]["display1"]["parameters"]["member1"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member1"]["value"].setValue( '1559' )
__children["Displays"]["displays"]["display1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member2", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member2"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member2"]["name"].setValue( 'quantize' )
__children["Displays"]["displays"]["display1"]["parameters"]["member2"].addChild( Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [  ] ), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member2"]["value"].setValue( IECore.IntVectorData( [ 0, 0, 0, 0 ] ) )
__children["Displays"]["displays"]["display1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member3", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member3"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member3"]["name"].setValue( 'driverType' )
__children["Displays"]["displays"]["display1"]["parameters"]["member3"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member3"]["value"].setValue( 'ClientDisplayDriver' )
__children["Displays"]["displays"]["display1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member4", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member4"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member4"]["name"].setValue( 'displayHost' )
__children["Displays"]["displays"]["display1"]["parameters"]["member4"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member4"]["value"].setValue( 'localhost' )
__children["Displays"]["displays"]["display1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member5", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member5"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member5"]["name"].setValue( 'remoteDisplayType' )
__children["Displays"]["displays"]["display1"]["parameters"]["member5"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["displays"]["display1"]["parameters"]["member5"]["value"].setValue( 'GafferDisplayDriver' )
__children["Displays"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Displays"]["__uiPosition"].setValue( IECore.V2f( 27.5622, -45.2822 ) )
__children["Displays"]["__uiPosition"]["x"].setValue( 27.562217712402344 )
__children["Displays"]["__uiPosition"]["y"].setValue( -45.282180786132812 )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, )
parent.addChild( __children["defaultFormat"] )
GafferImage.Format.registerFormat( GafferImage.Format(1024, 778, 1.000), "1K Super 35 (full-ap) 1024x778 1" )
GafferImage.Format.registerFormat( GafferImage.Format(2048, 1556, 1.000), "2K Super 35 (full-ap) 2048x1556 1" )
GafferImage.Format.registerFormat( GafferImage.Format(4096, 3112, 1.000), "4K Super 35 (full-ap) 4096x3112 1" )
GafferImage.Format.registerFormat( GafferImage.Format(1920, 1080, 1.000), "HD (1920x1080) 1920x1080 1" )
GafferImage.Format.registerFormat( GafferImage.Format(640, 480, 1.000), "PC Video (640x480) 640x480 1" )
__children["defaultFormat"].setValue( GafferImage.Format(1920, 1080, 1.000) )
__children["Display"] = GafferImage.Display( "Display" )
parent.addChild( __children["Display"] )
__children["Display"]["enabled"].setValue( True )
__children["Display"]["port"].setValue( 1559 )
__children["Display"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Display"]["__uiPosition"].setValue( IECore.V2f( 45.2333, -47.3817 ) )
__children["Display"]["__uiPosition"]["x"].setValue( 45.233264923095703 )
__children["Display"]["__uiPosition"]["y"].setValue( -47.381721496582031 )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["enabled"].setValue( True )
__children["Group"]["name"].setValue( 'group' )
__children["Group"]["transform"]["translate"].setValue( IECore.V3f( 0, 0, 0 ) )
__children["Group"]["transform"]["translate"]["x"].setValue( 0.0 )
__children["Group"]["transform"]["translate"]["y"].setValue( 0.0 )
__children["Group"]["transform"]["translate"]["z"].setValue( 0.0 )
__children["Group"]["transform"]["rotate"].setValue( IECore.V3f( 0, 0, 0 ) )
__children["Group"]["transform"]["rotate"]["x"].setValue( 0.0 )
__children["Group"]["transform"]["rotate"]["y"].setValue( 0.0 )
__children["Group"]["transform"]["rotate"]["z"].setValue( 0.0 )
__children["Group"]["transform"]["scale"].setValue( IECore.V3f( 1, 1, 1 ) )
__children["Group"]["transform"]["scale"]["x"].setValue( 1.0 )
__children["Group"]["transform"]["scale"]["y"].setValue( 1.0 )
__children["Group"]["transform"]["scale"]["z"].setValue( 1.0 )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Group"]["__uiPosition"].setValue( IECore.V2f( 26.761, -16.4838 ) )
__children["Group"]["__uiPosition"]["x"].setValue( 26.760955810546875 )
__children["Group"]["__uiPosition"]["y"].setValue( -16.483791351318359 )
__children["Group"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Group"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Group"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["Group"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["SphereA"] = GafferScene.Sphere( "SphereA" )
parent.addChild( __children["SphereA"] )
__children["SphereA"]["enabled"].setValue( True )
__children["SphereA"]["name"].setValue( 'ballA' )
__children["SphereA"]["transform"]["translate"].setValue( IECore.V3f( -1.5, 0, 0 ) )
__children["SphereA"]["transform"]["translate"]["x"].setValue( -1.5 )
__children["SphereA"]["transform"]["translate"]["y"].setValue( 0.0 )
__children["SphereA"]["transform"]["translate"]["z"].setValue( 0.0 )
__children["SphereA"]["transform"]["rotate"].setValue( IECore.V3f( 0, 0, 0 ) )
__children["SphereA"]["transform"]["rotate"]["x"].setValue( 0.0 )
__children["SphereA"]["transform"]["rotate"]["y"].setValue( 0.0 )
__children["SphereA"]["transform"]["rotate"]["z"].setValue( 0.0 )
__children["SphereA"]["transform"]["scale"].setValue( IECore.V3f( 1, 1, 1 ) )
__children["SphereA"]["transform"]["scale"]["x"].setValue( 1.0 )
__children["SphereA"]["transform"]["scale"]["y"].setValue( 1.0 )
__children["SphereA"]["transform"]["scale"]["z"].setValue( 1.0 )
__children["SphereA"]["type"].setValue( 1 )
__children["SphereA"]["radius"].setValue( 1.0 )
__children["SphereA"]["zMin"].setValue( -1.0 )
__children["SphereA"]["zMax"].setValue( 1.0 )
__children["SphereA"]["thetaMax"].setValue( 360.0 )
__children["SphereA"]["divisions"].setValue( IECore.V2i( 20, 40 ) )
__children["SphereA"]["divisions"]["x"].setValue( 20 )
__children["SphereA"]["divisions"]["y"].setValue( 40 )
__children["SphereA"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["SphereA"]["__uiPosition"].setValue( IECore.V2f( 5.7773, -8.17291 ) )
__children["SphereA"]["__uiPosition"]["x"].setValue( 5.7773013114929199 )
__children["SphereA"]["__uiPosition"]["y"].setValue( -8.1729145050048828 )
__children["SphereB"] = GafferScene.Sphere( "SphereB" )
parent.addChild( __children["SphereB"] )
__children["SphereB"]["enabled"].setValue( True )
__children["SphereB"]["name"].setValue( 'ballB' )
__children["SphereB"]["transform"]["translate"].setValue( IECore.V3f( 1.5, 0, 0 ) )
__children["SphereB"]["transform"]["translate"]["x"].setValue( 1.5 )
__children["SphereB"]["transform"]["translate"]["y"].setValue( 0.0 )
__children["SphereB"]["transform"]["translate"]["z"].setValue( 0.0 )
__children["SphereB"]["transform"]["rotate"].setValue( IECore.V3f( 0, 0, 0 ) )
__children["SphereB"]["transform"]["rotate"]["x"].setValue( 0.0 )
__children["SphereB"]["transform"]["rotate"]["y"].setValue( 0.0 )
__children["SphereB"]["transform"]["rotate"]["z"].setValue( 0.0 )
__children["SphereB"]["transform"]["scale"].setValue( IECore.V3f( 1, 1, 1 ) )
__children["SphereB"]["transform"]["scale"]["x"].setValue( 1.0 )
__children["SphereB"]["transform"]["scale"]["y"].setValue( 1.0 )
__children["SphereB"]["transform"]["scale"]["z"].setValue( 1.0 )
__children["SphereB"]["type"].setValue( 1 )
__children["SphereB"]["radius"].setValue( 1.0 )
__children["SphereB"]["zMin"].setValue( -1.0 )
__children["SphereB"]["zMax"].setValue( 1.0 )
__children["SphereB"]["thetaMax"].setValue( 360.0 )
__children["SphereB"]["divisions"].setValue( IECore.V2i( 20, 40 ) )
__children["SphereB"]["divisions"]["x"].setValue( 20 )
__children["SphereB"]["divisions"]["y"].setValue( 40 )
__children["SphereB"].addChild( Gaffer.V2fPlug( "__uiPosition", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["SphereB"]["__uiPosition"].setValue( IECore.V2f( 19.3263, -8.1688 ) )
__children["SphereB"]["__uiPosition"]["x"].setValue( 19.326314926147461 )
__children["SphereB"]["__uiPosition"]["y"].setValue( -8.1688041687011719 )
__children["SphereB"].addChild( Gaffer.V2fPlug( "__uiPosition1", flags = Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.Serialisable | Gaffer.Plug.Flags.AcceptsInputs | Gaffer.Plug.Flags.PerformsSubstitutions | Gaffer.Plug.Flags.Cacheable, ) )
__children["SphereB"]["__uiPosition1"].setValue( IECore.V2f( 0, 0 ) )
__children["SphereB"]["__uiPosition1"]["x"].setValue( 0.0 )
__children["SphereB"]["__uiPosition1"]["y"].setValue( 0.0 )
__children["ShaderAssignmentA"]["in"].setInput( __children["Group"]["out"] )
__children["ShaderAssignmentA"]["filter"].setInput( __children["PathFilterA"]["match"] )
__children["ShaderAssignmentA"]["shader"].setInput( __children["redPlasticSurface"]["out"] )
__children["ShaderAssignmentB"]["in"].setInput( __children["ShaderAssignmentA"]["out"] )
__children["ShaderAssignmentB"]["filter"].setInput( __children["PathFilterB"]["match"] )
__children["ShaderAssignmentB"]["shader"].setInput( __children["greenPlasticSurface"]["out"] )
__children["redPlasticSurface"].loadShader( "architectural", keepExistingValues=True )
__children["greenPlasticSurface"].loadShader( "architectural", keepExistingValues=True )
__children["StandardOptions"]["in"].setInput( __children["Displays"]["out"] )
__children["RenderManRender"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["Displays"]["in"].setInput( __children["ShaderAssignmentB"]["out"] )
__children["Group"]["in"].setInput( __children["SphereA"]["out"] )
__children["Group"]["in1"].setInput( __children["SphereB"]["out"] )
__children["Group"]["in2"].setInput( __children["Camera"]["out"] )
__children["Group"]["in3"].setInput( __children["pointlight"]["out"] )


del __children

