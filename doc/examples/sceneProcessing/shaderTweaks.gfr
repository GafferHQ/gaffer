import Gaffer
import GafferCycles
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["principled_bsdf"] = GafferCycles.CyclesShader( "principled_bsdf" )
parent.addChild( __children["principled_bsdf"] )
__children["principled_bsdf"].loadShader( "principled_bsdf" )
__children["principled_bsdf"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"] = GafferScene.Parent( "Parent" )
parent.addChild( __children["Parent"] )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["distant_light"] = GafferCycles.CyclesLight( "distant_light" )
parent.addChild( __children["distant_light"] )
__children["distant_light"].loadShader( "distant_light" )
__children["distant_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["image_texture"] = GafferCycles.CyclesShader( "image_texture" )
parent.addChild( __children["image_texture"] )
__children["image_texture"].loadShader( "image_texture" )
__children["image_texture"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"] = Gaffer.Backdrop( "Backdrop7" )
parent.addChild( __children["Backdrop7"] )
__children["Backdrop7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks"] = GafferScene.ShaderTweaks( "ShaderTweaks" )
parent.addChild( __children["ShaderTweaks"] )
__children["ShaderTweaks"]["tweaks"].addChild( Gaffer.TweakPlug( Gaffer.FloatPlug( "value", defaultValue = 0.30000001192092896, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "roughness", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter2"] = GafferScene.PathFilter( "PathFilter2" )
parent.addChild( __children["PathFilter2"] )
__children["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop8"] = Gaffer.Backdrop( "Backdrop8" )
parent.addChild( __children["Backdrop8"] )
__children["Backdrop8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop8"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot1"] = Gaffer.Dot( "Dot1" )
parent.addChild( __children["Dot1"] )
__children["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot2"] = Gaffer.Dot( "Dot2" )
parent.addChild( __children["Dot2"] )
__children["Dot2"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks1"] = GafferScene.ShaderTweaks( "ShaderTweaks1" )
parent.addChild( __children["ShaderTweaks1"] )
__children["ShaderTweaks1"]["tweaks"].addChild( Gaffer.TweakPlug( Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0.5, 0.5, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "image_texture_tex_mapping__scale", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter3"] = GafferScene.PathFilter( "PathFilter3" )
parent.addChild( __children["PathFilter3"] )
__children["PathFilter3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop9"] = Gaffer.Backdrop( "Backdrop9" )
parent.addChild( __children["Backdrop9"] )
__children["Backdrop9"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop9"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot3"] = Gaffer.Dot( "Dot3" )
parent.addChild( __children["Dot3"] )
__children["Dot3"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot4"] = Gaffer.Dot( "Dot4" )
parent.addChild( __children["Dot4"] )
__children["Dot4"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot5"] = Gaffer.Dot( "Dot5" )
parent.addChild( __children["Dot5"] )
__children["Dot5"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks2"] = GafferScene.ShaderTweaks( "ShaderTweaks2" )
parent.addChild( __children["ShaderTweaks2"] )
__children["ShaderTweaks2"]["tweaks"].addChild( Gaffer.TweakPlug( Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "emission_strength", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks2"]["tweaks"].addChild( Gaffer.TweakPlug( Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "emission_color", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter4"] = GafferScene.PathFilter( "PathFilter4" )
parent.addChild( __children["PathFilter4"] )
__children["PathFilter4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"] = Gaffer.Backdrop( "Backdrop10" )
parent.addChild( __children["Backdrop10"] )
__children["Backdrop10"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot6"] = Gaffer.Dot( "Dot6" )
parent.addChild( __children["Dot6"] )
__children["Dot6"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot7"] = Gaffer.Dot( "Dot7" )
parent.addChild( __children["Dot7"] )
__children["Dot7"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot8"] = Gaffer.Dot( "Dot8" )
parent.addChild( __children["Dot8"] )
__children["Dot8"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["noise_texture"] = GafferCycles.CyclesShader( "noise_texture" )
parent.addChild( __children["noise_texture"] )
__children["noise_texture"].loadShader( "noise_texture" )
__children["noise_texture"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"] = GafferCycles.CyclesShader( "rgb_ramp" )
parent.addChild( __children["rgb_ramp"] )
__children["rgb_ramp"].loadShader( "rgb_ramp" )
__children["rgb_ramp"]["parameters"]["ramp"].clearPoints()
__children["rgb_ramp"]["parameters"]["ramp"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp"]["p0"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp"]["p1"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp"].addChild( Gaffer.ValuePlug( "p2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp"]["p2"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp"]["p2"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp_alpha"].clearPoints()
__children["rgb_ramp"]["parameters"]["ramp_alpha"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp_alpha"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp_alpha"]["p0"].addChild( Gaffer.FloatPlug( "y", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp_alpha"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp_alpha"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"]["parameters"]["ramp_alpha"]["p1"].addChild( Gaffer.FloatPlug( "y", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rgb_ramp"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks3"] = GafferScene.ShaderTweaks( "ShaderTweaks3" )
parent.addChild( __children["ShaderTweaks3"] )
__children["ShaderTweaks3"]["tweaks"].addChild( Gaffer.TweakPlug( Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "base_color", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter5"] = GafferScene.PathFilter( "PathFilter5" )
parent.addChild( __children["PathFilter5"] )
__children["PathFilter5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"] = Gaffer.Backdrop( "Backdrop11" )
parent.addChild( __children["Backdrop11"] )
__children["Backdrop11"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot9"] = Gaffer.Dot( "Dot9" )
parent.addChild( __children["Dot9"] )
__children["Dot9"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot9"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot10"] = Gaffer.Dot( "Dot10" )
parent.addChild( __children["Dot10"] )
__children["Dot10"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot10"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot11"] = Gaffer.Dot( "Dot11" )
parent.addChild( __children["Dot11"] )
__children["Dot11"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot11"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Auto"] = GafferScene.ShaderTweakProxy( "Auto" )
parent.addChild( __children["Auto"] )
__children["Auto"].loadShader( "autoProxy" )
__children["Auto"]["out"].addChild( Gaffer.Color3fPlug( "auto", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Auto"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["brightness_contrast"] = GafferCycles.CyclesShader( "brightness_contrast" )
parent.addChild( __children["brightness_contrast"] )
__children["brightness_contrast"].loadShader( "brightness_contrast" )
__children["brightness_contrast"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks4"] = GafferScene.ShaderTweaks( "ShaderTweaks4" )
parent.addChild( __children["ShaderTweaks4"] )
__children["ShaderTweaks4"]["tweaks"].addChild( Gaffer.TweakPlug( Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "base_color", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks4"]["tweaks"].addChild( Gaffer.TweakPlug( Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "emission_strength", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter6"] = GafferScene.PathFilter( "PathFilter6" )
parent.addChild( __children["PathFilter6"] )
__children["PathFilter6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"] = Gaffer.Backdrop( "Backdrop12" )
parent.addChild( __children["Backdrop12"] )
__children["Backdrop12"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot12"] = Gaffer.Dot( "Dot12" )
parent.addChild( __children["Dot12"] )
__children["Dot12"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot12"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot13"] = Gaffer.Dot( "Dot13" )
parent.addChild( __children["Dot13"] )
__children["Dot13"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot13"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot14"] = Gaffer.Dot( "Dot14" )
parent.addChild( __children["Dot14"] )
__children["Dot14"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot14"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["image_texture1"] = GafferScene.ShaderTweakProxy( "image_texture1" )
parent.addChild( __children["image_texture1"] )
__children["image_texture1"].loadShader( "cycles:image_texture" )
__children["image_texture1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 42309 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Backdrop"]["title"].setValue( 'Example: Shader Tweaks' )
__children["Backdrop"]["scale"].setValue( 1.5 )
__children["Backdrop"]["description"].setValue( 'This example shows some of the ways to use the ShaderTweaks node to modify shader networks.\n' )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 60, 37.7212219 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -87.729538, 144.494415 ) )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( 46.9047699, 164.237778 ) )
__children["ShaderAssignment"]["in"].setInput( __children["Sphere"]["out"] )
__children["ShaderAssignment"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["principled_bsdf"]["out"]["BSDF"] )
__children["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 46.9047699, 156.073715 ) )
__children["principled_bsdf"]["parameters"]["base_color"].setInput( __children["image_texture"]["out"]["color"] )
__children["principled_bsdf"]["parameters"]["roughness"].setValue( 0.30000001192092896 )
__children["principled_bsdf"]["parameters"]["subsurface_radius"].setValue( imath.V3f( 1, 0.200000003, 0.100000001 ) )
__children["principled_bsdf"]["parameters"]["specular_ior_level"].setValue( 0.5 )
__children["principled_bsdf"]["__uiPosition"].setValue( imath.V2f( 31.5053749, 156.129333 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 60.1454582, 160.092712 ) )
__children["Parent"]["in"].setInput( __children["ShaderAssignment"]["out"] )
__children["Parent"]["parent"].setValue( '/' )
__children["Parent"]["children"][0].setInput( __children["distant_light"]["out"] )
__children["Parent"]["__uiPosition"].setValue( imath.V2f( 49.1547699, 142.406265 ) )
__children["distant_light"]["transform"]["translate"].setValue( imath.V3f( 2.74629998, 0, 0 ) )
__children["distant_light"]["transform"]["rotate"].setValue( imath.V3f( -47.4163017, 36.5225983, 0 ) )
__children["distant_light"]["parameters"]["exposure"].setValue( 1.0 )
__children["distant_light"]["__uiPosition"].setValue( imath.V2f( 71.8731079, 150.88829 ) )
__children["image_texture"]["parameters"]["tex_mapping__scale"].setValue( imath.V3f( 0.5, 0.5, 1 ) )
__children["image_texture"]["parameters"]["filename"].setValue( '${GAFFER_ROOT}/resources/images/macaw.exr' )
__children["image_texture"]["__uiPosition"].setValue( imath.V2f( 16.2441425, 171.129318 ) )
__children["Backdrop7"]["title"].setValue( 'Sample Source Scene' )
__children["Backdrop7"]["__uiPosition"].setValue( imath.V2f( 45.1973228, 156.27034 ) )
__children["Backdrop7"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -37.4451256, -19.9410095 ), imath.V2f( 43.4451256, 25.9410095 ) ) )
__children["ShaderTweaks"]["in"].setInput( __children["Dot"]["out"] )
__children["ShaderTweaks"]["filter"].setInput( __children["PathFilter2"]["out"] )
__children["ShaderTweaks"]["shader"].setValue( 'cycles:surface' )
__children["ShaderTweaks"]["tweaks"]["roughness"]["name"].setValue( 'roughness' )
__children["ShaderTweaks"]["tweaks"]["roughness"]["value"].setValue( 0.10000000149011612 )
__children["ShaderTweaks"]["__uiPosition"].setValue( imath.V2f( -44.1000366, 91.7172546 ) )
__children["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter2"]["__uiPosition"].setValue( imath.V2f( -30.8247299, 98.4154205 ) )
__children["Backdrop8"]["title"].setValue( 'A Basic Tweak To The Surface Shader' )
__children["Backdrop8"]["description"].setValue( 'This tweak was created by:\n* creating a ShaderTweaks node\n* filtering to /sphere\n* setting the "shader" setting to "Cycles Surface", so that it knows what kind of shader to target\n* clicking the "+" button, choosing "From Affected", and navigating to the roughness parameter' )
__children["Backdrop8"]["__uiPosition"].setValue( imath.V2f( -66.1594467, 106.003471 ) )
__children["Backdrop8"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -15, -23.6519547 ), imath.V2f( 47.9447174, 14.1233864 ) ) )
__children["Dot"]["in"].setInput( __children["Dot2"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( -44.1000366, 99.0492859 ) )
__children["Dot1"]["in"].setInput( __children["Parent"]["out"] )
__children["Dot1"]["__uiPosition"].setValue( imath.V2f( -21.423481, 117.248367 ) )
__children["Dot2"]["in"].setInput( __children["Dot1"]["out"] )
__children["Dot2"]["__uiPosition"].setValue( imath.V2f( -21.4234791, 105.549286 ) )
__children["ShaderTweaks1"]["in"].setInput( __children["Dot3"]["out"] )
__children["ShaderTweaks1"]["filter"].setInput( __children["PathFilter3"]["out"] )
__children["ShaderTweaks1"]["shader"].setValue( 'cycles:surface' )
__children["ShaderTweaks1"]["tweaks"]["image_texture_tex_mapping__scale"]["name"].setValue( 'image_texture.tex_mapping__scale' )
__children["ShaderTweaks1"]["tweaks"]["image_texture_tex_mapping__scale"]["mode"].setValue( 3 )
__children["ShaderTweaks1"]["tweaks"]["image_texture_tex_mapping__scale"]["value"].setValue( imath.V3f( 0.5, 0.5, 0.5 ) )
__children["ShaderTweaks1"]["__uiPosition"].setValue( imath.V2f( 26.9852219, 91.4676056 ) )
__children["PathFilter3"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter3"]["__uiPosition"].setValue( imath.V2f( 40.2605286, 98.1657715 ) )
__children["Backdrop9"]["title"].setValue( 'Any Shader In The Network Can Be Targeted' )
__children["Backdrop9"]["description"].setValue( 'Here we target the scale of the texture shader. We can also use special modes like "Multiply" to make adjustments relative to the current values.' )
__children["Backdrop9"]["__uiPosition"].setValue( imath.V2f( 4.92581177, 105.753822 ) )
__children["Backdrop9"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -15, -23.6519547 ), imath.V2f( 47.9447174, 14.1233864 ) ) )
__children["Dot3"]["in"].setInput( __children["Dot5"]["out"] )
__children["Dot3"]["__uiPosition"].setValue( imath.V2f( 26.9852219, 98.7996368 ) )
__children["Dot4"]["in"].setInput( __children["Parent"]["out"] )
__children["Dot4"]["__uiPosition"].setValue( imath.V2f( 49.6617737, 116.998726 ) )
__children["Dot5"]["in"].setInput( __children["Dot4"]["out"] )
__children["Dot5"]["__uiPosition"].setValue( imath.V2f( 49.6617737, 105.299637 ) )
__children["ShaderTweaks2"]["in"].setInput( __children["Dot6"]["out"] )
__children["ShaderTweaks2"]["filter"].setInput( __children["PathFilter4"]["out"] )
__children["ShaderTweaks2"]["shader"].setValue( 'cycles:surface' )
__children["ShaderTweaks2"]["tweaks"]["emission_strength"]["name"].setValue( 'emission_strength' )
__children["ShaderTweaks2"]["tweaks"]["emission_strength"]["value"].setValue( 0.30000001192092896 )
__children["ShaderTweaks2"]["tweaks"]["emission_color"]["name"].setValue( 'emission_color' )
Gaffer.Metadata.registerValue( __children["ShaderTweaks2"]["tweaks"]["emission_color"], 'noduleLayout:visible', True )
__children["ShaderTweaks2"]["tweaks"]["emission_color"]["value"].setInput( __children["rgb_ramp"]["out"]["color"] )
__children["ShaderTweaks2"]["__uiPosition"].setValue( imath.V2f( 97.2128067, 91.651329 ) )
__children["PathFilter4"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter4"]["__uiPosition"].setValue( imath.V2f( 110.488113, 98.3494949 ) )
__children["Backdrop10"]["title"].setValue( 'New Shaders Can Be Connected' )
__children["Backdrop10"]["description"].setValue( 'Here we add a tweak on emission_color, create a new noise shader, and drag a connection to the "+" icon on the ShaderTweaks node in the Graph Editor.\n\nThere is also a ramp inserted here, illustrating that arbitrary networks of new shaders can be connected.' )
__children["Backdrop10"]["__uiPosition"].setValue( imath.V2f( 75.1533966, 105.937546 ) )
__children["Backdrop10"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -15, -23.6519547 ), imath.V2f( 47.9447174, 14.1233864 ) ) )
__children["Dot6"]["in"].setInput( __children["Dot8"]["out"] )
__children["Dot6"]["__uiPosition"].setValue( imath.V2f( 97.2128067, 98.9833603 ) )
__children["Dot7"]["in"].setInput( __children["Parent"]["out"] )
__children["Dot7"]["__uiPosition"].setValue( imath.V2f( 119.889359, 117.182449 ) )
__children["Dot8"]["in"].setInput( __children["Dot7"]["out"] )
__children["Dot8"]["__uiPosition"].setValue( imath.V2f( 119.889359, 105.48336 ) )
__children["noise_texture"]["parameters"]["scale"].setValue( 4.0 )
__children["noise_texture"]["__uiPosition"].setValue( imath.V2f( 67.4756851, 91.0513306 ) )
__children["rgb_ramp"]["parameters"]["ramp"]["p0"]["x"].setValue( 0.3123359680175781 )
__children["rgb_ramp"]["parameters"]["ramp"]["p0"]["y"].setValue( imath.Color3f( 1, 0, 0 ) )
__children["rgb_ramp"]["parameters"]["ramp"]["p1"]["x"].setValue( 0.6010498404502869 )
__children["rgb_ramp"]["parameters"]["ramp"]["p1"]["y"].setValue( imath.Color3f( 0, 0.685185194, 1 ) )
__children["rgb_ramp"]["parameters"]["ramp"]["p2"]["x"].setValue( 0.5039370059967041 )
__children["rgb_ramp"]["parameters"]["ramp"]["p2"]["y"].setValue( imath.Color3f( 0.0679012537, 1, 0.0824652985 ) )
__children["rgb_ramp"]["parameters"]["fac"].setInput( __children["noise_texture"]["out"]["fac"] )
__children["rgb_ramp"]["__uiPosition"].setValue( imath.V2f( 83.2816544, 91.651329 ) )
__children["ShaderTweaks3"]["in"].setInput( __children["Dot9"]["out"] )
__children["ShaderTweaks3"]["filter"].setInput( __children["PathFilter5"]["out"] )
__children["ShaderTweaks3"]["shader"].setValue( 'cycles:surface' )
__children["ShaderTweaks3"]["tweaks"]["base_color"]["name"].setValue( 'base_color' )
Gaffer.Metadata.registerValue( __children["ShaderTweaks3"]["tweaks"]["base_color"], 'noduleLayout:visible', True )
__children["ShaderTweaks3"]["tweaks"]["base_color"]["value"].setInput( __children["brightness_contrast"]["out"]["color"] )
__children["ShaderTweaks3"]["__uiPosition"].setValue( imath.V2f( 184.99176, 91.927948 ) )
__children["PathFilter5"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter5"]["__uiPosition"].setValue( imath.V2f( 198.267075, 98.6261139 ) )
__children["Backdrop11"]["title"].setValue( 'Proxy Nodes Allow Inserting Shaders Into Existing Connections' )
__children["Backdrop11"]["description"].setValue( 'Here we use an auto proxy to insert a contrast node on the base_color parameter.\n\nWe create the tweak, then click on the proxy button on the far right of the ShaderTweak\'s node parameters in the Node Editor ( this menu can also be accessed by right clicking any shader input plug in the Graph Editor ).\n\nHere, we just selected "Auto" from this menu, which allows forming a connection from whatever was originally connected to the shader parameter we are tweaking. We use this reduce the contrast of whatever is connected to the base_color parameter.' )
__children["Backdrop11"]["__uiPosition"].setValue( imath.V2f( 162.932358, 106.214165 ) )
__children["Backdrop11"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -33.770874, -23.6519547 ), imath.V2f( 47.9447174, 14.1233864 ) ) )
__children["Dot9"]["in"].setInput( __children["Dot11"]["out"] )
__children["Dot9"]["__uiPosition"].setValue( imath.V2f( 184.99176, 99.2599792 ) )
__children["Dot10"]["in"].setInput( __children["Parent"]["out"] )
__children["Dot10"]["__uiPosition"].setValue( imath.V2f( 207.66832, 117.459076 ) )
__children["Dot11"]["in"].setInput( __children["Dot10"]["out"] )
__children["Dot11"]["__uiPosition"].setValue( imath.V2f( 207.66832, 105.759979 ) )
__children["Auto"]["__uiPosition"].setValue( imath.V2f( 153.224182, 93.1279449 ) )
__children["brightness_contrast"]["parameters"]["color"].setInput( __children["Auto"]["out"]["auto"] )
__children["brightness_contrast"]["parameters"]["contrast"].setValue( -0.6899999976158142 )
__children["brightness_contrast"]["__uiPosition"].setValue( imath.V2f( 168.096741, 91.927948 ) )
__children["ShaderTweaks4"]["in"].setInput( __children["Dot12"]["out"] )
__children["ShaderTweaks4"]["filter"].setInput( __children["PathFilter6"]["out"] )
__children["ShaderTweaks4"]["shader"].setValue( 'cycles:surface' )
__children["ShaderTweaks4"]["tweaks"]["base_color"]["name"].setValue( 'emission_color' )
__children["ShaderTweaks4"]["tweaks"]["emission_strength"]["name"].setValue( 'emission_strength' )
__children["ShaderTweaks4"]["tweaks"]["emission_strength"]["value"].setValue( 0.25 )
Gaffer.Metadata.registerValue( __children["ShaderTweaks4"]["tweaks"]["base_color"], 'noduleLayout:visible', True )
__children["ShaderTweaks4"]["tweaks"]["base_color"]["value"].setInput( __children["image_texture1"]["out"]["color"] )
__children["ShaderTweaks4"]["__uiPosition"].setValue( imath.V2f( 269.956543, 91.877861 ) )
__children["PathFilter6"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter6"]["__uiPosition"].setValue( imath.V2f( 283.231934, 98.5760269 ) )
__children["Backdrop12"]["title"].setValue( 'Proxy Nodes Can Also Grab Specific Input Shaders' )
__children["Backdrop12"]["description"].setValue( 'Here, instead of using an auto proxy, we select "From Affected" from the proxy menu, and choose the shader "image_texture".\n\nWe use this to find a node anywhere in the input network named "image_texture", and use it in our tweaks, in addition to whatever it was already connected to. Here we use this texture to drive emission_color as well.' )
__children["Backdrop12"]["__uiPosition"].setValue( imath.V2f( 247.897064, 106.164078 ) )
__children["Backdrop12"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -33.770874, -23.6519547 ), imath.V2f( 47.9447174, 14.1233864 ) ) )
__children["Dot12"]["in"].setInput( __children["Dot14"]["out"] )
__children["Dot12"]["__uiPosition"].setValue( imath.V2f( 269.956543, 99.2098923 ) )
__children["Dot13"]["in"].setInput( __children["Parent"]["out"] )
__children["Dot13"]["__uiPosition"].setValue( imath.V2f( 292.633179, 117.408997 ) )
__children["Dot14"]["in"].setInput( __children["Dot13"]["out"] )
__children["Dot14"]["__uiPosition"].setValue( imath.V2f( 292.633179, 105.709892 ) )
__children["image_texture1"]["parameters"]["targetShader"].setValue( 'image_texture' )
__children["image_texture1"]["__uiPosition"].setValue( imath.V2f( 249.956543, 91.877861 ) )


del __children

