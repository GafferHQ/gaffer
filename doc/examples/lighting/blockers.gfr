import Gaffer
import GafferArnold
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 13, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"] = Gaffer.Box( "GeometrySetup" )
parent.addChild( __children["GeometrySetup"] )
__children["GeometrySetup"].addChild( GafferScene.Plane( "Plane" ) )
__children["GeometrySetup"]["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"].addChild( GafferScene.Sphere( "Sphere" ) )
__children["GeometrySetup"]["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"].addChild( GafferScene.Sphere( "Sphere1" ) )
__children["GeometrySetup"]["Sphere1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"].addChild( GafferScene.Group( "Group1" ) )
__children["GeometrySetup"]["Group1"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"]["Group1"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"]["Group1"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"]["Group1"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"]["Group1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"].addChild( GafferScene.Sphere( "Sphere3" ) )
__children["GeometrySetup"]["Sphere3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["GeometrySetup"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["GeometrySetup"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["GeometrySetup"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GeometrySetup"].addChild( GafferArnold.ArnoldShader( "standard_surface" ) )
__children["GeometrySetup"]["standard_surface"].loadShader( "standard_surface" )
__children["GeometrySetup"]["standard_surface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output4"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output4"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output5"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output5"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group_Blockers"] = GafferScene.Group( "Group_Blockers" )
parent.addChild( __children["Group_Blockers"] )
__children["Group_Blockers"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group_Blockers"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group_Blockers"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["light_blocker2"] = GafferArnold.ArnoldLightFilter( "light_blocker2" )
parent.addChild( __children["light_blocker2"] )
__children["light_blocker2"].loadShader( "light_blocker" )
__children["light_blocker2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["light_blocker1"] = GafferArnold.ArnoldLightFilter( "light_blocker1" )
parent.addChild( __children["light_blocker1"] )
__children["light_blocker1"].loadShader( "light_blocker" )
__children["light_blocker1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DistantLight_Green"] = GafferArnold.ArnoldLight( "DistantLight_Green" )
parent.addChild( __children["DistantLight_Green"] )
__children["DistantLight_Green"].loadShader( "distant_light" )
__children["DistantLight_Green"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DistantLight_Red"] = GafferArnold.ArnoldLight( "DistantLight_Red" )
parent.addChild( __children["DistantLight_Red"] )
__children["DistantLight_Red"].loadShader( "distant_light" )
__children["DistantLight_Red"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ArnoldOptions"] = GafferArnold.ArnoldOptions( "ArnoldOptions" )
parent.addChild( __children["ArnoldOptions"] )
__children["ArnoldOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DistantLight_Blue"] = GafferArnold.ArnoldLight( "DistantLight_Blue" )
parent.addChild( __children["DistantLight_Blue"] )
__children["DistantLight_Blue"].loadShader( "distant_light" )
__children["DistantLight_Blue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["cell_noise"] = GafferArnold.ArnoldShader( "cell_noise" )
parent.addChild( __children["cell_noise"] )
__children["cell_noise"].loadShader( "cell_noise" )
__children["cell_noise"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Lights"] = GafferScene.Group( "Lights" )
parent.addChild( __children["Lights"] )
__children["Lights"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Lights"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Lights"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Lights"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"] = Gaffer.Backdrop( "Backdrop3" )
parent.addChild( __children["Backdrop3"] )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"] = Gaffer.Backdrop( "Backdrop4" )
parent.addChild( __children["Backdrop4"] )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["InteractiveRender"] = GafferScene.InteractiveRender( "InteractiveRender" )
parent.addChild( __children["InteractiveRender"] )
__children["InteractiveRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 73.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 45731 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Camera"]["transform"]["translate"].setValue( imath.V3f( 1.07284272, 3.19947052, 5.10207367 ) )
__children["Camera"]["transform"]["rotate"].setValue( imath.V3f( -21.5621605, 0.882237434, 1.70754686e-06 ) )
__children["Camera"]["transform"]["scale"].setValue( imath.V3f( 1, 1.00000012, 1.00000036 ) )
__children["Camera"]["renderSettingOverrides"]["resolution"]["value"].setValue( imath.V2i( 800, 400 ) )
__children["Camera"]["renderSettingOverrides"]["resolution"]["enabled"].setValue( True )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( 60.5371284, 3.77274036 ) )
__children["GeometrySetup"]["Plane"]["transform"]["translate"].setValue( imath.V3f( 0, 0, -3.7341547 ) )
__children["GeometrySetup"]["Plane"]["transform"]["rotate"].setValue( imath.V3f( 90, 0, 0 ) )
__children["GeometrySetup"]["Plane"]["transform"]["scale"]["x"].setValue( 10.0 )
__children["GeometrySetup"]["Plane"]["transform"]["scale"]["y"].setInput( __children["GeometrySetup"]["Plane"]["transform"]["scale"]["x"] )
__children["GeometrySetup"]["Plane"]["transform"]["scale"]["z"].setInput( __children["GeometrySetup"]["Plane"]["transform"]["scale"]["x"] )
__children["GeometrySetup"]["Plane"]["dimensions"].setValue( imath.V2f( 10, 10 ) )
__children["GeometrySetup"]["Plane"]["__uiPosition"].setValue( imath.V2f( 43.1030617, 16.1177139 ) )
__children["GeometrySetup"]["Sphere"]["transform"]["translate"].setValue( imath.V3f( 0.626608133, 1, -1.14501953 ) )
__children["GeometrySetup"]["Sphere"]["__uiPosition"].setValue( imath.V2f( 46.1030617, 27.8737125 ) )
__children["GeometrySetup"]["Sphere1"]["transform"]["translate"].setValue( imath.V3f( 1.68592548, 0.5, -0.0175749063 ) )
__children["GeometrySetup"]["Sphere1"]["transform"]["scale"]["x"].setValue( 0.5 )
__children["GeometrySetup"]["Sphere1"]["transform"]["scale"]["y"].setInput( __children["GeometrySetup"]["Sphere1"]["transform"]["scale"]["x"] )
__children["GeometrySetup"]["Sphere1"]["transform"]["scale"]["z"].setInput( __children["GeometrySetup"]["Sphere1"]["transform"]["scale"]["x"] )
__children["GeometrySetup"]["Sphere1"]["__uiPosition"].setValue( imath.V2f( 49.1030617, 21.2543259 ) )
__children["GeometrySetup"]["Group1"]["in"][0].setInput( __children["GeometrySetup"]["Plane"]["out"] )
__children["GeometrySetup"]["Group1"]["in"][1].setInput( __children["GeometrySetup"]["Sphere"]["out"] )
__children["GeometrySetup"]["Group1"]["in"][2].setInput( __children["GeometrySetup"]["Sphere1"]["out"] )
__children["GeometrySetup"]["Group1"]["in"][3].setInput( __children["GeometrySetup"]["Sphere3"]["out"] )
__children["GeometrySetup"]["Group1"]["name"].setValue( 'geometry' )
__children["GeometrySetup"]["Group1"]["__uiPosition"].setValue( imath.V2f( 49.1030617, 1.59055901 ) )
__children["GeometrySetup"]["Sphere3"]["transform"]["translate"].setValue( imath.V3f( 0.932545185, 0.25, -0.126304746 ) )
__children["GeometrySetup"]["Sphere3"]["transform"]["scale"]["x"].setValue( 0.25 )
__children["GeometrySetup"]["Sphere3"]["transform"]["scale"]["y"].setInput( __children["GeometrySetup"]["Sphere3"]["transform"]["scale"]["x"] )
__children["GeometrySetup"]["Sphere3"]["transform"]["scale"]["z"].setInput( __children["GeometrySetup"]["Sphere3"]["transform"]["scale"]["x"] )
__children["GeometrySetup"]["Sphere3"]["__uiPosition"].setValue( imath.V2f( 52.1030617, 14.0475988 ) )
__children["GeometrySetup"]["__uiPosition"].setValue( imath.V2f( 35.8358803, -2.27064228 ) )
__children["GeometrySetup"]["BoxOut"]["in"].setInput( __children["GeometrySetup"]["ShaderAssignment"]["out"] )
Gaffer.Metadata.registerValue( __children["GeometrySetup"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["GeometrySetup"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["GeometrySetup"]["BoxOut"]["__out"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
__children["GeometrySetup"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 50.6030617, -14.625495 ) )
__children["GeometrySetup"]["out"].setInput( __children["GeometrySetup"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["GeometrySetup"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["GeometrySetup"]["out"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["GeometrySetup"]["out"], 'noduleLayout:section', 'bottom' )
__children["GeometrySetup"]["ShaderAssignment"]["in"].setInput( __children["GeometrySetup"]["Group1"]["out"] )
__children["GeometrySetup"]["ShaderAssignment"]["shader"].setInput( __children["GeometrySetup"]["standard_surface"]["out"] )
__children["GeometrySetup"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 49.1030617, -6.29346323 ) )
__children["GeometrySetup"]["standard_surface"]["parameters"]["base"].setValue( 0.8999999761581421 )
__children["GeometrySetup"]["standard_surface"]["__uiPosition"].setValue( imath.V2f( 22.4015274, -6.29346323 ) )
__children["Group"]["in"][0].setInput( __children["GeometrySetup"]["out"] )
__children["Group"]["in"][1].setInput( __children["Lights"]["out"] )
__children["Group"]["in"][2].setInput( __children["Camera"]["out"] )
__children["Group"]["in"][3].setInput( __children["Group_Blockers"]["out"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( 54.2914925, -10.6026735 ) )
__children["StandardOptions"]["in"].setInput( __children["ArnoldOptions"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/group/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 800, 400 ) )
__children["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 54.2914925, -27.2889099 ) )
__children["Outputs"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["outputs"]["output2"]["name"].setValue( 'Interactive/Arnold/Direct' )
__children["Outputs"]["outputs"]["output2"]["active"].setValue( False )
__children["Outputs"]["outputs"]["output2"]["fileName"].setValue( 'direct' )
__children["Outputs"]["outputs"]["output2"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output2"]["data"].setValue( 'color direct' )
__children["Outputs"]["outputs"]["output3"]["name"].setValue( 'Interactive/Arnold/Indirect' )
__children["Outputs"]["outputs"]["output3"]["active"].setValue( False )
__children["Outputs"]["outputs"]["output3"]["fileName"].setValue( 'indirect' )
__children["Outputs"]["outputs"]["output3"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output3"]["data"].setValue( 'color indirect' )
__children["Outputs"]["outputs"]["output4"]["name"].setValue( 'Interactive/Arnold/Specular' )
__children["Outputs"]["outputs"]["output4"]["active"].setValue( False )
__children["Outputs"]["outputs"]["output4"]["fileName"].setValue( 'specular' )
__children["Outputs"]["outputs"]["output4"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output4"]["data"].setValue( 'color specular' )
__children["Outputs"]["outputs"]["output5"]["name"].setValue( 'Interactive/Arnold/Diffuse_Direct' )
__children["Outputs"]["outputs"]["output5"]["active"].setValue( False )
__children["Outputs"]["outputs"]["output5"]["fileName"].setValue( 'diffuse_direct' )
__children["Outputs"]["outputs"]["output5"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output5"]["data"].setValue( 'color diffuse_direct' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( 54.3000107, -35.4529724 ) )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/examples/blockers' )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( 38.1320343, -43.5129089 ) )
__children["Group_Blockers"]["in"][0].setInput( __children["light_blocker1"]["out"] )
__children["Group_Blockers"]["in"][1].setInput( __children["Dot"]["out"] )
__children["Group_Blockers"]["name"].setValue( 'blockers' )
__children["Group_Blockers"]["__uiPosition"].setValue( imath.V2f( 146.407104, -2.43861103 ) )
__children["light_blocker2"]["enabled"].setValue( False )
__children["light_blocker2"]["transform"]["translate"].setValue( imath.V3f( -2, 0.5, -1 ) )
__children["light_blocker2"]["transform"]["rotate"].setValue( imath.V3f( 90, 0, 0 ) )
__children["light_blocker2"]["filteredLights"].setValue( 'defaultLights' )
__children["light_blocker2"]["parameters"]["density"].setValue( 0.75 )
__children["light_blocker2"]["parameters"]["shader"].setInput( __children["cell_noise"]["out"] )
__children["light_blocker2"]["__uiPosition"].setValue( imath.V2f( 181.505569, 14.3444405 ) )
__children["light_blocker1"]["enabled"].setValue( False )
__children["light_blocker1"]["transform"]["translate"].setValue( imath.V3f( 1.66539788, 0.534677863, 0 ) )
__children["light_blocker1"]["filteredLights"].setValue( 'red' )
__children["light_blocker1"]["parameters"]["geometry_type"].setValue( 'cylinder' )
__children["light_blocker1"]["parameters"]["density"].setValue( 1.0 )
__children["light_blocker1"]["parameters"]["width_edge"].setValue( 1.0 )
__children["light_blocker1"]["parameters"]["height_edge"].setValue( 1.0 )
__children["light_blocker1"]["__uiPosition"].setValue( imath.V2f( 124.407936, 5.72545147 ) )
__children["DistantLight_Green"]["name"].setValue( 'distant' )
__children["DistantLight_Green"]["sets"].setValue( 'green' )
__children["DistantLight_Green"]["transform"]["translate"].setValue( imath.V3f( 0, 5, 2 ) )
__children["DistantLight_Green"]["transform"]["rotate"].setValue( imath.V3f( -45, 0, 0 ) )
__children["DistantLight_Green"]["parameters"]["color"].setValue( imath.Color3f( 0.75, 1, 0.75 ) )
__children["DistantLight_Green"]["__uiPosition"].setValue( imath.V2f( 63.4069824, 19.1052265 ) )
__children["DistantLight_Red"]["sets"].setValue( 'red' )
__children["DistantLight_Red"]["transform"]["translate"].setValue( imath.V3f( 2, 5, 2 ) )
__children["DistantLight_Red"]["transform"]["rotate"].setValue( imath.V3f( -30, 60, 0 ) )
__children["DistantLight_Red"]["parameters"]["color"].setValue( imath.Color3f( 1, 0.75, 0.75 ) )
__children["DistantLight_Red"]["__uiPosition"].setValue( imath.V2f( 49.7914925, 19.1052265 ) )
__children["ArnoldOptions"]["in"].setInput( __children["Group"]["out"] )
__children["ArnoldOptions"]["options"]["aaSamples"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["giDiffuseSamples"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["giTotalDepth"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["giDiffuseDepth"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["giSpecularDepth"]["enabled"].setValue( True )
__children["ArnoldOptions"]["__uiPosition"].setValue( imath.V2f( 54.2914925, -19.1248474 ) )
__children["DistantLight_Blue"]["name"].setValue( 'distant' )
__children["DistantLight_Blue"]["sets"].setValue( 'blue' )
__children["DistantLight_Blue"]["transform"]["translate"].setValue( imath.V3f( 2, 5, -2 ) )
__children["DistantLight_Blue"]["transform"]["rotate"].setValue( imath.V3f( -30, 210, 30 ) )
__children["DistantLight_Blue"]["parameters"]["color"].setValue( imath.Color3f( 0.75, 0.75, 1 ) )
__children["DistantLight_Blue"]["__uiPosition"].setValue( imath.V2f( 36.2988243, 19.1052265 ) )
__children["cell_noise"]["parameters"]["octaves"].setValue( 3 )
__children["cell_noise"]["parameters"]["lacunarity"].setValue( 4.0 )
__children["cell_noise"]["parameters"]["coord_space"].setValue( 'world' )
__children["cell_noise"]["__uiPosition"].setValue( imath.V2f( 167.815384, 14.3444405 ) )
__children["Lights"]["in"][0].setInput( __children["DistantLight_Blue"]["out"] )
__children["Lights"]["in"][1].setInput( __children["DistantLight_Red"]["out"] )
__children["Lights"]["in"][2].setInput( __children["DistantLight_Green"]["out"] )
__children["Lights"]["name"].setValue( 'lights' )
__children["Lights"]["__uiPosition"].setValue( imath.V2f( 51.2914925, 10.941164 ) )
__children["Backdrop"]["title"].setValue( 'Example: Blockers (Arnold)' )
__children["Backdrop"]["scale"].setValue( 1.5 )
__children["Backdrop"]["description"].setValue( 'This basic example shows how to set up blockers for rendering in Arnold.\n\nA blocker is a light filter that can be transformed in world space to block one or more lights over a chosen area. Unlike other filters like gobos, a blocker does not work in light space, and can affect multiple lights at once.' )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 60, 35 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -13, 40 ) )
__children["Backdrop1"]["title"].setValue( 'Basic blocker' )
__children["Backdrop1"]["description"].setValue( "By default, a blocker won't affect any lights; you must explicitly link it to one or more lights using a set expression in its Filtered Lights plug. For this example, we're only going to block the red light, so the plug's value is `red`, the set name that we assigned the red light to.\n\nOnce that's done, you can specify the blocker's shape. For this blocker, we use a cylindrical shape to block the light around the medium-sized sphere.\n\nTo preview the effect of the blocker in the interactive render, enable the light_blocker1 node." )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 40, 52.5 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( 102, 2.25 ) )
__children["Dot"]["in"].setInput( __children["light_blocker2"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( 181.505569, 4.89342022 ) )
__children["Backdrop2"]["title"].setValue( 'Shaded blocker' )
__children["Backdrop2"]["description"].setValue( 'This second blocker filters light across the scene based on a shaded pattern, not dissimilar to a gobo. To achieve this, we simply drive a noise shader into the shader input plug of the blocker node.\n\nNotice how this blocker is linked to all lights in the scene, because it specifies the "defaultLights" set for light linking.\n\nBy default, the shader is computed in world space, so the blocker\'s position has no effect on the filtered pattern. You can, however, compute the shader in UV space instead, which allows you to move the blocker around to fine-tune the position of the pattern. To achieve this, switch the shader\'s Coord Space plug to `uv`, and the blocker\'s Geometry Type plug to `box`. Only the `box` geometry type will make the blocker output UVs for the shader to use.\n\nTo preview the effect of the blocker in the interactive render, enable the light_blocker2 node.' )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 40, 52.5 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( 154, 2.25 ) )
__children["Backdrop3"]["title"].setValue( '' )
__children["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -75.7590408 ), imath.V2f( 73.3785248, 10 ) ) )
__children["Backdrop3"]["__uiPosition"].setValue( imath.V2f( -3.36837387, 28.0394897 ) )
__children["Backdrop4"]["title"].setValue( 'Basic scene setup' )
__children["Backdrop4"]["description"].setValue( 'Here we set up the scene, adding 3 lights with red, green and blue tints, respectively. We assign them to sets that are named accordingly, which the blockers at the rightmost branches of the graph will reference.\n\nTo preview the scene:\n\n1. Select the InteractiveRender node.\n2. Click play.\n3. Select or pin the Catalogue node to the Viewer.' )
__children["Backdrop4"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -25.8343964 ), imath.V2f( 28.6050339, 10 ) ) )
__children["Backdrop4"]["__uiPosition"].setValue( imath.V2f( -3.16717243, 27.6402206 ) )
__children["InteractiveRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["InteractiveRender"]["renderer"].setValue( 'Arnold' )
__children["InteractiveRender"]["__uiPosition"].setValue( imath.V2f( 54.3000107, -43.6170349 ) )


del __children

