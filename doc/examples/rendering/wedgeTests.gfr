import Gaffer
import GafferCycles
import GafferDispatch
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 13, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Wedge"] = GafferDispatch.Wedge( "Wedge" )
parent.addChild( __children["Wedge"] )
__children["Wedge"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Wedge"]["ramp"].clearPoints()
__children["Wedge"]["ramp"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Wedge"]["ramp"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Wedge"]["ramp"]["p0"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Wedge"]["ramp"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Wedge"]["ramp"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Wedge"]["ramp"]["p1"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Wedge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"] = GafferScene.Outputs( "Outputs2" )
parent.addChild( __children["Outputs2"] )
__children["Outputs2"]["outputs"].addChild( Gaffer.ValuePlug( "output2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs2"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs2"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs2"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs2"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextVariables"] = Gaffer.ContextVariables( "ContextVariables" )
parent.addChild( __children["ContextVariables"] )
__children["ContextVariables"].setup( GafferScene.ScenePlug( "in", ) )
__children["ContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter"] = GafferImage.ImageWriter( "ImageWriter" )
parent.addChild( __children["ImageWriter"] )
__children["ImageWriter"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader"] = GafferImage.ImageReader( "ImageReader" )
parent.addChild( __children["ImageReader"] )
__children["ImageReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Text"] = GafferImage.Text( "Text" )
parent.addChild( __children["Text"] )
__children["Text"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"] = Gaffer.Box( "Scene" )
parent.addChild( __children["Scene"] )
__children["Scene"].addChild( GafferScene.Sphere( "Sphere" ) )
__children["Scene"]["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Plane( "Plane" ) )
__children["Scene"]["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Camera( "Camera" ) )
__children["Scene"]["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Scene"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Scene"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Scene"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment_Plane" ) )
__children["Scene"]["ShaderAssignment_Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["ShaderAssignment_Plane"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferCycles.CyclesShader( "principled_bsdf" ) )
__children["Scene"]["principled_bsdf"].loadShader( "principled_bsdf" )
__children["Scene"]["principled_bsdf"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferCycles.CyclesLight( "background_light" ) )
__children["Scene"]["background_light"].loadShader( "background_light" )
__children["Scene"]["background_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferCycles.CyclesShader( "environment_texture" ) )
__children["Scene"]["environment_texture"].loadShader( "environment_texture" )
__children["Scene"]["environment_texture"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Parent( "Parent" ) )
__children["Scene"]["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Parent"]["children"].addChild( GafferScene.ScenePlug( "child2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Parent"]["children"].addChild( GafferScene.ScenePlug( "child3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SystemCommand"] = GafferDispatch.SystemCommand( "SystemCommand" )
parent.addChild( __children["SystemCommand"] )
__children["SystemCommand"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SystemCommand"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"] = Gaffer.Backdrop( "Backdrop3" )
parent.addChild( __children["Backdrop3"] )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"] = Gaffer.Backdrop( "Backdrop4" )
parent.addChild( __children["Backdrop4"] )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"] = Gaffer.Backdrop( "Backdrop5" )
parent.addChild( __children["Backdrop5"] )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"] = Gaffer.Backdrop( "Backdrop6" )
parent.addChild( __children["Backdrop6"] )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"] = Gaffer.Backdrop( "Backdrop7" )
parent.addChild( __children["Backdrop7"] )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound4", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader1"] = GafferImage.ImageReader( "ImageReader1" )
parent.addChild( __children["ImageReader1"] )
__children["ImageReader1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop8"] = Gaffer.Backdrop( "Backdrop8" )
parent.addChild( __children["Backdrop8"] )
__children["Backdrop8"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop8"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop9"] = Gaffer.Backdrop( "Backdrop9" )
parent.addChild( __children["Backdrop9"] )
__children["Backdrop9"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop9"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop9"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop9"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"] = Gaffer.Backdrop( "Backdrop10" )
parent.addChild( __children["Backdrop10"] )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound4", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"] = Gaffer.Backdrop( "Backdrop11" )
parent.addChild( __children["Backdrop11"] )
__children["Backdrop11"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"] = Gaffer.Backdrop( "Backdrop12" )
parent.addChild( __children["Backdrop12"] )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound4", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"] = Gaffer.Backdrop( "Backdrop13" )
parent.addChild( __children["Backdrop13"] )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound4", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound5", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop14"] = Gaffer.Backdrop( "Backdrop14" )
parent.addChild( __children["Backdrop14"] )
__children["Backdrop14"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop14"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["principled_bsdf"] = GafferCycles.CyclesShader( "principled_bsdf" )
parent.addChild( __children["principled_bsdf"] )
__children["principled_bsdf"].loadShader( "principled_bsdf" )
__children["principled_bsdf"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextQuery"] = Gaffer.ContextQuery( "ContextQuery" )
parent.addChild( __children["ContextQuery"] )
__children["ContextQuery"].addQuery( Gaffer.FloatPlug( "value", defaultValue = 0.0, ) )
__children["ContextQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["Render"] = GafferScene.Render( "Render" )
parent.addChild( __children["Render"] )
__children["Render"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InteractiveRender"] = GafferScene.InteractiveRender( "InteractiveRender" )
parent.addChild( __children["InteractiveRender"] )
__children["InteractiveRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frameRange"]["start"].setValue( 0 )
parent["frameRange"]["end"].setValue( 4 )
parent["frame"].setValue( 0.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 44117 )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
__children["defaultFormat"].setValue( GafferImage.Format( 1920, 1080, 1.000 ) )
__children["ShaderAssignment"]["in"].setInput( __children["Scene"]["out"] )
__children["ShaderAssignment"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["principled_bsdf"]["out"]["BSDF"] )
__children["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 36.2674637, 3.79905796 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 49.6360474, 11.2114239 ) )
Gaffer.Metadata.registerValue( __children["Wedge"], 'annotation:greeting:text', 'Execute me' )
Gaffer.Metadata.registerValue( __children["Wedge"], 'annotation:greeting:color', imath.Color3f( 0, 0.400000006, 0 ) )
__children["Wedge"]["preTasks"][0].setInput( __children["SystemCommand"]["task"] )
__children["Wedge"]["variable"].setValue( 'wedge:metallic' )
__children["Wedge"]["indexVariable"].setValue( 'wedge:metallicIndex' )
__children["Wedge"]["floatSteps"].setValue( 5 )
__children["Wedge"]["ramp"]["p1"]["x"].setValue( 1.0 )
__children["Wedge"]["ramp"]["p1"]["y"].setValue( imath.Color3f( 1, 1, 1 ) )
__children["Wedge"]["__uiPosition"].setValue( imath.V2f( 38.367466, -152.390381 ) )
__children["Backdrop1"]["title"].setValue( 'Example: Wedge Tests' )
__children["Backdrop1"]["scale"].setValue( 1.5 )
__children["Backdrop1"]["description"].setValue( 'In this example, we show how to use the Wedge node to render a scene multiple times with varying shader values.' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -38.3865891, 92.0714722 ), imath.V2f( 21.8798447, 114.615646 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -15.2881737, -66.5774078 ) )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/examples/wedgeTests' )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( 2.16985226, -45.2670555 ) )
__children["Outputs2"]["in"].setInput( __children["ContextVariables"]["out"] )
__children["Outputs2"]["outputs"]["output2"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs2"]["outputs"]["output2"]["fileName"].setValue( 'beauty' )
__children["Outputs2"]["outputs"]["output2"]["type"].setValue( 'ieDisplay' )
__children["Outputs2"]["outputs"]["output2"]["data"].setValue( 'rgba' )
__children["Outputs2"]["__uiPosition"].setValue( imath.V2f( 17.4861603, -39.4938202 ) )
__children["ContextVariables"]["variables"]["member1"]["name"].setValue( 'wedge:metallic' )
__children["ContextVariables"]["variables"]["member1"]["value"].setValue( 0.5 )
__children["ContextVariables"]["in"].setInput( __children["StandardOptions"]["out"] )
Gaffer.Metadata.registerValue( __children["ContextVariables"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContextVariables"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContextVariables"]["__uiPosition"].setValue( imath.V2f( 17.4861603, -25.5214729 ) )
__children["ImageWriter"]["preTasks"][0].setInput( __children["Render"]["task"] )
__children["ImageWriter"]["in"].setInput( __children["Text"]["out"] )
__children["ImageWriter"]["fileName"].setValue( '${project:rootDirectory}/renders/examples/wedgeTests/beauty/output.${wedge:metallicIndex}.exr' )
__children["ImageWriter"]["__uiPosition"].setValue( imath.V2f( 36.9674606, -112.001328 ) )
__children["ImageReader"]["fileName"].setInput( __children["Outputs"]["outputs"]["output1"]["fileName"] )
__children["ImageReader"]["refreshCount"].setValue( 4 )
__children["ImageReader"]["__uiPosition"].setValue( imath.V2f( 42.4005661, -98.1732025 ) )
__children["Text"]["in"].setInput( __children["ImageReader"]["out"] )
__children["Text"]["text"].setValue( 'Metallic: ${wedge:metallic}' )
__children["Text"]["size"].setValue( imath.V2i( 10, 10 ) )
__children["Text"]["area"].setValue( imath.Box2i( imath.V2i( 5, 5 ), imath.V2i( 118, 118 ) ) )
__children["Text"]["verticalAlignment"].setValue( 0 )
__children["Text"]["__uiPosition"].setValue( imath.V2f( 42.4005661, -103.837265 ) )
__children["Scene"]["Sphere"]["transform"]["translate"].setValue( imath.V3f( 0, 1, 0 ) )
__children["Scene"]["Sphere"]["__uiPosition"].setValue( imath.V2f( -3.51795197, 42.1357956 ) )
__children["Scene"]["Plane"]["transform"]["rotate"].setValue( imath.V3f( 90, 0, 0 ) )
__children["Scene"]["Plane"]["transform"]["scale"]["x"].setValue( 10000.0 )
__children["Scene"]["Plane"]["transform"]["scale"]["y"].setInput( __children["Scene"]["Plane"]["transform"]["scale"]["x"] )
__children["Scene"]["Plane"]["transform"]["scale"]["z"].setInput( __children["Scene"]["Plane"]["transform"]["scale"]["x"] )
__children["Scene"]["Plane"]["__uiPosition"].setValue( imath.V2f( 9.77898598, 42.1357956 ) )
__children["Scene"]["out"].setInput( __children["Scene"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'description', 'The processed output scene.' )
__children["Scene"]["Camera"]["transform"]["translate"].setValue( imath.V3f( 0, 3.36919999, 3.12817955 ) )
__children["Scene"]["Camera"]["transform"]["rotate"].setValue( imath.V3f( -42.4705009, 0, 0 ) )
__children["Scene"]["Camera"]["renderSettingOverrides"]["filmFit"]["value"].setValue( 2 )
__children["Scene"]["Camera"]["renderSettingOverrides"]["filmFit"]["enabled"].setValue( True )
__children["Scene"]["Camera"]["__uiPosition"].setValue( imath.V2f( 22.6205215, 42.1660767 ) )
__children["Scene"]["BoxOut"]["in"].setInput( __children["Scene"]["ShaderAssignment_Plane"]["out"] )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Scene"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 17.0016346, -1.77281177 ) )
__children["Scene"]["__uiPosition"].setValue( imath.V2f( 37.7910919, 27.2936344 ) )
__children["Scene"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["Scene"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( 31.5343857, 22.9453182 ) )
__children["Scene"]["ShaderAssignment_Plane"]["in"].setInput( __children["Scene"]["Parent"]["out"] )
__children["Scene"]["ShaderAssignment_Plane"]["filter"].setInput( __children["Scene"]["PathFilter"]["out"] )
__children["Scene"]["ShaderAssignment_Plane"]["shader"].setInput( __children["Scene"]["principled_bsdf"]["out"]["BSDF"] )
__children["Scene"]["ShaderAssignment_Plane"]["__uiPosition"].setValue( imath.V2f( 15.5462675, 17.5742226 ) )
__children["Scene"]["principled_bsdf"]["parameters"]["base_color"].setValue( imath.Color3f( 0.379999995, 0.379999995, 0.379999995 ) )
__children["Scene"]["principled_bsdf"]["__uiPosition"].setValue( imath.V2f( -4.60822487, 17.5742226 ) )
__children["Scene"]["background_light"]["parameters"]["color"].setInput( __children["Scene"]["environment_texture"]["out"]["color"] )
__children["Scene"]["background_light"]["__uiPosition"].setValue( imath.V2f( 52.1764717, 42.9763565 ) )
__children["Scene"]["environment_texture"]["parameters"]["tex_mapping__scale"].setValue( imath.V3f( -1, 1, 1 ) )
__children["Scene"]["environment_texture"]["parameters"]["tex_mapping__y_mapping"].setValue( 'z' )
__children["Scene"]["environment_texture"]["parameters"]["tex_mapping__z_mapping"].setValue( 'y' )
__children["Scene"]["environment_texture"]["parameters"]["filename"].setValue( '${GAFFER_ROOT}/resources/hdri/studio.exr' )
__children["Scene"]["environment_texture"]["__uiPosition"].setValue( imath.V2f( 36.9630928, 41.7763596 ) )
__children["Scene"]["Parent"]["in"].setInput( __children["Scene"]["Sphere"]["out"] )
__children["Scene"]["Parent"]["parent"].setValue( '/' )
__children["Scene"]["Parent"]["children"][0].setInput( __children["Scene"]["Plane"]["out"] )
__children["Scene"]["Parent"]["children"][1].setInput( __children["Scene"]["Camera"]["out"] )
__children["Scene"]["Parent"]["children"][2].setInput( __children["Scene"]["background_light"]["out"] )
__children["Scene"]["Parent"]["__uiPosition"].setValue( imath.V2f( 15.5462685, 28.9114609 ) )
__children["Backdrop2"]["title"].setValue( '' )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.11989975, -20.6647778 ), imath.V2f( 101.870003, 14.4341869 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( -43.7835617, 8.10569572 ) )
__children["SystemCommand"]["preTasks"][0].setInput( __children["ImageWriter"]["task"] )
__children["SystemCommand"]["command"].setValue( 'rm ${project:rootDirectory}/renders/examples/wedgeTests/beauty/beauty.${wedge:metallicIndex}.exr' )
__children["SystemCommand"]["__uiPosition"].setValue( imath.V2f( 37.6674652, -132.930054 ) )
__children["Backdrop3"]["title"].setValue( '' )
__children["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -26.8199997, -27.3784466 ), imath.V2f( 65.2399979, 10.9573269 ) ) )
__children["Backdrop3"]["__uiPosition"].setValue( imath.V2f( -36.3436127, -24.4362621 ) )
__children["Backdrop4"]["title"].setValue( '' )
__children["Backdrop4"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 4.16482925, -21.0185699 ), imath.V2f( 91.8100662, 11.7199707 ) ) )
__children["Backdrop4"]["__uiPosition"].setValue( imath.V2f( -37.483078, -101.642609 ) )
__children["Outputs"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Batch/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( '${project:rootDirectory}/renders/examples/wedgeTests/beauty/beauty.${wedge:metallicIndex}.exr' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'exr' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( 36.2674637, -67.7060242 ) )
__children["Backdrop5"]["title"].setValue( '' )
__children["Backdrop5"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -13.9212952, -18 ), imath.V2f( 73.7884979, 12.4355049 ) ) )
__children["Backdrop5"]["__uiPosition"].setValue( imath.V2f( -19.3206863, -65.3111877 ) )
__children["Backdrop6"]["title"].setValue( '' )
__children["Backdrop6"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 7.62612152, -9.69398499 ), imath.V2f( 95.3143158, 8.90833282 ) ) )
__children["Backdrop6"]["__uiPosition"].setValue( imath.V2f( -40.7198067, -132.71637 ) )
__children["Backdrop7"]["title"].setValue( '' )
__children["Backdrop7"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 5.62234879, -14.5799999 ), imath.V2f( 93.1638641, 11.7196045 ) ) )
__children["Backdrop7"]["__uiPosition"].setValue( imath.V2f( -38.5693512, -154.942688 ) )
Gaffer.Metadata.registerValue( __children["ImageReader1"], 'annotation:greeting:text', 'Preview me' )
Gaffer.Metadata.registerValue( __children["ImageReader1"], 'annotation:greeting:color', imath.Color3f( 0, 0.400000006, 0 ) )
__children["ImageReader1"]["fileName"].setValue( '${project:rootDirectory}/renders/examples/wedgeTests/beauty/output.#.exr' )
__children["ImageReader1"]["refreshCount"].setValue( 1 )
__children["ImageReader1"]["start"]["mode"].setValue( 2 )
__children["ImageReader1"]["end"]["mode"].setValue( 2 )
__children["ImageReader1"]["end"]["frame"].setValue( 4 )
__children["ImageReader1"]["__uiPosition"].setValue( imath.V2f( 38.8510246, -164.436371 ) )
__children["Backdrop8"]["title"].setValue( 'Drive the shader parameters' )
__children["Backdrop8"]["description"].setValue( "Here, we drive the shader with the graph's Context. If you're not familiar with Contexts in Gaffer, in a nutshell they are small bundles of data which dictate the scene location and frame, as well as special state values called Context Variables. Every node computation needs Contexts to generate results.\n\nWhen this graph is executed, the Wedge node at the end of the graph will actually execute the whole graph multiple times, each time pushing its `wedge:metallic` Context Variable up the graph with an updated value.\n\nIn order to ramp up the Metallic parameter of the shader across several renders, a ContextQuery node gives it the current value of the `wedge:metallic` Context Variable. This way, every time the Wedge executes the graph, the resulting render is written a different Metallic value." )
__children["Backdrop8"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -19.0496788 ), imath.V2f( 42.4000015, 11.6291676 ) ) )
__children["Backdrop8"]["__uiPosition"].setValue( imath.V2f( -40.2212906, 7.92503262 ) )
__children["Backdrop9"]["title"].setValue( 'Preview the renders' )
__children["Backdrop9"]["description"].setValue( "Wedge nodes are intended for graphs meant for batch dispatching, but, like with any graph, it's handy to have an interactive preview. Here we establish an interactive renderer in a separate branch of the graph. However, without some extra setup it won't work: the upstream shader expects the `wedge:metallic` Context Variable, which won't exist when this branch is evaluated!\n\nThe simplest workaround is to add a ContextVariables node that creates its own `wedge:metallic` Context Variable with a value of `0.5`. This way, we have a working value for our Metallic parameter that only the interactive renderer uses.\n\nTo preview the shader with this working Metallic value:\n\n1. Select the InteractiveRender node.\n2. Click play.\n3. Select the Catalogue node. The interactive render will update as you make changes to the scene and shader.\n4. To preview the shader's variations, adjust the value of `wedge:metallic` in the ContextVariables node." )
__children["Backdrop9"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -26.3801651, -26.4160423 ), imath.V2f( 30.1399632, 8.42873955 ) ) )
__children["Backdrop9"]["__uiPosition"].setValue( imath.V2f( -35.8163452, -24.9779625 ) )
__children["Backdrop10"]["title"].setValue( 'Output path' )
__children["Backdrop10"]["description"].setValue( "We need to ensure that the render for each wedge is saved to a unique file. Here, the Wedge node's other Context Variable, `wedge:metallicIndex`, comes into play. As an integer, it represents the current render number and is unique per render. We can simply insert this Context Variable into the Outputs node's File Name plug (inside the Batch/Beauty output) to make sure the filename of each wedged render is unique.\n\nTo insert a Context Variable value into a string plug, just enclose it in curly braces and add a `\\$` prefix, like so: `\\${wedge:metallicIndex}`\n\nWith this value, the final output path for one of the renders will look like this:\n\n`~/gaffer/projects/default/renders/examples/wedgeTests/beauty/beauty.4.exr`" )
__children["Backdrop10"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -13.9212952, -17.7093353 ), imath.V2f( 43.3652649, 10.0430069 ) ) )
__children["Backdrop10"]["__uiPosition"].setValue( imath.V2f( -18.73316, -65.5734863 ) )
__children["Backdrop11"]["title"].setValue( 'Parameter value burn-in' )
__children["Backdrop11"]["description"].setValue( "It's common practice to annotate each wedged render with the value of the ramped value, to make review easier. Here we use some of Gaffer's image nodes to burn in annotations that list the shader parameter name and value onto each render.\n\nThe red nodes in Gaffer are task nodes. When you execute a graph, you're actually executing one or more task nodes. When chained together, they execute in series, starting with the earliest in the chain. This way, you can arrange for a string of operations (such as a render, write, or system command) to occur before the last task node is executed. In this graph, when you execute the Wedge node, the upstream Render, ImageWriter, and SystemCommand node will execute beforehand, in that order.\n\nLike before, we make use of the `wedge:metallic` Context Variable pushed by the Wedge node at the bottom of the graph. This time, the Text node inserts the variable's value into its string. Since this will be the same value as the shader parameter plug that we drive upstream, the two will always be in sync." )
__children["Backdrop11"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 4.16482925, -17.7999992 ), imath.V2f( 63.6761055, 11.3694763 ) ) )
__children["Backdrop11"]["__uiPosition"].setValue( imath.V2f( -36.9038315, -104.212944 ) )
__children["Backdrop12"]["title"].setValue( 'Clean up working files (optional)' )
__children["Backdrop12"]["description"].setValue( "Now that we have renders with burn-in, there's no need to keep the original beauty renders. We can use a SystemCommand task node to issue an `rm` command to delete them, right after the copies with burn-in are created." )
__children["Backdrop12"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 7.62612152, -8.82999992 ), imath.V2f( 64.7146454, 6.37140656 ) ) )
__children["Backdrop12"]["__uiPosition"].setValue( imath.V2f( -40.4838257, -133.045593 ) )
__children["Backdrop13"]["title"].setValue( 'Render the wedges' )
__children["Backdrop13"]["description"].setValue( 'To render the wedges in sequence, right-click the Wedge node, then select Execute from the context menu. This will trigger all the upstream task nodes to execute, in order.\n\nOnce rendered, you can preview the final images by selecting the ImageReader1 node, then scrubbing the timeline from frames 0-4.' )
__children["Backdrop13"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 5.62234879, -8.19999981 ), imath.V2f( 62.358757, 10.0430069 ) ) )
__children["Backdrop13"]["__uiPosition"].setValue( imath.V2f( -37.994175, -156.034775 ) )
Gaffer.Metadata.registerValue( __children["Backdrop14"], 'nodeGadget:color', imath.Color3f( 0.360000014, 0.504100025, 0.600000024 ) )
__children["Backdrop14"]["title"].setValue( 'Important: Context flow' )
__children["Backdrop14"]["description"].setValue( 'You may find it somewhat counter-intuitive, but Contexts and their variables actually flow up the graph, passing up from node to node, child to parent.\n\nWhen this graph is dispatched, the Wedge node will be executed. When that happens, it will in fact dictate the primary Context - including its `wedge:metallic` and `wedge:metallicIndex` Context Variables - because for each wedge its Context will propagate up through the graph, and each node will access that Context.\n\nContexts always pass between connected nodes, regardless of whether they process different data. For example, when joined by an intermediary task node, a 3D node will receive the same Contexts as a prior 2D node. This is the case in this graph, where we have 2D task nodes at the bottom of the graph that pass along Contexts to upstream 3D task nodes.' )
__children["Backdrop14"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 40, 33.5 ) ) )
__children["Backdrop14"]["__uiPosition"].setValue( imath.V2f( 56, -124 ) )
__children["principled_bsdf"]["parameters"]["metallic"].setInput( __children["ContextQuery"]["out"][0]["value"] )
__children["principled_bsdf"]["__uiPosition"].setValue( imath.V2f( 19.7259598, 3.79905653 ) )
__children["ContextQuery"]["queries"][0]["name"].setValue( 'wedge:metallic' )
__children["ContextQuery"]["__uiPosition"].setValue( imath.V2f( 8.95584965, 15.7990103 ) )
__children["StandardOptions"]["in"].setInput( __children["ShaderAssignment"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 128, 128 ) )
__children["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 36.2674637, -17.3574104 ) )
__children["Render"]["in"].setInput( __children["Outputs"]["out"] )
__children["Render"]["renderer"].setValue( 'Cycles' )
__children["Render"]["__uiPosition"].setValue( imath.V2f( 34.7674599, -86.6835556 ) )
__children["InteractiveRender"]["in"].setInput( __children["Outputs2"]["out"] )
__children["InteractiveRender"]["renderer"].setValue( 'Cycles' )
__children["InteractiveRender"]["__uiPosition"].setValue( imath.V2f( 17.4861603, -45.1578827 ) )


del __children

