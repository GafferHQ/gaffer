import Gaffer
import GafferArnold
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 13, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Backdrop_Enclosure"] = Gaffer.Backdrop( "Backdrop_Enclosure" )
parent.addChild( __children["Backdrop_Enclosure"] )
__children["Backdrop_Enclosure"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Enclosure"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Enclosure1"] = Gaffer.Backdrop( "Backdrop_Enclosure1" )
parent.addChild( __children["Backdrop_Enclosure1"] )
__children["Backdrop_Enclosure1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Enclosure1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Enclosure2"] = Gaffer.Backdrop( "Backdrop_Enclosure2" )
parent.addChild( __children["Backdrop_Enclosure2"] )
__children["Backdrop_Enclosure2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Enclosure2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Set_Spheres"] = GafferScene.Set( "Set_Spheres" )
parent.addChild( __children["Set_Spheres"] )
__children["Set_Spheres"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment_Wall"] = GafferScene.ShaderAssignment( "ShaderAssignment_Wall" )
parent.addChild( __children["ShaderAssignment_Wall"] )
__children["ShaderAssignment_Wall"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardSurface_Mirror"] = GafferArnold.ArnoldShader( "StandardSurface_Mirror" )
parent.addChild( __children["StandardSurface_Mirror"] )
__children["StandardSurface_Mirror"].loadShader( "standard_surface" )
__children["StandardSurface_Mirror"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TraceSet"] = GafferArnold.ArnoldShader( "TraceSet" )
parent.addChild( __children["TraceSet"] )
__children["TraceSet"].loadShader( "trace_set" )
__children["TraceSet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"] = Gaffer.Box( "Scene" )
parent.addChild( __children["Scene"] )
__children["Scene"].addChild( GafferScene.Plane( "Plane" ) )
__children["Scene"]["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Sphere( "Sphere" ) )
__children["Scene"]["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Sphere( "Sphere1" ) )
__children["Scene"]["Sphere1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Group( "Group" ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Camera( "Camera" ) )
__children["Scene"]["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Group( "Group1" ) )
__children["Scene"]["Group1"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group1"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group1"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Cube( "Cube" ) )
__children["Scene"]["Cube"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["Scene"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferArnold.ArnoldShader( "StandardSurface" ) )
__children["Scene"]["StandardSurface"].loadShader( "standard_surface" )
__children["Scene"]["StandardSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Scene"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Cube( "Cube1" ) )
__children["Scene"]["Cube1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferArnold.ArnoldLight( "SpotLight" ) )
__children["Scene"]["SpotLight"].loadShader( "spot_light" )
__children["Scene"]["SpotLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Scene"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Scene"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"] = Gaffer.Box( "RenderSetup" )
parent.addChild( __children["RenderSetup"] )
__children["RenderSetup"].addChild( GafferScene.StandardOptions( "StandardOptions" ) )
__children["RenderSetup"]["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"].addChild( GafferScene.Outputs( "Outputs" ) )
__children["RenderSetup"]["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderSetup"]["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"].addChild( GafferArnold.ArnoldOptions( "ArnoldOptions" ) )
__children["RenderSetup"]["ArnoldOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderSetup"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["RenderSetup"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderSetup"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["RenderSetup"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["RenderSetup"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"] = Gaffer.Backdrop( "Backdrop3" )
parent.addChild( __children["Backdrop3"] )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RaySwitchShader"] = GafferArnold.ArnoldShader( "RaySwitchShader" )
parent.addChild( __children["RaySwitchShader"] )
__children["RaySwitchShader"].loadShader( "ray_switch_shader" )
__children["RaySwitchShader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment_Plane"] = GafferScene.ShaderAssignment( "ShaderAssignment_Plane" )
parent.addChild( __children["ShaderAssignment_Plane"] )
__children["ShaderAssignment_Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardSurface"] = GafferArnold.ArnoldShader( "StandardSurface" )
parent.addChild( __children["StandardSurface"] )
__children["StandardSurface"].loadShader( "standard_surface" )
__children["StandardSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardSurface_SpecRefl"] = GafferArnold.ArnoldShader( "StandardSurface_SpecRefl" )
parent.addChild( __children["StandardSurface_SpecRefl"] )
__children["StandardSurface_SpecRefl"].loadShader( "standard_surface" )
__children["StandardSurface_SpecRefl"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TraceSet1"] = GafferArnold.ArnoldShader( "TraceSet1" )
parent.addChild( __children["TraceSet1"] )
__children["TraceSet1"].loadShader( "trace_set" )
__children["TraceSet1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"] = Gaffer.Backdrop( "Backdrop4" )
parent.addChild( __children["Backdrop4"] )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"] = Gaffer.Backdrop( "Backdrop5" )
parent.addChild( __children["Backdrop5"] )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["InteractiveRender"] = GafferScene.InteractiveRender( "InteractiveRender" )
parent.addChild( __children["InteractiveRender"] )
__children["InteractiveRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 100.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 36417 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Backdrop_Enclosure"]["title"].setValue( '' )
__children["Backdrop_Enclosure"]["__uiPosition"].setValue( imath.V2f( -46.6775818, -52.6396027 ) )
__children["Backdrop_Enclosure"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, -0.975715637 ), imath.V2f( 65.909256, 25.723774 ) ) )
__children["Backdrop_Enclosure1"]["title"].setValue( '' )
__children["Backdrop_Enclosure1"]["__uiPosition"].setValue( imath.V2f( -78.0190277, -88.5608521 ) )
__children["Backdrop_Enclosure1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 111.016075, 31.5589676 ) ) )
__children["Backdrop_Enclosure2"]["title"].setValue( '' )
__children["Backdrop_Enclosure2"]["__uiPosition"].setValue( imath.V2f( -95.7945938, -134.382812 ) )
__children["Backdrop_Enclosure2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 128.902069, 41.7833786 ) ) )
__children["Catalogue"]["images"]["Image"]["fileName"].setValue( '/Users/tom-dev/gaffer/projects/default/catalogues/traceSetsArnold/29e0723e8e55615fa32d13af2bbb3fce.exr' )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/examples/traceSetsArnold' )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( 8.24019814, -152.428772 ) )
__children["Set_Spheres"]["in"].setInput( __children["Scene"]["out"] )
__children["Set_Spheres"]["name"].setValue( 'render:spheres' )
__children["Set_Spheres"]["paths"].setValue( IECore.StringVectorData( [ '/world/geo/sphere', '/world/geo/sphere1' ] ) )
__children["Set_Spheres"]["__uiPosition"].setValue( imath.V2f( 7.23167801, -40.8156586 ) )
__children["ShaderAssignment_Wall"]["in"].setInput( __children["Set_Spheres"]["out"] )
__children["ShaderAssignment_Wall"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["ShaderAssignment_Wall"]["shader"].setInput( __children["TraceSet"]["out"] )
__children["ShaderAssignment_Wall"]["__uiPosition"].setValue( imath.V2f( 7.23167801, -72.7022171 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/world/geo/wall' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 20.9970455, -67.0182724 ) )
__children["StandardSurface_Mirror"]["parameters"]["base"].setValue( 0.10000000149011612 )
__children["StandardSurface_Mirror"]["parameters"]["specular_roughness"].setValue( 0.0 )
__children["StandardSurface_Mirror"]["parameters"]["specular_IOR"].setValue( 3.0 )
__children["StandardSurface_Mirror"]["__uiPosition"].setValue( imath.V2f( -23.6133442, -72.7022171 ) )
__children["TraceSet"]["parameters"]["passthrough"].setInput( __children["StandardSurface_Mirror"]["out"] )
__children["TraceSet"]["parameters"]["trace_set"].setValue( 'spheres' )
__children["TraceSet"]["parameters"]["inclusive"].setValue( False )
__children["TraceSet"]["__uiPosition"].setValue( imath.V2f( -9.16046238, -72.7022171 ) )
__children["Scene"]["Plane"]["transform"]["rotate"].setValue( imath.V3f( 90, 0, 0 ) )
__children["Scene"]["Plane"]["dimensions"].setValue( imath.V2f( 10, 10 ) )
__children["Scene"]["Plane"]["__uiPosition"].setValue( imath.V2f( -15.4823418, -1.23219872 ) )
__children["Scene"]["Sphere"]["transform"]["translate"].setValue( imath.V3f( -2, 1.20000005, 0 ) )
__children["Scene"]["Sphere"]["__uiPosition"].setValue( imath.V2f( -8.04999733, -6.33220005 ) )
__children["Scene"]["Sphere1"]["transform"]["translate"].setValue( imath.V3f( 2, 1.20000005, 0 ) )
__children["Scene"]["Sphere1"]["__uiPosition"].setValue( imath.V2f( -3.54999733, -1.29482365 ) )
__children["Scene"]["Group"]["in"][0].setInput( __children["Scene"]["Plane"]["out"] )
__children["Scene"]["Group"]["in"][1].setInput( __children["Scene"]["Sphere"]["out"] )
__children["Scene"]["Group"]["in"][2].setInput( __children["Scene"]["Sphere1"]["out"] )
__children["Scene"]["Group"]["in"][3].setInput( __children["Scene"]["Cube"]["out"] )
__children["Scene"]["Group"]["in"][4].setInput( __children["Scene"]["Cube1"]["out"] )
__children["Scene"]["Group"]["name"].setValue( 'geo' )
__children["Scene"]["Group"]["__uiPosition"].setValue( imath.V2f( -5.04999733, -21.5140648 ) )
__children["Scene"]["Camera"]["transform"]["translate"].setValue( imath.V3f( 3.25670719, 5.45241594, -4.50507736 ) )
__children["Scene"]["Camera"]["transform"]["rotate"].setValue( imath.V3f( -34.9508057, -207.410843, 3.5972178e-05 ) )
__children["Scene"]["Camera"]["__uiPosition"].setValue( imath.V2f( 14.9708405, -18.5018406 ) )
__children["Scene"]["Group1"]["in"][0].setInput( __children["Scene"]["Group"]["out"] )
__children["Scene"]["Group1"]["in"][1].setInput( __children["Scene"]["Camera"]["out"] )
__children["Scene"]["Group1"]["in"][2].setInput( __children["Scene"]["SpotLight"]["out"] )
__children["Scene"]["Group1"]["name"].setValue( 'world' )
__children["Scene"]["Group1"]["__uiPosition"].setValue( imath.V2f( 7.330616, -29.6781273 ) )
__children["Scene"]["Cube"]["transform"]["translate"].setValue( imath.V3f( 0, 1, 0 ) )
__children["Scene"]["Cube"]["dimensions"].setValue( imath.V3f( 1.5, 1.5, 1.5 ) )
__children["Scene"]["Cube"]["__uiPosition"].setValue( imath.V2f( 3.91113496, -6.53118753 ) )
__children["Scene"]["ShaderAssignment"]["in"].setInput( __children["Scene"]["Group1"]["out"] )
__children["Scene"]["ShaderAssignment"]["filter"].setInput( __children["Scene"]["PathFilter"]["out"] )
__children["Scene"]["ShaderAssignment"]["shader"].setInput( __children["Scene"]["StandardSurface"]["out"] )
__children["Scene"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 7.33061647, -37.8421898 ) )
__children["Scene"]["out"].setInput( __children["Scene"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'description', 'The processed output scene.' )
__children["Scene"]["StandardSurface"]["parameters"]["diffuse_roughness"].setValue( 1.0 )
__children["Scene"]["StandardSurface"]["parameters"]["specular"].setValue( 0.0 )
__children["Scene"]["StandardSurface"]["__uiPosition"].setValue( imath.V2f( -14.1731462, -37.8421898 ) )
__children["Scene"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/world/geo' ] ) )
__children["Scene"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( 23.9518776, -31.3910275 ) )
__children["Scene"]["Cube1"]["name"].setValue( 'wall' )
__children["Scene"]["Cube1"]["transform"]["translate"].setValue( imath.V3f( 0, 2.5, 2 ) )
__children["Scene"]["Cube1"]["dimensions"].setValue( imath.V3f( 10, 5, 0.100000001 ) )
__children["Scene"]["Cube1"]["__uiPosition"].setValue( imath.V2f( 8.69896221, -1.43982983 ) )
__children["Scene"]["SpotLight"]["name"].setValue( 'spotLight' )
__children["Scene"]["SpotLight"]["transform"]["translate"].setValue( imath.V3f( 0, 7, 0 ) )
__children["Scene"]["SpotLight"]["transform"]["rotate"].setValue( imath.V3f( -90, 0, 0 ) )
__children["Scene"]["SpotLight"]["parameters"]["intensity"].setValue( 100.0 )
__children["Scene"]["SpotLight"]["parameters"]["radius"].setValue( 0.5 )
__children["Scene"]["SpotLight"]["parameters"]["penumbra_angle"].setValue( 10.0 )
__children["Scene"]["SpotLight"]["__uiPosition"].setValue( imath.V2f( 28.9086266, -18.6722069 ) )
__children["Scene"]["BoxOut"]["in"].setInput( __children["Scene"]["ShaderAssignment"]["out"] )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Scene"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 8.82991123, -46.174221 ) )
__children["Scene"]["__uiPosition"].setValue( imath.V2f( 8.73167801, -15.9215794 ) )
__children["RenderSetup"]["StandardOptions"]["in"].setInput( __children["RenderSetup"]["ArnoldOptions"]["out"] )
__children["RenderSetup"]["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/world/camera' )
__children["RenderSetup"]["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["RenderSetup"]["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["RenderSetup"]["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 7.23167801, -94.1620102 ) )
__children["RenderSetup"]["Outputs"]["in"].setInput( __children["RenderSetup"]["StandardOptions"]["out"] )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["RenderSetup"]["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["RenderSetup"]["Outputs"]["__uiPosition"].setValue( imath.V2f( 7.23167801, -99.8260727 ) )
__children["RenderSetup"]["out"].setInput( __children["RenderSetup"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["out"], 'description', 'The processed output scene.' )
__children["RenderSetup"]["ArnoldOptions"]["in"].setInput( __children["RenderSetup"]["BoxIn"]["out"] )
__children["RenderSetup"]["ArnoldOptions"]["options"]["enableAdaptiveSampling"]["value"].setValue( True )
__children["RenderSetup"]["ArnoldOptions"]["options"]["aaSamplesMax"]["value"].setValue( 128 )
__children["RenderSetup"]["ArnoldOptions"]["options"]["giDiffuseDepth"]["enabled"].setValue( True )
__children["RenderSetup"]["ArnoldOptions"]["options"]["giSpecularDepth"]["enabled"].setValue( True )
__children["RenderSetup"]["ArnoldOptions"]["options"]["giTransmissionDepth"]["enabled"].setValue( True )
__children["RenderSetup"]["ArnoldOptions"]["__uiPosition"].setValue( imath.V2f( 7.22612143, -88.5188065 ) )
__children["RenderSetup"]["in"].setInput( __children["ShaderAssignment_Plane"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["in"], 'noduleLayout:spacing', 2.0 )
__children["RenderSetup"]["BoxOut"]["in"].setInput( __children["RenderSetup"]["Outputs"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["RenderSetup"]["BoxIn"]["__in"].setInput( __children["RenderSetup"]["in"] )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["BoxIn"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["BoxIn"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["RenderSetup"]["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["RenderSetup"]["__uiPosition"].setValue( imath.V2f( 8.73167801, -140.832336 ) )
__children["Backdrop"]["title"].setValue( 'Example: Trace Sets (Arnold)' )
__children["Backdrop"]["description"].setValue( 'Arnold allows both objects and rays to be tagged with one or more trace sets. This tagging effectively compartmentalizes the scene such that affected shading calculations simply don\'t "see" objects in other trace sets.\n\nIn this example we show how to make use of Arnold\'s trace sets, by creating a mirror that only reflects some of the objects in the scene.\n\n - The spheres are tagged as being part of an Arnold trace set by a Gaffer Set node that creates a set named with a special prefix.\n\n - Rays cast from a shader are tagged by inserting a TraceSet node into the shading network before assignment.' )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, 15.4610472 ), imath.V2f( 30, 46.6711006 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -1.96337986, -25.2303677 ) )
__children["Backdrop1"]["title"].setValue( 'Adding objects to a trace set' )
__children["Backdrop1"]["description"].setValue( 'Gaffer manages trace sets using the same nodes as normal sets. \n\nThe only difference is that the "render:" prefix is used to denote that it should be converted to a render trace set at render time. This is currently only supported by the Arnold render plugin.\n\nHere, the Set_Spheres node adds the two spheres to a set with the name "render:spheres". This tells Gaffer to define a matching Arnold trace set called "spheres" at render time. ' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -10.5610466 ), imath.V2f( 30, 13.4110298 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -34.6775818, -42.3268585 ) )
__children["Backdrop2"]["title"].setValue( 'Ray tagging' )
__children["Backdrop2"]["description"].setValue( 'As the spheres are in a custom trace set, we can create a reflective surface that refers to this set to control which objects are visible in its reflection.\n\nThe TraceSet node (Arnold > Shader > Utility > Trace Set) is connected after the shading network but before the shader is assigned. It modifies the rays traced by the network such that they either include or exclude the objects in the specified trace sets.\n\nWith the IPR turned on, try checking the Inclusive plug on and off. This will toggle the mirror between showing only the spheres and excluding them.' )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -18.8369827 ), imath.V2f( 30, 9.90445709 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( -66.0190277, -68.9063416 ) )
__children["Backdrop3"]["title"].setValue( 'Shadows' )
__children["Backdrop3"]["description"].setValue( "When the TraceSet node's Inclusive plug is turned off, the spheres will be excluded from the reflections, but their shadows will still appear on the ground.\n\nThis is because the plane is shaded normally, and the resulting surface appearance is re-used when calculating the reflection.\n\nIf you wanted to avoid this, you would need to adjust the shading of the plane to exclude the spheres - but only when it is being used in a reflection.\n\nThis can be achieved by using a RaySwitchShader node (Arnold > Shader > Utility > Ray Switch Shader) in the plane's shading network. Coupled with a TraceSet node (configured to exclude the spheres) in the specular reflection branch, the shading of the plane then ignores the spheres, so they don't cast a shadow.\n\nTry enabling the ShaderAssignment_Plane node whilst an IPR is running to see the difference." )
__children["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -0.707069397, -25.4862823 ), imath.V2f( 39.2929306, 12.5390015 ) ) )
__children["Backdrop3"]["__uiPosition"].setValue( imath.V2f( -93.0875244, -107.138428 ) )
__children["RaySwitchShader"]["parameters"]["camera"].setInput( __children["StandardSurface"]["out"] )
__children["RaySwitchShader"]["parameters"]["shadow"].setInput( __children["StandardSurface"]["out"] )
__children["RaySwitchShader"]["parameters"]["diffuse_reflection"].setInput( __children["StandardSurface"]["out"] )
__children["RaySwitchShader"]["parameters"]["diffuse_transmission"].setInput( __children["StandardSurface"]["out"] )
__children["RaySwitchShader"]["parameters"]["specular_reflection"].setInput( __children["TraceSet1"]["out"] )
__children["RaySwitchShader"]["parameters"]["specular_transmission"].setInput( __children["StandardSurface"]["out"] )
__children["RaySwitchShader"]["parameters"]["volume"].setInput( __children["StandardSurface"]["out"] )
__children["RaySwitchShader"]["__uiPosition"].setValue( imath.V2f( -9.90797043, -109.468712 ) )
__children["ShaderAssignment_Plane"]["enabled"].setValue( False )
__children["ShaderAssignment_Plane"]["in"].setInput( __children["ShaderAssignment_Wall"]["out"] )
__children["ShaderAssignment_Plane"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["ShaderAssignment_Plane"]["shader"].setInput( __children["RaySwitchShader"]["out"] )
__children["ShaderAssignment_Plane"]["__uiPosition"].setValue( imath.V2f( 7.23167801, -109.468712 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/world/geo/plane' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 18.0980415, -102.187462 ) )
__children["StandardSurface"]["parameters"]["diffuse_roughness"].setValue( 1.0 )
__children["StandardSurface"]["parameters"]["specular"].setValue( 0.0 )
__children["StandardSurface"]["__uiPosition"].setValue( imath.V2f( -39.750576, -105.868713 ) )
__children["StandardSurface_SpecRefl"]["parameters"]["diffuse_roughness"].setValue( 1.0 )
__children["StandardSurface_SpecRefl"]["parameters"]["specular"].setValue( 0.0 )
__children["StandardSurface_SpecRefl"]["__uiPosition"].setValue( imath.V2f( -39.509861, -121.635704 ) )
__children["TraceSet1"]["parameters"]["passthrough"].setInput( __children["StandardSurface_SpecRefl"]["out"] )
__children["TraceSet1"]["parameters"]["trace_set"].setValue( 'spheres' )
__children["TraceSet1"]["parameters"]["inclusive"].setValue( False )
__children["TraceSet1"]["__uiPosition"].setValue( imath.V2f( -24.7410622, -121.635704 ) )
Gaffer.Metadata.registerValue( __children["Backdrop4"], 'nodeGadget:color', imath.Color3f( 0.347900003, 0.438600004, 0.5 ) )
__children["Backdrop4"]["title"].setValue( 'Note: Sets for new locations' )
__children["Backdrop4"]["description"].setValue( 'Many location-creating scene nodes such as Sphere, Plane, Camera, lights, etc have a Sets plug.\n\nYou can add these newly-created locations to one or more sets by inputting a space-separated list of set names into this plug, instead of needing separate Set node(s) downstream.' )
__children["Backdrop4"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -11.9863358 ), imath.V2f( 25.2358131, 7.88689423 ) ) )
__children["Backdrop4"]["__uiPosition"].setValue( imath.V2f( 31.9273262, -34.8273163 ) )
Gaffer.Metadata.registerValue( __children["Backdrop5"], 'nodeGadget:color', imath.Color3f( 0.347900003, 0.438600004, 0.5 ) )
__children["Backdrop5"]["title"].setValue( 'Note: Trace set names' )
__children["Backdrop5"]["description"].setValue( 'The "render:" prefix is removed from the set name as part of the conversion to a native Arnold trace set at render time.\n\nAs such, when setting the Trace Set plug on the Trace Set node, you do not need the "render:" prefix, so it is just "spheres" in this example.\n' )
__children["Backdrop5"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -11.2776489 ), imath.V2f( 20, 10.6141357 ) ) )
__children["Backdrop5"]["__uiPosition"].setValue( imath.V2f( 45.5506096, -67.6185455 ) )
__children["InteractiveRender"]["in"].setInput( __children["RenderSetup"]["out"] )
__children["InteractiveRender"]["renderer"].setValue( 'Arnold' )
__children["InteractiveRender"]["__uiPosition"].setValue( imath.V2f( 7.23167753, -146.664368 ) )


del __children

