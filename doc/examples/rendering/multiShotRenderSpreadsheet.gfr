import Gaffer
import GafferCycles
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CyclesOptions"] = GafferCycles.CyclesOptions( "CyclesOptions" )
parent.addChild( __children["CyclesOptions"] )
__children["CyclesOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spreadsheet_RenderOptions"] = Gaffer.Spreadsheet( "Spreadsheet_RenderOptions" )
parent.addChild( __children["Spreadsheet_RenderOptions"] )
__children["Spreadsheet_RenderOptions"]["rows"].addColumn( Gaffer.NameValuePlug( "cycles:session:samples", Gaffer.IntPlug( "value", defaultValue = 1024, ), False, "samples", Gaffer.Plug.Flags.Default ), adoptEnabledPlug = True )
__children["Spreadsheet_RenderOptions"]["rows"].addColumn( Gaffer.NameValuePlug( "render:resolution", Gaffer.V2iPlug( "value", defaultValue = imath.V2i( 1024, 778 ), ), False, "renderResolution", Gaffer.Plug.Flags.Default ), adoptEnabledPlug = True )
__children["Spreadsheet_RenderOptions"]["rows"].addColumn( Gaffer.NameValuePlug( "render:resolutionMultiplier", Gaffer.FloatPlug( "value", defaultValue = 1.0, ), False, "resolutionMultiplier", Gaffer.Plug.Flags.Default ), adoptEnabledPlug = True )
__children["Spreadsheet_RenderOptions"]["rows"].addColumn( Gaffer.NameValuePlug( "render:camera", Gaffer.StringPlug( "value", defaultValue = '', ), False, "renderCamera", Gaffer.Plug.Flags.Default ), adoptEnabledPlug = True )
__children["Spreadsheet_RenderOptions"]["rows"].addRows( 4 )
__children["Spreadsheet_RenderOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 40073 )
parent["variables"]["member1"]["name"].setValue( 'shot' )
parent["variables"]["member1"]["value"].setValue( '1' )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["StandardOptions"]["options"]["render:camera"].setInput( __children["Spreadsheet_RenderOptions"]["out"]["renderCamera"] )
__children["StandardOptions"]["options"]["render:resolution"].setInput( __children["Spreadsheet_RenderOptions"]["out"]["renderResolution"] )
__children["StandardOptions"]["options"]["render:resolutionMultiplier"].setInput( __children["Spreadsheet_RenderOptions"]["out"]["resolutionMultiplier"] )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 13.1617184, 4.81647587 ) )
__children["Backdrop"]["title"].setValue( '' )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -9.84218407, -40.1002464 ), imath.V2f( 39.9908371, 10 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -11.0611553, 25.5103664 ) )
__children["Backdrop1"]["title"].setValue( 'Example: Multi-shot Render Spreadsheet' )
__children["Backdrop1"]["description"].setValue( "In this example, the graph is structured to handle the beauty render of multiple shots, each with slight differences in render settings. A Spreadsheet node drives the per-shot variations by modifying the renderer's Options nodes in response to different values of a `\\${shot}` Context Variable.\n\nSince this is a render graph, it's responsible for all render options, and should account for any default options should `\\${shot}` be undefined or have an unanticipated value. The spreadsheet's Default row defines the fallback, or default values of the globals." )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -18.1947308 ), imath.V2f( 30, 10 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -6.47388268, 25.3601151 ) )
__children["Backdrop2"]["title"].setValue( 'Global Context Variables' )
__children["Backdrop2"]["description"].setValue( 'Since the custom `\\${shot}` Context Variable needs to be available at every node in the graph, it must be added as a global Context Variable. These can be declared and assigned from the Settings window: File > Settings. In it, under the Variables tab, you will find some default global variables, but you can add new ones by clicking the plus button and giving them names and values. All of the standard plug types are supported: string, int, float, vector, etc.\n\nFor the purposes of this example, the value of `\\${shot}` is `1`. When this graph is executed, the dispatcher would override this value to the actual name of the shot being rendered.' )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 30, 17.6528759 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( 40.6892357, -4.37028837 ) )
__children["CyclesOptions"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["CyclesOptions"]["options"]["samples"].setInput( __children["Spreadsheet_RenderOptions"]["out"]["samples"] )
__children["CyclesOptions"]["__uiPosition"].setValue( imath.V2f( 13.1617184, -3.34758663 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["Spreadsheet_RenderOptions"]["selector"].setValue( '${shot}' )
__children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"]["enabled"].setValue( True )
__children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["enabled"].setValue( True )
__children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["enabled"].setValue( True )
__children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["value"].setValue( '/camera' )
__children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["enabled"].setValue( True )
__children["Spreadsheet_RenderOptions"]["rows"][1]["name"].setValue( '1' )
__children["Spreadsheet_RenderOptions"]["rows"][1]["cells"]["samples"]["value"]["value"].setValue( 2048 )
__children["Spreadsheet_RenderOptions"]["rows"][1]["cells"]["samples"]["value"]["enabled"].setValue( True )
__children["Spreadsheet_RenderOptions"]["rows"][2]["name"].setValue( '2A' )
__children["Spreadsheet_RenderOptions"]["rows"][2]["cells"]["renderResolution"]["value"]["value"].setValue( imath.V2i( 1920, 1080 ) )
__children["Spreadsheet_RenderOptions"]["rows"][2]["cells"]["renderResolution"]["value"]["enabled"].setValue( True )
__children["Spreadsheet_RenderOptions"]["rows"][3]["name"].setValue( '2B' )
__children["Spreadsheet_RenderOptions"]["rows"][3]["cells"]["samples"]["value"]["value"].setValue( 1536 )
__children["Spreadsheet_RenderOptions"]["rows"][3]["cells"]["samples"]["value"]["enabled"].setValue( True )
__children["Spreadsheet_RenderOptions"]["rows"][4]["name"].setValue( '2*' )
__children["Spreadsheet_RenderOptions"]["rows"][4]["cells"]["resolutionMultiplier"]["value"]["value"].setValue( 2.0 )
__children["Spreadsheet_RenderOptions"]["rows"][4]["cells"]["resolutionMultiplier"]["value"]["enabled"].setValue( True )
__children["Spreadsheet_RenderOptions"]["rows"][4]["cells"]["renderCamera"]["value"]["value"].setValue( '/alternateCamera' )
__children["Spreadsheet_RenderOptions"]["rows"][4]["cells"]["renderCamera"]["value"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"], 'spreadsheet:columnWidth', 60 )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"], 'nameValuePlugPlugValueWidget:ignoreNamePlug', True )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"], 'description', 'Number of samples to render for each pixel. This is for the\npath integrator, use the other sampling parameters for the\nbranched-path integrator.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"], 'label', 'Samples' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"]["name"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"]["name"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"]["name"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"]["enabled"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"]["enabled"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["samples"]["value"]["enabled"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"], 'spreadsheet:columnWidth', 72 )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"], 'spreadsheet:columnLabel', 'Resolution' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"], 'nameValuePlugPlugValueWidget:ignoreNamePlug', True )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"], 'description', 'The resolution of the image to be rendered.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"], 'label', 'Resolution' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["name"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["name"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["name"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["value"]["x"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["value"]["x"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["value"]["x"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["value"]["y"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["value"]["y"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["value"]["y"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["enabled"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["enabled"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderResolution"]["value"]["enabled"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"], 'spreadsheet:columnWidth', 130 )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"], 'nameValuePlugPlugValueWidget:ignoreNamePlug', True )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"], 'description', 'Multiplies the resolution of the render by this amount.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["name"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["name"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["name"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["enabled"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["enabled"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["resolutionMultiplier"]["value"]["enabled"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"], 'nameValuePlugPlugValueWidget:ignoreNamePlug', True )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"], 'description', 'The primary camera to be used for rendering. If this\nis not specified, then a default orthographic camera\npositioned at the origin is used.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"], 'label', 'Camera' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["name"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["name"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["name"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'plugValueWidget:type', 'GafferSceneUI.ScenePathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'path:valid', True )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'scenePathPlugValueWidget:setNames', IECore.StringVectorData( [ '__cameras' ] ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["value"], 'scenePathPlugValueWidget:setsLabel', 'Show only cameras' )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["enabled"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["enabled"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet_RenderOptions"]["rows"][0]["cells"]["renderCamera"]["value"]["enabled"], 'ui:scene:acceptsSetExpression:promotable', False )
__children["Spreadsheet_RenderOptions"]["__uiPosition"].setValue( imath.V2f( -5.44257355, -3.3605473 ) )


del __children

